/*
* generated by Xtext
*/
package org.caltoopia.frontend.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.caltoopia.frontend.services.CalGrammarAccess;

public class CalParser extends AbstractContentAssistParser {
	
	@Inject
	private CalGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.caltoopia.frontend.ui.contentassist.antlr.internal.InternalCalParser createParser() {
		org.caltoopia.frontend.ui.contentassist.antlr.internal.InternalCalParser result = new org.caltoopia.frontend.ui.contentassist.antlr.internal.InternalCalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAstTopAccess().getAlternatives(), "rule__AstTop__Alternatives");
					put(grammarAccess.getAstPackageAccess().getAlternatives_4(), "rule__AstPackage__Alternatives_4");
					put(grammarAccess.getAstUnitAccess().getAlternatives_4(), "rule__AstUnit__Alternatives_4");
					put(grammarAccess.getAstUnitAccess().getExternalsAlternatives_4_2_0(), "rule__AstUnit__ExternalsAlternatives_4_2_0");
					put(grammarAccess.getAstNamespaceAccess().getAlternatives_4(), "rule__AstNamespace__Alternatives_4");
					put(grammarAccess.getAstNamespaceAccess().getExternalsAlternatives_4_2_0(), "rule__AstNamespace__ExternalsAlternatives_4_2_0");
					put(grammarAccess.getAstAbstractActorAccess().getAlternatives(), "rule__AstAbstractActor__Alternatives");
					put(grammarAccess.getAstTypeDefinitionAccess().getAlternatives_4(), "rule__AstTypeDefinition__Alternatives_4");
					put(grammarAccess.getAstTypeDefinitionParameterAccess().getAlternatives(), "rule__AstTypeDefinitionParameter__Alternatives");
					put(grammarAccess.getAstActorAccess().getAlternatives_10(), "rule__AstActor__Alternatives_10");
					put(grammarAccess.getAstStatementAccess().getAlternatives(), "rule__AstStatement__Alternatives");
					put(grammarAccess.getAstExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstExpressionAndAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpressionAnd__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstExpressionEqAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpressionEq__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstExpressionRelationalAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpressionRelational__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstExpressionShiftAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpressionShift__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstExpressionAdditiveAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpressionAdditive__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAlternatives_1_1_0(), "rule__AstExpressionMultiplicative__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstExpressionUnaryAccess().getAlternatives(), "rule__AstExpressionUnary__Alternatives");
					put(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorAlternatives_0_1_0(), "rule__AstExpressionUnary__UnaryOperatorAlternatives_0_1_0");
					put(grammarAccess.getAstExpressionPostfixAccess().getAlternatives(), "rule__AstExpressionPostfix__Alternatives");
					put(grammarAccess.getAstExpressionLiteralAccess().getAlternatives(), "rule__AstExpressionLiteral__Alternatives");
					put(grammarAccess.getREALAccess().getAlternatives(), "rule__REAL__Alternatives");
					put(grammarAccess.getREALAccess().getAlternatives_0_2(), "rule__REAL__Alternatives_0_2");
					put(grammarAccess.getREALAccess().getAlternatives_1_1(), "rule__REAL__Alternatives_1_1");
					put(grammarAccess.getAstExpressionIntegerAccess().getValueAlternatives_0(), "rule__AstExpressionInteger__ValueAlternatives_0");
					put(grammarAccess.getAstSubPatternAccess().getAlternatives_1(), "rule__AstSubPattern__Alternatives_1");
					put(grammarAccess.getAstPatternExpressionAccess().getOperatorAlternatives_1_1_0(), "rule__AstPatternExpression__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstPatternExpressionAndAccess().getOperatorAlternatives_1_1_0(), "rule__AstPatternExpressionAnd__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstPatternExpressionEqAccess().getOperatorAlternatives_1_1_0(), "rule__AstPatternExpressionEq__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstPatternExpressionRelationalAccess().getOperatorAlternatives_1_1_0(), "rule__AstPatternExpressionRelational__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstPatternExpressionShiftAccess().getOperatorAlternatives_1_1_0(), "rule__AstPatternExpressionShift__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstPatternExpressionAdditiveAccess().getOperatorAlternatives_1_1_0(), "rule__AstPatternExpressionAdditive__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstPatternExpressionMultiplicativeAccess().getOperatorAlternatives_1_1_0(), "rule__AstPatternExpressionMultiplicative__OperatorAlternatives_1_1_0");
					put(grammarAccess.getAstPatternExpressionUnaryAccess().getAlternatives(), "rule__AstPatternExpressionUnary__Alternatives");
					put(grammarAccess.getAstPatternExpressionUnaryAccess().getUnaryOperatorAlternatives_0_1_0(), "rule__AstPatternExpressionUnary__UnaryOperatorAlternatives_0_1_0");
					put(grammarAccess.getAstPatternExpressionPostfixAccess().getAlternatives(), "rule__AstPatternExpressionPostfix__Alternatives");
					put(grammarAccess.getAstPatternExpressionLiteralAccess().getAlternatives(), "rule__AstPatternExpressionLiteral__Alternatives");
					put(grammarAccess.getAstTypeBuiltInAccess().getAlternatives(), "rule__AstTypeBuiltIn__Alternatives");
					put(grammarAccess.getAstTypeAccess().getAlternatives_1(), "rule__AstType__Alternatives_1");
					put(grammarAccess.getAstTypeParamAccess().getAlternatives(), "rule__AstTypeParam__Alternatives");
					put(grammarAccess.getAstTypeParamAccess().getNameAlternatives_1_0_0(), "rule__AstTypeParam__NameAlternatives_1_0_0");
					put(grammarAccess.getAstValuedVariableDeclarationAccess().getAlternatives_1_0(), "rule__AstValuedVariableDeclaration__Alternatives_1_0");
					put(grammarAccess.getAstPackageAccess().getGroup(), "rule__AstPackage__Group__0");
					put(grammarAccess.getAstUnitAccess().getGroup(), "rule__AstUnit__Group__0");
					put(grammarAccess.getAstNamespaceAccess().getGroup(), "rule__AstNamespace__Group__0");
					put(grammarAccess.getAstEntityAccess().getGroup(), "rule__AstEntity__Group__0");
					put(grammarAccess.getImportAccess().getGroup(), "rule__Import__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup(), "rule__QualifiedNameWithWildCard__Group__0");
					put(grammarAccess.getAstNetworkAccess().getGroup(), "rule__AstNetwork__Group__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_4(), "rule__AstNetwork__Group_4__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_4_1(), "rule__AstNetwork__Group_4_1__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_6(), "rule__AstNetwork__Group_6__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_6_1(), "rule__AstNetwork__Group_6_1__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_8(), "rule__AstNetwork__Group_8__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_8_1(), "rule__AstNetwork__Group_8_1__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_10(), "rule__AstNetwork__Group_10__0");
					put(grammarAccess.getAstNetworkAccess().getGroup_10_3(), "rule__AstNetwork__Group_10_3__0");
					put(grammarAccess.getAstActorDeclarationAccess().getGroup(), "rule__AstActorDeclaration__Group__0");
					put(grammarAccess.getAstActorDeclarationAccess().getGroup_4(), "rule__AstActorDeclaration__Group_4__0");
					put(grammarAccess.getAstActorDeclarationAccess().getGroup_4_1(), "rule__AstActorDeclaration__Group_4_1__0");
					put(grammarAccess.getAstAssignParameterAccess().getGroup(), "rule__AstAssignParameter__Group__0");
					put(grammarAccess.getAstStructureAccess().getGroup(), "rule__AstStructure__Group__0");
					put(grammarAccess.getAstConnectionAccess().getGroup(), "rule__AstConnection__Group__0");
					put(grammarAccess.getAstConnectionAccess().getGroup_0(), "rule__AstConnection__Group_0__0");
					put(grammarAccess.getAstConnectionAccess().getGroup_3(), "rule__AstConnection__Group_3__0");
					put(grammarAccess.getAstConnectionAccess().getGroup_5(), "rule__AstConnection__Group_5__0");
					put(grammarAccess.getAstConnectionAttributeAccess().getGroup(), "rule__AstConnectionAttribute__Group__0");
					put(grammarAccess.getAstConstantVariableAccess().getGroup(), "rule__AstConstantVariable__Group__0");
					put(grammarAccess.getAstExternalVariableAccess().getGroup(), "rule__AstExternalVariable__Group__0");
					put(grammarAccess.getAstTypeDefinitionAccess().getGroup(), "rule__AstTypeDefinition__Group__0");
					put(grammarAccess.getAstTypeDefinitionAccess().getGroup_2(), "rule__AstTypeDefinition__Group_2__0");
					put(grammarAccess.getAstTypeDefinitionAccess().getGroup_2_1(), "rule__AstTypeDefinition__Group_2_1__0");
					put(grammarAccess.getAstTypeDefinitionAccess().getGroup_2_1_1(), "rule__AstTypeDefinition__Group_2_1_1__0");
					put(grammarAccess.getAstTypeDefinitionAccess().getGroup_4_1(), "rule__AstTypeDefinition__Group_4_1__0");
					put(grammarAccess.getAstTypeDefinitionAccess().getGroup_4_1_1(), "rule__AstTypeDefinition__Group_4_1_1__0");
					put(grammarAccess.getAstTypeDefinitionTypeParameterAccess().getGroup(), "rule__AstTypeDefinitionTypeParameter__Group__0");
					put(grammarAccess.getAstTaggedTupleAccess().getGroup(), "rule__AstTaggedTuple__Group__0");
					put(grammarAccess.getAstTaggedTupleAccess().getGroup_1(), "rule__AstTaggedTuple__Group_1__0");
					put(grammarAccess.getAstTaggedTupleAccess().getGroup_1_1(), "rule__AstTaggedTuple__Group_1_1__0");
					put(grammarAccess.getAstTaggedTupleAccess().getGroup_1_1_1(), "rule__AstTaggedTuple__Group_1_1_1__0");
					put(grammarAccess.getAstTupleAccess().getGroup(), "rule__AstTuple__Group__0");
					put(grammarAccess.getAstTupleAccess().getGroup_1(), "rule__AstTuple__Group_1__0");
					put(grammarAccess.getAstTupleAccess().getGroup_1_1(), "rule__AstTuple__Group_1_1__0");
					put(grammarAccess.getAstTupleAccess().getGroup_1_1_1(), "rule__AstTuple__Group_1_1_1__0");
					put(grammarAccess.getAstActorAccess().getGroup(), "rule__AstActor__Group__0");
					put(grammarAccess.getAstActorAccess().getGroup_4(), "rule__AstActor__Group_4__0");
					put(grammarAccess.getAstActorAccess().getGroup_4_1(), "rule__AstActor__Group_4_1__0");
					put(grammarAccess.getAstActorAccess().getGroup_6(), "rule__AstActor__Group_6__0");
					put(grammarAccess.getAstActorAccess().getGroup_6_1(), "rule__AstActor__Group_6_1__0");
					put(grammarAccess.getAstActorAccess().getGroup_8(), "rule__AstActor__Group_8__0");
					put(grammarAccess.getAstActorAccess().getGroup_8_1(), "rule__AstActor__Group_8_1__0");
					put(grammarAccess.getAstPortAccess().getGroup(), "rule__AstPort__Group__0");
					put(grammarAccess.getAstFunctionAccess().getGroup(), "rule__AstFunction__Group__0");
					put(grammarAccess.getAstFunctionAccess().getGroup_5(), "rule__AstFunction__Group_5__0");
					put(grammarAccess.getAstFunctionAccess().getGroup_5_1(), "rule__AstFunction__Group_5_1__0");
					put(grammarAccess.getAstFunctionAccess().getGroup_9(), "rule__AstFunction__Group_9__0");
					put(grammarAccess.getAstFunctionAccess().getGroup_9_2(), "rule__AstFunction__Group_9_2__0");
					put(grammarAccess.getAstExternalFunctionAccess().getGroup(), "rule__AstExternalFunction__Group__0");
					put(grammarAccess.getAstExternalFunctionAccess().getGroup_6(), "rule__AstExternalFunction__Group_6__0");
					put(grammarAccess.getAstExternalFunctionAccess().getGroup_6_1(), "rule__AstExternalFunction__Group_6_1__0");
					put(grammarAccess.getAstProcedureAccess().getGroup(), "rule__AstProcedure__Group__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_4(), "rule__AstProcedure__Group_4__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_4_1(), "rule__AstProcedure__Group_4_1__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_6(), "rule__AstProcedure__Group_6__0");
					put(grammarAccess.getAstProcedureAccess().getGroup_6_2(), "rule__AstProcedure__Group_6_2__0");
					put(grammarAccess.getAstExternalProcedureAccess().getGroup(), "rule__AstExternalProcedure__Group__0");
					put(grammarAccess.getAstExternalProcedureAccess().getGroup_6(), "rule__AstExternalProcedure__Group_6__0");
					put(grammarAccess.getAstExternalProcedureAccess().getGroup_6_1(), "rule__AstExternalProcedure__Group_6_1__0");
					put(grammarAccess.getAstParameterAccess().getGroup(), "rule__AstParameter__Group__0");
					put(grammarAccess.getAstParameterAccess().getGroup_1(), "rule__AstParameter__Group_1__0");
					put(grammarAccess.getAstStateVariableAccess().getGroup(), "rule__AstStateVariable__Group__0");
					put(grammarAccess.getAstTagAccess().getGroup(), "rule__AstTag__Group__0");
					put(grammarAccess.getAstTagAccess().getGroup_1(), "rule__AstTag__Group_1__0");
					put(grammarAccess.getAstExternalActorAccess().getGroup(), "rule__AstExternalActor__Group__0");
					put(grammarAccess.getAstExternalActorAccess().getGroup_5(), "rule__AstExternalActor__Group_5__0");
					put(grammarAccess.getAstExternalActorAccess().getGroup_5_1(), "rule__AstExternalActor__Group_5_1__0");
					put(grammarAccess.getAstExternalActorAccess().getGroup_7(), "rule__AstExternalActor__Group_7__0");
					put(grammarAccess.getAstExternalActorAccess().getGroup_7_1(), "rule__AstExternalActor__Group_7_1__0");
					put(grammarAccess.getAstExternalActorAccess().getGroup_9(), "rule__AstExternalActor__Group_9__0");
					put(grammarAccess.getAstExternalActorAccess().getGroup_9_1(), "rule__AstExternalActor__Group_9_1__0");
					put(grammarAccess.getAstInequalityAccess().getGroup(), "rule__AstInequality__Group__0");
					put(grammarAccess.getAstInequalityAccess().getGroup_1(), "rule__AstInequality__Group_1__0");
					put(grammarAccess.getAstPriorityAccess().getGroup(), "rule__AstPriority__Group__0");
					put(grammarAccess.getAstScheduleAccess().getGroup(), "rule__AstSchedule__Group__0");
					put(grammarAccess.getAstTransitionAccess().getGroup(), "rule__AstTransition__Group__0");
					put(grammarAccess.getAstTransitionAccess().getGroup_3(), "rule__AstTransition__Group_3__0");
					put(grammarAccess.getAstActionAccess().getGroup(), "rule__AstAction__Group__0");
					put(grammarAccess.getAstActionAccess().getGroup_2(), "rule__AstAction__Group_2__0");
					put(grammarAccess.getAstActionAccess().getGroup_4(), "rule__AstAction__Group_4__0");
					put(grammarAccess.getAstActionAccess().getGroup_4_1(), "rule__AstAction__Group_4_1__0");
					put(grammarAccess.getAstActionAccess().getGroup_6(), "rule__AstAction__Group_6__0");
					put(grammarAccess.getAstActionAccess().getGroup_6_1(), "rule__AstAction__Group_6_1__0");
					put(grammarAccess.getAstActionAccess().getGroup_7(), "rule__AstAction__Group_7__0");
					put(grammarAccess.getAstActionAccess().getGroup_7_2(), "rule__AstAction__Group_7_2__0");
					put(grammarAccess.getAstActionAccess().getGroup_8(), "rule__AstAction__Group_8__0");
					put(grammarAccess.getAstActionAccess().getGroup_8_2(), "rule__AstAction__Group_8_2__0");
					put(grammarAccess.getAstActionAccess().getGroup_9(), "rule__AstAction__Group_9__0");
					put(grammarAccess.getAstInitializeAccess().getGroup(), "rule__AstInitialize__Group__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_2(), "rule__AstInitialize__Group_2__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_5(), "rule__AstInitialize__Group_5__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_5_1(), "rule__AstInitialize__Group_5_1__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_6(), "rule__AstInitialize__Group_6__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_6_2(), "rule__AstInitialize__Group_6_2__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_7(), "rule__AstInitialize__Group_7__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_7_2(), "rule__AstInitialize__Group_7_2__0");
					put(grammarAccess.getAstInitializeAccess().getGroup_8(), "rule__AstInitialize__Group_8__0");
					put(grammarAccess.getAstInputPatternAccess().getGroup(), "rule__AstInputPattern__Group__0");
					put(grammarAccess.getAstInputPatternAccess().getGroup_0(), "rule__AstInputPattern__Group_0__0");
					put(grammarAccess.getAstInputPatternAccess().getGroup_3(), "rule__AstInputPattern__Group_3__0");
					put(grammarAccess.getAstInputPatternAccess().getGroup_5(), "rule__AstInputPattern__Group_5__0");
					put(grammarAccess.getAstOutputPatternAccess().getGroup(), "rule__AstOutputPattern__Group__0");
					put(grammarAccess.getAstOutputPatternAccess().getGroup_0(), "rule__AstOutputPattern__Group_0__0");
					put(grammarAccess.getAstOutputPatternAccess().getGroup_3(), "rule__AstOutputPattern__Group_3__0");
					put(grammarAccess.getAstOutputPatternAccess().getGroup_5(), "rule__AstOutputPattern__Group_5__0");
					put(grammarAccess.getAstStatementAssignAccess().getGroup(), "rule__AstStatementAssign__Group__0");
					put(grammarAccess.getAstStatementAssignAccess().getGroup_1(), "rule__AstStatementAssign__Group_1__0");
					put(grammarAccess.getAstStatementCallAccess().getGroup(), "rule__AstStatementCall__Group__0");
					put(grammarAccess.getAstStatementCallAccess().getGroup_2(), "rule__AstStatementCall__Group_2__0");
					put(grammarAccess.getAstStatementCallAccess().getGroup_2_1(), "rule__AstStatementCall__Group_2_1__0");
					put(grammarAccess.getAstStatementForeachAccess().getGroup(), "rule__AstStatementForeach__Group__0");
					put(grammarAccess.getAstStatementForeachAccess().getGroup_2(), "rule__AstStatementForeach__Group_2__0");
					put(grammarAccess.getAstStatementForeachAccess().getGroup_3(), "rule__AstStatementForeach__Group_3__0");
					put(grammarAccess.getAstStatementForeachAccess().getGroup_3_2(), "rule__AstStatementForeach__Group_3_2__0");
					put(grammarAccess.getAstForeachGeneratorAccess().getGroup(), "rule__AstForeachGenerator__Group__0");
					put(grammarAccess.getAstStatementBlockAccess().getGroup(), "rule__AstStatementBlock__Group__0");
					put(grammarAccess.getAstStatementBlockAccess().getGroup_2(), "rule__AstStatementBlock__Group_2__0");
					put(grammarAccess.getAstStatementBlockAccess().getGroup_2_2(), "rule__AstStatementBlock__Group_2_2__0");
					put(grammarAccess.getAstStatementIfAccess().getGroup(), "rule__AstStatementIf__Group__0");
					put(grammarAccess.getAstStatementIfAccess().getGroup_4(), "rule__AstStatementIf__Group_4__0");
					put(grammarAccess.getAstStatementWhileAccess().getGroup(), "rule__AstStatementWhile__Group__0");
					put(grammarAccess.getAstStatementCaseAccess().getGroup(), "rule__AstStatementCase__Group__0");
					put(grammarAccess.getAstStatementAlternativeAccess().getGroup(), "rule__AstStatementAlternative__Group__0");
					put(grammarAccess.getAstStatementAlternativeAccess().getGroup_1(), "rule__AstStatementAlternative__Group_1__0");
					put(grammarAccess.getAstStatementAlternativeAccess().getGroup_1_2(), "rule__AstStatementAlternative__Group_1_2__0");
					put(grammarAccess.getAstExpressionAccess().getGroup(), "rule__AstExpression__Group__0");
					put(grammarAccess.getAstExpressionAccess().getGroup_1(), "rule__AstExpression__Group_1__0");
					put(grammarAccess.getAstExpressionAndAccess().getGroup(), "rule__AstExpressionAnd__Group__0");
					put(grammarAccess.getAstExpressionAndAccess().getGroup_1(), "rule__AstExpressionAnd__Group_1__0");
					put(grammarAccess.getAstExpressionBitorAccess().getGroup(), "rule__AstExpressionBitor__Group__0");
					put(grammarAccess.getAstExpressionBitorAccess().getGroup_1(), "rule__AstExpressionBitor__Group_1__0");
					put(grammarAccess.getAstExpressionBitxorAccess().getGroup(), "rule__AstExpressionBitxor__Group__0");
					put(grammarAccess.getAstExpressionBitxorAccess().getGroup_1(), "rule__AstExpressionBitxor__Group_1__0");
					put(grammarAccess.getAstExpressionBitandAccess().getGroup(), "rule__AstExpressionBitand__Group__0");
					put(grammarAccess.getAstExpressionBitandAccess().getGroup_1(), "rule__AstExpressionBitand__Group_1__0");
					put(grammarAccess.getAstExpressionEqAccess().getGroup(), "rule__AstExpressionEq__Group__0");
					put(grammarAccess.getAstExpressionEqAccess().getGroup_1(), "rule__AstExpressionEq__Group_1__0");
					put(grammarAccess.getAstExpressionRelationalAccess().getGroup(), "rule__AstExpressionRelational__Group__0");
					put(grammarAccess.getAstExpressionRelationalAccess().getGroup_1(), "rule__AstExpressionRelational__Group_1__0");
					put(grammarAccess.getAstExpressionShiftAccess().getGroup(), "rule__AstExpressionShift__Group__0");
					put(grammarAccess.getAstExpressionShiftAccess().getGroup_1(), "rule__AstExpressionShift__Group_1__0");
					put(grammarAccess.getAstExpressionAdditiveAccess().getGroup(), "rule__AstExpressionAdditive__Group__0");
					put(grammarAccess.getAstExpressionAdditiveAccess().getGroup_1(), "rule__AstExpressionAdditive__Group_1__0");
					put(grammarAccess.getAstExpressionMultiplicativeAccess().getGroup(), "rule__AstExpressionMultiplicative__Group__0");
					put(grammarAccess.getAstExpressionMultiplicativeAccess().getGroup_1(), "rule__AstExpressionMultiplicative__Group_1__0");
					put(grammarAccess.getAstExpressionExpAccess().getGroup(), "rule__AstExpressionExp__Group__0");
					put(grammarAccess.getAstExpressionExpAccess().getGroup_1(), "rule__AstExpressionExp__Group_1__0");
					put(grammarAccess.getAstExpressionUnaryAccess().getGroup_0(), "rule__AstExpressionUnary__Group_0__0");
					put(grammarAccess.getAstExpressionPostfixAccess().getGroup_5(), "rule__AstExpressionPostfix__Group_5__0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getGroup(), "rule__AstExpressionSymbolReference__Group__0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getGroup_1(), "rule__AstExpressionSymbolReference__Group_1__0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getGroup_3(), "rule__AstExpressionSymbolReference__Group_3__0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getGroup_4(), "rule__AstExpressionSymbolReference__Group_4__0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getGroup_4_1(), "rule__AstExpressionSymbolReference__Group_4_1__0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getGroup_4_1_1(), "rule__AstExpressionSymbolReference__Group_4_1_1__0");
					put(grammarAccess.getAstExpressionIfAccess().getGroup(), "rule__AstExpressionIf__Group__0");
					put(grammarAccess.getAstExpressionListAccess().getGroup(), "rule__AstExpressionList__Group__0");
					put(grammarAccess.getAstExpressionListAccess().getGroup_2(), "rule__AstExpressionList__Group_2__0");
					put(grammarAccess.getAstExpressionListAccess().getGroup_3(), "rule__AstExpressionList__Group_3__0");
					put(grammarAccess.getAstExpressionListAccess().getGroup_3_2(), "rule__AstExpressionList__Group_3_2__0");
					put(grammarAccess.getAstGeneratorAccess().getGroup(), "rule__AstGenerator__Group__0");
					put(grammarAccess.getAstExpressionCaseAccess().getGroup(), "rule__AstExpressionCase__Group__0");
					put(grammarAccess.getAstExpressionAlternativeAccess().getGroup(), "rule__AstExpressionAlternative__Group__0");
					put(grammarAccess.getAstExpressionAlternativeAccess().getGroup_1(), "rule__AstExpressionAlternative__Group_1__0");
					put(grammarAccess.getAstExpressionAlternativeAccess().getGroup_1_2(), "rule__AstExpressionAlternative__Group_1_2__0");
					put(grammarAccess.getREALAccess().getGroup_0(), "rule__REAL__Group_0__0");
					put(grammarAccess.getREALAccess().getGroup_1(), "rule__REAL__Group_1__0");
					put(grammarAccess.getAstPatternAccess().getGroup(), "rule__AstPattern__Group__0");
					put(grammarAccess.getAstPatternAccess().getGroup_3(), "rule__AstPattern__Group_3__0");
					put(grammarAccess.getAstSubPatternAccess().getGroup(), "rule__AstSubPattern__Group__0");
					put(grammarAccess.getAstSubPatternAccess().getGroup_0(), "rule__AstSubPattern__Group_0__0");
					put(grammarAccess.getAstPatternExpressionAccess().getGroup(), "rule__AstPatternExpression__Group__0");
					put(grammarAccess.getAstPatternExpressionAccess().getGroup_1(), "rule__AstPatternExpression__Group_1__0");
					put(grammarAccess.getAstPatternExpressionAndAccess().getGroup(), "rule__AstPatternExpressionAnd__Group__0");
					put(grammarAccess.getAstPatternExpressionAndAccess().getGroup_1(), "rule__AstPatternExpressionAnd__Group_1__0");
					put(grammarAccess.getAstPatternExpressionBitorAccess().getGroup(), "rule__AstPatternExpressionBitor__Group__0");
					put(grammarAccess.getAstPatternExpressionBitorAccess().getGroup_1(), "rule__AstPatternExpressionBitor__Group_1__0");
					put(grammarAccess.getAstPatternExpressionBitxorAccess().getGroup(), "rule__AstPatternExpressionBitxor__Group__0");
					put(grammarAccess.getAstPatternExpressionBitxorAccess().getGroup_1(), "rule__AstPatternExpressionBitxor__Group_1__0");
					put(grammarAccess.getAstPatternExpressionBitandAccess().getGroup(), "rule__AstPatternExpressionBitand__Group__0");
					put(grammarAccess.getAstPatternExpressionBitandAccess().getGroup_1(), "rule__AstPatternExpressionBitand__Group_1__0");
					put(grammarAccess.getAstPatternExpressionEqAccess().getGroup(), "rule__AstPatternExpressionEq__Group__0");
					put(grammarAccess.getAstPatternExpressionEqAccess().getGroup_1(), "rule__AstPatternExpressionEq__Group_1__0");
					put(grammarAccess.getAstPatternExpressionRelationalAccess().getGroup(), "rule__AstPatternExpressionRelational__Group__0");
					put(grammarAccess.getAstPatternExpressionRelationalAccess().getGroup_1(), "rule__AstPatternExpressionRelational__Group_1__0");
					put(grammarAccess.getAstPatternExpressionShiftAccess().getGroup(), "rule__AstPatternExpressionShift__Group__0");
					put(grammarAccess.getAstPatternExpressionShiftAccess().getGroup_1(), "rule__AstPatternExpressionShift__Group_1__0");
					put(grammarAccess.getAstPatternExpressionAdditiveAccess().getGroup(), "rule__AstPatternExpressionAdditive__Group__0");
					put(grammarAccess.getAstPatternExpressionAdditiveAccess().getGroup_1(), "rule__AstPatternExpressionAdditive__Group_1__0");
					put(grammarAccess.getAstPatternExpressionMultiplicativeAccess().getGroup(), "rule__AstPatternExpressionMultiplicative__Group__0");
					put(grammarAccess.getAstPatternExpressionMultiplicativeAccess().getGroup_1(), "rule__AstPatternExpressionMultiplicative__Group_1__0");
					put(grammarAccess.getAstPatternExpressionExpAccess().getGroup(), "rule__AstPatternExpressionExp__Group__0");
					put(grammarAccess.getAstPatternExpressionExpAccess().getGroup_1(), "rule__AstPatternExpressionExp__Group_1__0");
					put(grammarAccess.getAstPatternExpressionUnaryAccess().getGroup_0(), "rule__AstPatternExpressionUnary__Group_0__0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getGroup(), "rule__AstPatternExpressionSymbolReference__Group__0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getGroup_2(), "rule__AstPatternExpressionSymbolReference__Group_2__0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getGroup_4(), "rule__AstPatternExpressionSymbolReference__Group_4__0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getGroup_5(), "rule__AstPatternExpressionSymbolReference__Group_5__0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getGroup_5_1(), "rule__AstPatternExpressionSymbolReference__Group_5_1__0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getGroup_5_1_1(), "rule__AstPatternExpressionSymbolReference__Group_5_1_1__0");
					put(grammarAccess.getAstPatternExpressionIfAccess().getGroup(), "rule__AstPatternExpressionIf__Group__0");
					put(grammarAccess.getAstTypeUserAccess().getGroup(), "rule__AstTypeUser__Group__0");
					put(grammarAccess.getAstTypeAccess().getGroup(), "rule__AstType__Group__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_0(), "rule__AstType__Group_1_0__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_0_2(), "rule__AstType__Group_1_0_2__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_1(), "rule__AstType__Group_1_1__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_1_2(), "rule__AstType__Group_1_1_2__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_2(), "rule__AstType__Group_1_2__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_2_1(), "rule__AstType__Group_1_2_1__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_2_1_1(), "rule__AstType__Group_1_2_1_1__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_2_3(), "rule__AstType__Group_1_2_3__0");
					put(grammarAccess.getAstTypeAccess().getGroup_1_2_3_1(), "rule__AstType__Group_1_2_3_1__0");
					put(grammarAccess.getAstTypeParameterListAccess().getGroup(), "rule__AstTypeParameterList__Group__0");
					put(grammarAccess.getAstTypeParameterListAccess().getGroup_2(), "rule__AstTypeParameterList__Group_2__0");
					put(grammarAccess.getAstTypeParamAccess().getGroup_0(), "rule__AstTypeParam__Group_0__0");
					put(grammarAccess.getAstTypeParamAccess().getGroup_1(), "rule__AstTypeParam__Group_1__0");
					put(grammarAccess.getAstVariableDeclarationAccess().getGroup(), "rule__AstVariableDeclaration__Group__0");
					put(grammarAccess.getAstVariableDeclarationAccess().getGroup_3(), "rule__AstVariableDeclaration__Group_3__0");
					put(grammarAccess.getAstValuedVariableDeclarationAccess().getGroup(), "rule__AstValuedVariableDeclaration__Group__0");
					put(grammarAccess.getAstValuedVariableDeclarationAccess().getGroup_1(), "rule__AstValuedVariableDeclaration__Group_1__0");
					put(grammarAccess.getAstMemberAccessAccess().getGroup(), "rule__AstMemberAccess__Group__0");
					put(grammarAccess.getAstMemberAccessAccess().getGroup_2(), "rule__AstMemberAccess__Group_2__0");
					put(grammarAccess.getAstAnnotationAccess().getGroup(), "rule__AstAnnotation__Group__0");
					put(grammarAccess.getAstAnnotationAccess().getGroup_2(), "rule__AstAnnotation__Group_2__0");
					put(grammarAccess.getAstAnnotationAccess().getGroup_2_2(), "rule__AstAnnotation__Group_2_2__0");
					put(grammarAccess.getAstAnnotationArgumentAccess().getGroup(), "rule__AstAnnotationArgument__Group__0");
					put(grammarAccess.getAstPackageAccess().getNameAssignment_2(), "rule__AstPackage__NameAssignment_2");
					put(grammarAccess.getAstPackageAccess().getEntitiesAssignment_4_0(), "rule__AstPackage__EntitiesAssignment_4_0");
					put(grammarAccess.getAstPackageAccess().getImportsAssignment_4_1(), "rule__AstPackage__ImportsAssignment_4_1");
					put(grammarAccess.getAstPackageAccess().getUnitsAssignment_4_2(), "rule__AstPackage__UnitsAssignment_4_2");
					put(grammarAccess.getAstUnitAccess().getNameAssignment_2(), "rule__AstUnit__NameAssignment_2");
					put(grammarAccess.getAstUnitAccess().getFunctionsAssignment_4_0(), "rule__AstUnit__FunctionsAssignment_4_0");
					put(grammarAccess.getAstUnitAccess().getVariablesAssignment_4_1(), "rule__AstUnit__VariablesAssignment_4_1");
					put(grammarAccess.getAstUnitAccess().getExternalsAssignment_4_2(), "rule__AstUnit__ExternalsAssignment_4_2");
					put(grammarAccess.getAstNamespaceAccess().getAnnotationsAssignment_0(), "rule__AstNamespace__AnnotationsAssignment_0");
					put(grammarAccess.getAstNamespaceAccess().getNameAssignment_2(), "rule__AstNamespace__NameAssignment_2");
					put(grammarAccess.getAstNamespaceAccess().getFunctionsAssignment_4_0(), "rule__AstNamespace__FunctionsAssignment_4_0");
					put(grammarAccess.getAstNamespaceAccess().getVariablesAssignment_4_1(), "rule__AstNamespace__VariablesAssignment_4_1");
					put(grammarAccess.getAstNamespaceAccess().getExternalsAssignment_4_2(), "rule__AstNamespace__ExternalsAssignment_4_2");
					put(grammarAccess.getAstNamespaceAccess().getTypedefsAssignment_4_3(), "rule__AstNamespace__TypedefsAssignment_4_3");
					put(grammarAccess.getAstNamespaceAccess().getImportsAssignment_4_4(), "rule__AstNamespace__ImportsAssignment_4_4");
					put(grammarAccess.getAstNamespaceAccess().getEntitiesAssignment_4_5(), "rule__AstNamespace__EntitiesAssignment_4_5");
					put(grammarAccess.getAstNamespaceAccess().getNamespacesAssignment_4_6(), "rule__AstNamespace__NamespacesAssignment_4_6");
					put(grammarAccess.getAstEntityAccess().getAnnotationsAssignment_0(), "rule__AstEntity__AnnotationsAssignment_0");
					put(grammarAccess.getAstEntityAccess().getActorAssignment_1(), "rule__AstEntity__ActorAssignment_1");
					put(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1(), "rule__Import__ImportedNamespaceAssignment_1");
					put(grammarAccess.getAstNetworkAccess().getNameAssignment_2(), "rule__AstNetwork__NameAssignment_2");
					put(grammarAccess.getAstNetworkAccess().getParametersAssignment_4_0(), "rule__AstNetwork__ParametersAssignment_4_0");
					put(grammarAccess.getAstNetworkAccess().getParametersAssignment_4_1_1(), "rule__AstNetwork__ParametersAssignment_4_1_1");
					put(grammarAccess.getAstNetworkAccess().getInputsAssignment_6_0(), "rule__AstNetwork__InputsAssignment_6_0");
					put(grammarAccess.getAstNetworkAccess().getInputsAssignment_6_1_1(), "rule__AstNetwork__InputsAssignment_6_1_1");
					put(grammarAccess.getAstNetworkAccess().getOutputsAssignment_8_0(), "rule__AstNetwork__OutputsAssignment_8_0");
					put(grammarAccess.getAstNetworkAccess().getOutputsAssignment_8_1_1(), "rule__AstNetwork__OutputsAssignment_8_1_1");
					put(grammarAccess.getAstNetworkAccess().getVariablesAssignment_10_1(), "rule__AstNetwork__VariablesAssignment_10_1");
					put(grammarAccess.getAstNetworkAccess().getVariablesAssignment_10_3_0(), "rule__AstNetwork__VariablesAssignment_10_3_0");
					put(grammarAccess.getAstNetworkAccess().getInstancesAssignment_12(), "rule__AstNetwork__InstancesAssignment_12");
					put(grammarAccess.getAstNetworkAccess().getStructureAssignment_13(), "rule__AstNetwork__StructureAssignment_13");
					put(grammarAccess.getAstActorDeclarationAccess().getNameAssignment_0(), "rule__AstActorDeclaration__NameAssignment_0");
					put(grammarAccess.getAstActorDeclarationAccess().getTypeAssignment_2(), "rule__AstActorDeclaration__TypeAssignment_2");
					put(grammarAccess.getAstActorDeclarationAccess().getParametersAssignment_4_0(), "rule__AstActorDeclaration__ParametersAssignment_4_0");
					put(grammarAccess.getAstActorDeclarationAccess().getParametersAssignment_4_1_1(), "rule__AstActorDeclaration__ParametersAssignment_4_1_1");
					put(grammarAccess.getAstAssignParameterAccess().getNameAssignment_0(), "rule__AstAssignParameter__NameAssignment_0");
					put(grammarAccess.getAstAssignParameterAccess().getValueAssignment_2(), "rule__AstAssignParameter__ValueAssignment_2");
					put(grammarAccess.getAstStructureAccess().getConnectionsAssignment_1(), "rule__AstStructure__ConnectionsAssignment_1");
					put(grammarAccess.getAstConnectionAccess().getFromAssignment_0_0(), "rule__AstConnection__FromAssignment_0_0");
					put(grammarAccess.getAstConnectionAccess().getOutPortAssignment_1(), "rule__AstConnection__OutPortAssignment_1");
					put(grammarAccess.getAstConnectionAccess().getToAssignment_3_0(), "rule__AstConnection__ToAssignment_3_0");
					put(grammarAccess.getAstConnectionAccess().getInPortAssignment_4(), "rule__AstConnection__InPortAssignment_4");
					put(grammarAccess.getAstConnectionAccess().getAttributeAssignment_5_1(), "rule__AstConnection__AttributeAssignment_5_1");
					put(grammarAccess.getAstActorVariableReferenceAccess().getVariableAssignment(), "rule__AstActorVariableReference__VariableAssignment");
					put(grammarAccess.getAstConnectionAttributeAccess().getNameAssignment_0(), "rule__AstConnectionAttribute__NameAssignment_0");
					put(grammarAccess.getAstConnectionAttributeAccess().getValueAssignment_2(), "rule__AstConnectionAttribute__ValueAssignment_2");
					put(grammarAccess.getAstConstantVariableAccess().getConstantAssignment_1(), "rule__AstConstantVariable__ConstantAssignment_1");
					put(grammarAccess.getAstConstantVariableAccess().getValueAssignment_2(), "rule__AstConstantVariable__ValueAssignment_2");
					put(grammarAccess.getAstTypeDefinitionAccess().getDefinitionAssignment_0(), "rule__AstTypeDefinition__DefinitionAssignment_0");
					put(grammarAccess.getAstTypeDefinitionAccess().getNameAssignment_1(), "rule__AstTypeDefinition__NameAssignment_1");
					put(grammarAccess.getAstTypeDefinitionAccess().getParametersAssignment_2_1_0(), "rule__AstTypeDefinition__ParametersAssignment_2_1_0");
					put(grammarAccess.getAstTypeDefinitionAccess().getParametersAssignment_2_1_1_1(), "rule__AstTypeDefinition__ParametersAssignment_2_1_1_1");
					put(grammarAccess.getAstTypeDefinitionAccess().getTuplesAssignment_4_0(), "rule__AstTypeDefinition__TuplesAssignment_4_0");
					put(grammarAccess.getAstTypeDefinitionAccess().getTuplesAssignment_4_1_0(), "rule__AstTypeDefinition__TuplesAssignment_4_1_0");
					put(grammarAccess.getAstTypeDefinitionAccess().getTuplesAssignment_4_1_1_1(), "rule__AstTypeDefinition__TuplesAssignment_4_1_1_1");
					put(grammarAccess.getAstTypeDefinitionParameterAccess().getValueAssignment_0(), "rule__AstTypeDefinitionParameter__ValueAssignment_0");
					put(grammarAccess.getAstTypeDefinitionParameterAccess().getTypeAssignment_1(), "rule__AstTypeDefinitionParameter__TypeAssignment_1");
					put(grammarAccess.getAstTypeDefinitionTypeParameterAccess().getVariableAssignment_0(), "rule__AstTypeDefinitionTypeParameter__VariableAssignment_0");
					put(grammarAccess.getAstTypeDefinitionTypeParameterAccess().getNameAssignment_1(), "rule__AstTypeDefinitionTypeParameter__NameAssignment_1");
					put(grammarAccess.getAstTaggedTupleAccess().getNameAssignment_0(), "rule__AstTaggedTuple__NameAssignment_0");
					put(grammarAccess.getAstTaggedTupleAccess().getFieldsAssignment_1_1_0(), "rule__AstTaggedTuple__FieldsAssignment_1_1_0");
					put(grammarAccess.getAstTaggedTupleAccess().getFieldsAssignment_1_1_1_1(), "rule__AstTaggedTuple__FieldsAssignment_1_1_1_1");
					put(grammarAccess.getAstTupleAccess().getFieldsAssignment_1_1_0(), "rule__AstTuple__FieldsAssignment_1_1_0");
					put(grammarAccess.getAstTupleAccess().getFieldsAssignment_1_1_1_1(), "rule__AstTuple__FieldsAssignment_1_1_1_1");
					put(grammarAccess.getAstActorAccess().getNameAssignment_2(), "rule__AstActor__NameAssignment_2");
					put(grammarAccess.getAstActorAccess().getParametersAssignment_4_0(), "rule__AstActor__ParametersAssignment_4_0");
					put(grammarAccess.getAstActorAccess().getParametersAssignment_4_1_1(), "rule__AstActor__ParametersAssignment_4_1_1");
					put(grammarAccess.getAstActorAccess().getInputsAssignment_6_0(), "rule__AstActor__InputsAssignment_6_0");
					put(grammarAccess.getAstActorAccess().getInputsAssignment_6_1_1(), "rule__AstActor__InputsAssignment_6_1_1");
					put(grammarAccess.getAstActorAccess().getOutputsAssignment_8_0(), "rule__AstActor__OutputsAssignment_8_0");
					put(grammarAccess.getAstActorAccess().getOutputsAssignment_8_1_1(), "rule__AstActor__OutputsAssignment_8_1_1");
					put(grammarAccess.getAstActorAccess().getFunctionsAssignment_10_0(), "rule__AstActor__FunctionsAssignment_10_0");
					put(grammarAccess.getAstActorAccess().getProceduresAssignment_10_1(), "rule__AstActor__ProceduresAssignment_10_1");
					put(grammarAccess.getAstActorAccess().getActionsAssignment_10_2(), "rule__AstActor__ActionsAssignment_10_2");
					put(grammarAccess.getAstActorAccess().getInitializesAssignment_10_3(), "rule__AstActor__InitializesAssignment_10_3");
					put(grammarAccess.getAstActorAccess().getStateVariablesAssignment_10_4(), "rule__AstActor__StateVariablesAssignment_10_4");
					put(grammarAccess.getAstActorAccess().getSchedulesAssignment_10_5(), "rule__AstActor__SchedulesAssignment_10_5");
					put(grammarAccess.getAstActorAccess().getPrioritiesAssignment_10_6(), "rule__AstActor__PrioritiesAssignment_10_6");
					put(grammarAccess.getAstPortAccess().getAnnotationsAssignment_0(), "rule__AstPort__AnnotationsAssignment_0");
					put(grammarAccess.getAstPortAccess().getTypeAssignment_1(), "rule__AstPort__TypeAssignment_1");
					put(grammarAccess.getAstPortAccess().getNameAssignment_2(), "rule__AstPort__NameAssignment_2");
					put(grammarAccess.getAstFunctionAccess().getAnnotationsAssignment_1(), "rule__AstFunction__AnnotationsAssignment_1");
					put(grammarAccess.getAstFunctionAccess().getNameAssignment_3(), "rule__AstFunction__NameAssignment_3");
					put(grammarAccess.getAstFunctionAccess().getParametersAssignment_5_0(), "rule__AstFunction__ParametersAssignment_5_0");
					put(grammarAccess.getAstFunctionAccess().getParametersAssignment_5_1_1(), "rule__AstFunction__ParametersAssignment_5_1_1");
					put(grammarAccess.getAstFunctionAccess().getTypeAssignment_8(), "rule__AstFunction__TypeAssignment_8");
					put(grammarAccess.getAstFunctionAccess().getVariablesAssignment_9_1(), "rule__AstFunction__VariablesAssignment_9_1");
					put(grammarAccess.getAstFunctionAccess().getVariablesAssignment_9_2_1(), "rule__AstFunction__VariablesAssignment_9_2_1");
					put(grammarAccess.getAstFunctionAccess().getExpressionAssignment_11(), "rule__AstFunction__ExpressionAssignment_11");
					put(grammarAccess.getAstExternalFunctionAccess().getAnnotationsAssignment_1(), "rule__AstExternalFunction__AnnotationsAssignment_1");
					put(grammarAccess.getAstExternalFunctionAccess().getNameAssignment_4(), "rule__AstExternalFunction__NameAssignment_4");
					put(grammarAccess.getAstExternalFunctionAccess().getParametersAssignment_6_0(), "rule__AstExternalFunction__ParametersAssignment_6_0");
					put(grammarAccess.getAstExternalFunctionAccess().getParametersAssignment_6_1_1(), "rule__AstExternalFunction__ParametersAssignment_6_1_1");
					put(grammarAccess.getAstExternalFunctionAccess().getTypeAssignment_9(), "rule__AstExternalFunction__TypeAssignment_9");
					put(grammarAccess.getAstProcedureAccess().getAnnotationsAssignment_0(), "rule__AstProcedure__AnnotationsAssignment_0");
					put(grammarAccess.getAstProcedureAccess().getNameAssignment_2(), "rule__AstProcedure__NameAssignment_2");
					put(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_0(), "rule__AstProcedure__ParametersAssignment_4_0");
					put(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_1_1(), "rule__AstProcedure__ParametersAssignment_4_1_1");
					put(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_1(), "rule__AstProcedure__VariablesAssignment_6_1");
					put(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_2_1(), "rule__AstProcedure__VariablesAssignment_6_2_1");
					put(grammarAccess.getAstProcedureAccess().getStatementsAssignment_8(), "rule__AstProcedure__StatementsAssignment_8");
					put(grammarAccess.getAstExternalProcedureAccess().getAnnotationsAssignment_1(), "rule__AstExternalProcedure__AnnotationsAssignment_1");
					put(grammarAccess.getAstExternalProcedureAccess().getNameAssignment_4(), "rule__AstExternalProcedure__NameAssignment_4");
					put(grammarAccess.getAstExternalProcedureAccess().getParametersAssignment_6_0(), "rule__AstExternalProcedure__ParametersAssignment_6_0");
					put(grammarAccess.getAstExternalProcedureAccess().getParametersAssignment_6_1_1(), "rule__AstExternalProcedure__ParametersAssignment_6_1_1");
					put(grammarAccess.getAstParameterAccess().getValueAssignment_1_1(), "rule__AstParameter__ValueAssignment_1_1");
					put(grammarAccess.getAstTagAccess().getIdentifiersAssignment_0(), "rule__AstTag__IdentifiersAssignment_0");
					put(grammarAccess.getAstTagAccess().getIdentifiersAssignment_1_1(), "rule__AstTag__IdentifiersAssignment_1_1");
					put(grammarAccess.getAstExternalActorAccess().getNameAssignment_3(), "rule__AstExternalActor__NameAssignment_3");
					put(grammarAccess.getAstExternalActorAccess().getParametersAssignment_5_0(), "rule__AstExternalActor__ParametersAssignment_5_0");
					put(grammarAccess.getAstExternalActorAccess().getParametersAssignment_5_1_1(), "rule__AstExternalActor__ParametersAssignment_5_1_1");
					put(grammarAccess.getAstExternalActorAccess().getInputsAssignment_7_0(), "rule__AstExternalActor__InputsAssignment_7_0");
					put(grammarAccess.getAstExternalActorAccess().getInputsAssignment_7_1_1(), "rule__AstExternalActor__InputsAssignment_7_1_1");
					put(grammarAccess.getAstExternalActorAccess().getOutputsAssignment_9_0(), "rule__AstExternalActor__OutputsAssignment_9_0");
					put(grammarAccess.getAstExternalActorAccess().getOutputsAssignment_9_1_1(), "rule__AstExternalActor__OutputsAssignment_9_1_1");
					put(grammarAccess.getAstInequalityAccess().getTagsAssignment_0(), "rule__AstInequality__TagsAssignment_0");
					put(grammarAccess.getAstInequalityAccess().getTagsAssignment_1_1(), "rule__AstInequality__TagsAssignment_1_1");
					put(grammarAccess.getAstPriorityAccess().getInequalitiesAssignment_2(), "rule__AstPriority__InequalitiesAssignment_2");
					put(grammarAccess.getAstScheduleAccess().getInitialStateAssignment_2(), "rule__AstSchedule__InitialStateAssignment_2");
					put(grammarAccess.getAstScheduleAccess().getTransitionsAssignment_4(), "rule__AstSchedule__TransitionsAssignment_4");
					put(grammarAccess.getAstTransitionAccess().getSourceAssignment_0(), "rule__AstTransition__SourceAssignment_0");
					put(grammarAccess.getAstTransitionAccess().getTagsAssignment_2(), "rule__AstTransition__TagsAssignment_2");
					put(grammarAccess.getAstTransitionAccess().getTagsAssignment_3_1(), "rule__AstTransition__TagsAssignment_3_1");
					put(grammarAccess.getAstTransitionAccess().getTargetAssignment_6(), "rule__AstTransition__TargetAssignment_6");
					put(grammarAccess.getAstStateAccess().getNameAssignment(), "rule__AstState__NameAssignment");
					put(grammarAccess.getAstActionAccess().getAnnotationsAssignment_1(), "rule__AstAction__AnnotationsAssignment_1");
					put(grammarAccess.getAstActionAccess().getTagAssignment_2_0(), "rule__AstAction__TagAssignment_2_0");
					put(grammarAccess.getAstActionAccess().getInputsAssignment_4_0(), "rule__AstAction__InputsAssignment_4_0");
					put(grammarAccess.getAstActionAccess().getInputsAssignment_4_1_1(), "rule__AstAction__InputsAssignment_4_1_1");
					put(grammarAccess.getAstActionAccess().getOutputsAssignment_6_0(), "rule__AstAction__OutputsAssignment_6_0");
					put(grammarAccess.getAstActionAccess().getOutputsAssignment_6_1_1(), "rule__AstAction__OutputsAssignment_6_1_1");
					put(grammarAccess.getAstActionAccess().getGuardsAssignment_7_1(), "rule__AstAction__GuardsAssignment_7_1");
					put(grammarAccess.getAstActionAccess().getGuardsAssignment_7_2_1(), "rule__AstAction__GuardsAssignment_7_2_1");
					put(grammarAccess.getAstActionAccess().getVariablesAssignment_8_1(), "rule__AstAction__VariablesAssignment_8_1");
					put(grammarAccess.getAstActionAccess().getVariablesAssignment_8_2_1(), "rule__AstAction__VariablesAssignment_8_2_1");
					put(grammarAccess.getAstActionAccess().getStatementsAssignment_9_1(), "rule__AstAction__StatementsAssignment_9_1");
					put(grammarAccess.getAstInitializeAccess().getAnnotationsAssignment_1(), "rule__AstInitialize__AnnotationsAssignment_1");
					put(grammarAccess.getAstInitializeAccess().getTagAssignment_2_0(), "rule__AstInitialize__TagAssignment_2_0");
					put(grammarAccess.getAstInitializeAccess().getOutputsAssignment_5_0(), "rule__AstInitialize__OutputsAssignment_5_0");
					put(grammarAccess.getAstInitializeAccess().getOutputsAssignment_5_1_1(), "rule__AstInitialize__OutputsAssignment_5_1_1");
					put(grammarAccess.getAstInitializeAccess().getGuardsAssignment_6_1(), "rule__AstInitialize__GuardsAssignment_6_1");
					put(grammarAccess.getAstInitializeAccess().getGuardsAssignment_6_2_1(), "rule__AstInitialize__GuardsAssignment_6_2_1");
					put(grammarAccess.getAstInitializeAccess().getVariablesAssignment_7_1(), "rule__AstInitialize__VariablesAssignment_7_1");
					put(grammarAccess.getAstInitializeAccess().getVariablesAssignment_7_2_1(), "rule__AstInitialize__VariablesAssignment_7_2_1");
					put(grammarAccess.getAstInitializeAccess().getStatementsAssignment_8_1(), "rule__AstInitialize__StatementsAssignment_8_1");
					put(grammarAccess.getAstInputPatternAccess().getPortAssignment_0_0(), "rule__AstInputPattern__PortAssignment_0_0");
					put(grammarAccess.getAstInputPatternAccess().getTokensAssignment_2(), "rule__AstInputPattern__TokensAssignment_2");
					put(grammarAccess.getAstInputPatternAccess().getTokensAssignment_3_1(), "rule__AstInputPattern__TokensAssignment_3_1");
					put(grammarAccess.getAstInputPatternAccess().getRepeatAssignment_5_1(), "rule__AstInputPattern__RepeatAssignment_5_1");
					put(grammarAccess.getAstTokenAccess().getNameAssignment(), "rule__AstToken__NameAssignment");
					put(grammarAccess.getAstOutputPatternAccess().getPortAssignment_0_0(), "rule__AstOutputPattern__PortAssignment_0_0");
					put(grammarAccess.getAstOutputPatternAccess().getValuesAssignment_2(), "rule__AstOutputPattern__ValuesAssignment_2");
					put(grammarAccess.getAstOutputPatternAccess().getValuesAssignment_3_1(), "rule__AstOutputPattern__ValuesAssignment_3_1");
					put(grammarAccess.getAstOutputPatternAccess().getRepeatAssignment_5_1(), "rule__AstOutputPattern__RepeatAssignment_5_1");
					put(grammarAccess.getAstStatementAssignAccess().getTargetAssignment_0(), "rule__AstStatementAssign__TargetAssignment_0");
					put(grammarAccess.getAstStatementAssignAccess().getIndexesAssignment_1_1(), "rule__AstStatementAssign__IndexesAssignment_1_1");
					put(grammarAccess.getAstStatementAssignAccess().getMemberAssignment_2(), "rule__AstStatementAssign__MemberAssignment_2");
					put(grammarAccess.getAstStatementAssignAccess().getValueAssignment_4(), "rule__AstStatementAssign__ValueAssignment_4");
					put(grammarAccess.getAstStatementCallAccess().getProcedureAssignment_0(), "rule__AstStatementCall__ProcedureAssignment_0");
					put(grammarAccess.getAstStatementCallAccess().getParametersAssignment_2_0(), "rule__AstStatementCall__ParametersAssignment_2_0");
					put(grammarAccess.getAstStatementCallAccess().getParametersAssignment_2_1_1(), "rule__AstStatementCall__ParametersAssignment_2_1_1");
					put(grammarAccess.getAstStatementForeachAccess().getGeneratorsAssignment_1(), "rule__AstStatementForeach__GeneratorsAssignment_1");
					put(grammarAccess.getAstStatementForeachAccess().getGeneratorsAssignment_2_1(), "rule__AstStatementForeach__GeneratorsAssignment_2_1");
					put(grammarAccess.getAstStatementForeachAccess().getVariablesAssignment_3_1(), "rule__AstStatementForeach__VariablesAssignment_3_1");
					put(grammarAccess.getAstStatementForeachAccess().getVariablesAssignment_3_2_1(), "rule__AstStatementForeach__VariablesAssignment_3_2_1");
					put(grammarAccess.getAstStatementForeachAccess().getStatementsAssignment_5(), "rule__AstStatementForeach__StatementsAssignment_5");
					put(grammarAccess.getAstForeachGeneratorAccess().getVariableAssignment_0(), "rule__AstForeachGenerator__VariableAssignment_0");
					put(grammarAccess.getAstForeachGeneratorAccess().getExpressionAssignment_2(), "rule__AstForeachGenerator__ExpressionAssignment_2");
					put(grammarAccess.getAstStatementBlockAccess().getVariablesAssignment_2_1(), "rule__AstStatementBlock__VariablesAssignment_2_1");
					put(grammarAccess.getAstStatementBlockAccess().getVariablesAssignment_2_2_1(), "rule__AstStatementBlock__VariablesAssignment_2_2_1");
					put(grammarAccess.getAstStatementBlockAccess().getStatementsAssignment_3(), "rule__AstStatementBlock__StatementsAssignment_3");
					put(grammarAccess.getAstStatementIfAccess().getConditionAssignment_1(), "rule__AstStatementIf__ConditionAssignment_1");
					put(grammarAccess.getAstStatementIfAccess().getThenAssignment_3(), "rule__AstStatementIf__ThenAssignment_3");
					put(grammarAccess.getAstStatementIfAccess().getElseAssignment_4_1(), "rule__AstStatementIf__ElseAssignment_4_1");
					put(grammarAccess.getAstStatementWhileAccess().getConditionAssignment_1(), "rule__AstStatementWhile__ConditionAssignment_1");
					put(grammarAccess.getAstStatementWhileAccess().getStatementsAssignment_3(), "rule__AstStatementWhile__StatementsAssignment_3");
					put(grammarAccess.getAstStatementCaseAccess().getExpressionAssignment_1(), "rule__AstStatementCase__ExpressionAssignment_1");
					put(grammarAccess.getAstStatementCaseAccess().getCasesAssignment_3(), "rule__AstStatementCase__CasesAssignment_3");
					put(grammarAccess.getAstStatementAlternativeAccess().getPatternAssignment_0(), "rule__AstStatementAlternative__PatternAssignment_0");
					put(grammarAccess.getAstStatementAlternativeAccess().getGuardsAssignment_1_1(), "rule__AstStatementAlternative__GuardsAssignment_1_1");
					put(grammarAccess.getAstStatementAlternativeAccess().getGuardsAssignment_1_2_1(), "rule__AstStatementAlternative__GuardsAssignment_1_2_1");
					put(grammarAccess.getAstStatementAlternativeAccess().getStatementsAssignment_3(), "rule__AstStatementAlternative__StatementsAssignment_3");
					put(grammarAccess.getAstExpressionAccess().getOperatorAssignment_1_1(), "rule__AstExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionAccess().getRightAssignment_1_2(), "rule__AstExpression__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionAndAccess().getOperatorAssignment_1_1(), "rule__AstExpressionAnd__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionAndAccess().getRightAssignment_1_2(), "rule__AstExpressionAnd__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionBitorAccess().getOperatorAssignment_1_1(), "rule__AstExpressionBitor__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionBitorAccess().getRightAssignment_1_2(), "rule__AstExpressionBitor__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionBitxorAccess().getOperatorAssignment_1_1(), "rule__AstExpressionBitxor__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionBitxorAccess().getRightAssignment_1_2(), "rule__AstExpressionBitxor__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionBitandAccess().getOperatorAssignment_1_1(), "rule__AstExpressionBitand__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionBitandAccess().getRightAssignment_1_2(), "rule__AstExpressionBitand__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionEqAccess().getOperatorAssignment_1_1(), "rule__AstExpressionEq__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionEqAccess().getRightAssignment_1_2(), "rule__AstExpressionEq__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionRelationalAccess().getOperatorAssignment_1_1(), "rule__AstExpressionRelational__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionRelationalAccess().getRightAssignment_1_2(), "rule__AstExpressionRelational__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionShiftAccess().getOperatorAssignment_1_1(), "rule__AstExpressionShift__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionShiftAccess().getRightAssignment_1_2(), "rule__AstExpressionShift__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionAdditiveAccess().getOperatorAssignment_1_1(), "rule__AstExpressionAdditive__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionAdditiveAccess().getRightAssignment_1_2(), "rule__AstExpressionAdditive__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAssignment_1_1(), "rule__AstExpressionMultiplicative__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionMultiplicativeAccess().getRightAssignment_1_2(), "rule__AstExpressionMultiplicative__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionExpAccess().getOperatorAssignment_1_1(), "rule__AstExpressionExp__OperatorAssignment_1_1");
					put(grammarAccess.getAstExpressionExpAccess().getRightAssignment_1_2(), "rule__AstExpressionExp__RightAssignment_1_2");
					put(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorAssignment_0_1(), "rule__AstExpressionUnary__UnaryOperatorAssignment_0_1");
					put(grammarAccess.getAstExpressionUnaryAccess().getExpressionAssignment_0_2(), "rule__AstExpressionUnary__ExpressionAssignment_0_2");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getSymbolAssignment_0(), "rule__AstExpressionSymbolReference__SymbolAssignment_0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getIndexesAssignment_1_1(), "rule__AstExpressionSymbolReference__IndexesAssignment_1_1");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getMemberAssignment_2(), "rule__AstExpressionSymbolReference__MemberAssignment_2");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getCtorAssignment_3_1(), "rule__AstExpressionSymbolReference__CtorAssignment_3_1");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getCallAssignment_4_0(), "rule__AstExpressionSymbolReference__CallAssignment_4_0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getParametersAssignment_4_1_0(), "rule__AstExpressionSymbolReference__ParametersAssignment_4_1_0");
					put(grammarAccess.getAstExpressionSymbolReferenceAccess().getParametersAssignment_4_1_1_1(), "rule__AstExpressionSymbolReference__ParametersAssignment_4_1_1_1");
					put(grammarAccess.getAstExpressionIfAccess().getConditionAssignment_1(), "rule__AstExpressionIf__ConditionAssignment_1");
					put(grammarAccess.getAstExpressionIfAccess().getThenAssignment_3(), "rule__AstExpressionIf__ThenAssignment_3");
					put(grammarAccess.getAstExpressionIfAccess().getElseAssignment_5(), "rule__AstExpressionIf__ElseAssignment_5");
					put(grammarAccess.getAstExpressionListAccess().getExpressionsAssignment_1(), "rule__AstExpressionList__ExpressionsAssignment_1");
					put(grammarAccess.getAstExpressionListAccess().getExpressionsAssignment_2_1(), "rule__AstExpressionList__ExpressionsAssignment_2_1");
					put(grammarAccess.getAstExpressionListAccess().getGeneratorsAssignment_3_1(), "rule__AstExpressionList__GeneratorsAssignment_3_1");
					put(grammarAccess.getAstExpressionListAccess().getGeneratorsAssignment_3_2_1(), "rule__AstExpressionList__GeneratorsAssignment_3_2_1");
					put(grammarAccess.getAstGeneratorAccess().getVariableAssignment_1(), "rule__AstGenerator__VariableAssignment_1");
					put(grammarAccess.getAstGeneratorAccess().getExpressionAssignment_3(), "rule__AstGenerator__ExpressionAssignment_3");
					put(grammarAccess.getAstExpressionCaseAccess().getExpressionAssignment_1(), "rule__AstExpressionCase__ExpressionAssignment_1");
					put(grammarAccess.getAstExpressionCaseAccess().getCasesAssignment_3(), "rule__AstExpressionCase__CasesAssignment_3");
					put(grammarAccess.getAstExpressionCaseAccess().getDefaultAssignment_5(), "rule__AstExpressionCase__DefaultAssignment_5");
					put(grammarAccess.getAstExpressionAlternativeAccess().getPatternAssignment_0(), "rule__AstExpressionAlternative__PatternAssignment_0");
					put(grammarAccess.getAstExpressionAlternativeAccess().getGuardsAssignment_1_1(), "rule__AstExpressionAlternative__GuardsAssignment_1_1");
					put(grammarAccess.getAstExpressionAlternativeAccess().getGuardsAssignment_1_2_1(), "rule__AstExpressionAlternative__GuardsAssignment_1_2_1");
					put(grammarAccess.getAstExpressionAlternativeAccess().getExpressionAssignment_3(), "rule__AstExpressionAlternative__ExpressionAssignment_3");
					put(grammarAccess.getAstExpressionBooleanAccess().getValueAssignment(), "rule__AstExpressionBoolean__ValueAssignment");
					put(grammarAccess.getAstExpressionFloatAccess().getValueAssignment(), "rule__AstExpressionFloat__ValueAssignment");
					put(grammarAccess.getAstExpressionIntegerAccess().getValueAssignment(), "rule__AstExpressionInteger__ValueAssignment");
					put(grammarAccess.getAstExpressionStringAccess().getValueAssignment(), "rule__AstExpressionString__ValueAssignment");
					put(grammarAccess.getAstPatternAccess().getTagAssignment_0(), "rule__AstPattern__TagAssignment_0");
					put(grammarAccess.getAstPatternAccess().getSubpatternsAssignment_2(), "rule__AstPattern__SubpatternsAssignment_2");
					put(grammarAccess.getAstPatternAccess().getSubpatternsAssignment_3_1(), "rule__AstPattern__SubpatternsAssignment_3_1");
					put(grammarAccess.getAstSubPatternAccess().getLabelAssignment_0_0(), "rule__AstSubPattern__LabelAssignment_0_0");
					put(grammarAccess.getAstSubPatternAccess().getDontcareAssignment_1_0(), "rule__AstSubPattern__DontcareAssignment_1_0");
					put(grammarAccess.getAstSubPatternAccess().getConditionAssignment_1_1(), "rule__AstSubPattern__ConditionAssignment_1_1");
					put(grammarAccess.getAstSubPatternAccess().getVariableAssignment_1_2(), "rule__AstSubPattern__VariableAssignment_1_2");
					put(grammarAccess.getAstSubPatternAccess().getPatternAssignment_1_3(), "rule__AstSubPattern__PatternAssignment_1_3");
					put(grammarAccess.getAstPatternExpressionAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionAccess().getRightAssignment_1_2(), "rule__AstPatternExpression__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionAndAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionAnd__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionAndAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionAnd__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionBitorAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionBitor__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionBitorAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionBitor__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionBitxorAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionBitxor__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionBitxorAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionBitxor__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionBitandAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionBitand__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionBitandAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionBitand__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionEqAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionEq__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionEqAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionEq__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionRelationalAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionRelational__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionRelationalAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionRelational__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionShiftAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionShift__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionShiftAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionShift__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionAdditiveAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionAdditive__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionAdditiveAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionAdditive__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionMultiplicativeAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionMultiplicative__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionMultiplicativeAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionMultiplicative__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionExpAccess().getOperatorAssignment_1_1(), "rule__AstPatternExpressionExp__OperatorAssignment_1_1");
					put(grammarAccess.getAstPatternExpressionExpAccess().getRightAssignment_1_2(), "rule__AstPatternExpressionExp__RightAssignment_1_2");
					put(grammarAccess.getAstPatternExpressionUnaryAccess().getUnaryOperatorAssignment_0_1(), "rule__AstPatternExpressionUnary__UnaryOperatorAssignment_0_1");
					put(grammarAccess.getAstPatternExpressionUnaryAccess().getExpressionAssignment_0_2(), "rule__AstPatternExpressionUnary__ExpressionAssignment_0_2");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getSymbolAssignment_1(), "rule__AstPatternExpressionSymbolReference__SymbolAssignment_1");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getIndexesAssignment_2_1(), "rule__AstPatternExpressionSymbolReference__IndexesAssignment_2_1");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getMemberAssignment_3(), "rule__AstPatternExpressionSymbolReference__MemberAssignment_3");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getCtorAssignment_4_1(), "rule__AstPatternExpressionSymbolReference__CtorAssignment_4_1");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getCallAssignment_5_0(), "rule__AstPatternExpressionSymbolReference__CallAssignment_5_0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getParametersAssignment_5_1_0(), "rule__AstPatternExpressionSymbolReference__ParametersAssignment_5_1_0");
					put(grammarAccess.getAstPatternExpressionSymbolReferenceAccess().getParametersAssignment_5_1_1_1(), "rule__AstPatternExpressionSymbolReference__ParametersAssignment_5_1_1_1");
					put(grammarAccess.getAstPatternExpressionIfAccess().getConditionAssignment_1(), "rule__AstPatternExpressionIf__ConditionAssignment_1");
					put(grammarAccess.getAstPatternExpressionIfAccess().getThenAssignment_3(), "rule__AstPatternExpressionIf__ThenAssignment_3");
					put(grammarAccess.getAstPatternExpressionIfAccess().getElseAssignment_5(), "rule__AstPatternExpressionIf__ElseAssignment_5");
					put(grammarAccess.getAstTypeAccess().getBuiltinAssignment_1_0_0(), "rule__AstType__BuiltinAssignment_1_0_0");
					put(grammarAccess.getAstTypeAccess().getTypeParamsAssignment_1_0_1(), "rule__AstType__TypeParamsAssignment_1_0_1");
					put(grammarAccess.getAstTypeAccess().getDimensionsAssignment_1_0_2_1(), "rule__AstType__DimensionsAssignment_1_0_2_1");
					put(grammarAccess.getAstTypeAccess().getNameAssignment_1_1_0(), "rule__AstType__NameAssignment_1_1_0");
					put(grammarAccess.getAstTypeAccess().getTypeParamsAssignment_1_1_1(), "rule__AstType__TypeParamsAssignment_1_1_1");
					put(grammarAccess.getAstTypeAccess().getDimensionsAssignment_1_1_2_1(), "rule__AstType__DimensionsAssignment_1_1_2_1");
					put(grammarAccess.getAstTypeAccess().getDomainAssignment_1_2_1_0(), "rule__AstType__DomainAssignment_1_2_1_0");
					put(grammarAccess.getAstTypeAccess().getDomainAssignment_1_2_1_1_1(), "rule__AstType__DomainAssignment_1_2_1_1_1");
					put(grammarAccess.getAstTypeAccess().getCodomainAssignment_1_2_3_0(), "rule__AstType__CodomainAssignment_1_2_3_0");
					put(grammarAccess.getAstTypeAccess().getDomainAssignment_1_2_3_1_1(), "rule__AstType__DomainAssignment_1_2_3_1_1");
					put(grammarAccess.getAstTypeParameterListAccess().getParamsAssignment_1(), "rule__AstTypeParameterList__ParamsAssignment_1");
					put(grammarAccess.getAstTypeParameterListAccess().getParamsAssignment_2_1(), "rule__AstTypeParameterList__ParamsAssignment_2_1");
					put(grammarAccess.getAstTypeParamAccess().getNameAssignment_0_0(), "rule__AstTypeParam__NameAssignment_0_0");
					put(grammarAccess.getAstTypeParamAccess().getValueAssignment_0_2(), "rule__AstTypeParam__ValueAssignment_0_2");
					put(grammarAccess.getAstTypeParamAccess().getNameAssignment_1_0(), "rule__AstTypeParam__NameAssignment_1_0");
					put(grammarAccess.getAstTypeParamAccess().getTypeAssignment_1_2(), "rule__AstTypeParam__TypeAssignment_1_2");
					put(grammarAccess.getAstVariableDeclarationAccess().getAnnotationsAssignment_0(), "rule__AstVariableDeclaration__AnnotationsAssignment_0");
					put(grammarAccess.getAstVariableDeclarationAccess().getTypeAssignment_1(), "rule__AstVariableDeclaration__TypeAssignment_1");
					put(grammarAccess.getAstVariableDeclarationAccess().getNameAssignment_2(), "rule__AstVariableDeclaration__NameAssignment_2");
					put(grammarAccess.getAstVariableDeclarationAccess().getDimensionsAssignment_3_1(), "rule__AstVariableDeclaration__DimensionsAssignment_3_1");
					put(grammarAccess.getAstValuedVariableDeclarationAccess().getConstantAssignment_1_0_0(), "rule__AstValuedVariableDeclaration__ConstantAssignment_1_0_0");
					put(grammarAccess.getAstValuedVariableDeclarationAccess().getValueAssignment_1_1(), "rule__AstValuedVariableDeclaration__ValueAssignment_1_1");
					put(grammarAccess.getAstMemberAccessAccess().getNameAssignment_1(), "rule__AstMemberAccess__NameAssignment_1");
					put(grammarAccess.getAstMemberAccessAccess().getMemberIndexAssignment_2_1(), "rule__AstMemberAccess__MemberIndexAssignment_2_1");
					put(grammarAccess.getAstAnnotationAccess().getNameAssignment_1(), "rule__AstAnnotation__NameAssignment_1");
					put(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_1(), "rule__AstAnnotation__ArgumentsAssignment_2_1");
					put(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_2_1(), "rule__AstAnnotation__ArgumentsAssignment_2_2_1");
					put(grammarAccess.getAstAnnotationArgumentAccess().getNameAssignment_0(), "rule__AstAnnotationArgument__NameAssignment_0");
					put(grammarAccess.getAstAnnotationArgumentAccess().getValueAssignment_2(), "rule__AstAnnotationArgument__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.caltoopia.frontend.ui.contentassist.antlr.internal.InternalCalParser typedParser = (org.caltoopia.frontend.ui.contentassist.antlr.internal.InternalCalParser) parser;
			typedParser.entryRuleAstTop();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
