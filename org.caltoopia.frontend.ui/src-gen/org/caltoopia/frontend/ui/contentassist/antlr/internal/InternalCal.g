/*
* generated by Xtext
*/
grammar InternalCal;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.caltoopia.frontend.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.caltoopia.frontend.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.caltoopia.frontend.services.CalGrammarAccess;

}

@parser::members {
 
 	private CalGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CalGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAstTop
entryRuleAstTop 
:
{ before(grammarAccess.getAstTopRule()); }
	 ruleAstTop
{ after(grammarAccess.getAstTopRule()); } 
	 EOF 
;

// Rule AstTop
ruleAstTop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTopAccess().getAlternatives()); }
(rule__AstTop__Alternatives)
{ after(grammarAccess.getAstTopAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstPackage
entryRuleAstPackage 
:
{ before(grammarAccess.getAstPackageRule()); }
	 ruleAstPackage
{ after(grammarAccess.getAstPackageRule()); } 
	 EOF 
;

// Rule AstPackage
ruleAstPackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstPackageAccess().getGroup()); }
(rule__AstPackage__Group__0)
{ after(grammarAccess.getAstPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstUnit
entryRuleAstUnit 
:
{ before(grammarAccess.getAstUnitRule()); }
	 ruleAstUnit
{ after(grammarAccess.getAstUnitRule()); } 
	 EOF 
;

// Rule AstUnit
ruleAstUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstUnitAccess().getGroup()); }
(rule__AstUnit__Group__0)
{ after(grammarAccess.getAstUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstNamespace
entryRuleAstNamespace 
:
{ before(grammarAccess.getAstNamespaceRule()); }
	 ruleAstNamespace
{ after(grammarAccess.getAstNamespaceRule()); } 
	 EOF 
;

// Rule AstNamespace
ruleAstNamespace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstNamespaceAccess().getGroup()); }
(rule__AstNamespace__Group__0)
{ after(grammarAccess.getAstNamespaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstEntity
entryRuleAstEntity 
:
{ before(grammarAccess.getAstEntityRule()); }
	 ruleAstEntity
{ after(grammarAccess.getAstEntityRule()); } 
	 EOF 
;

// Rule AstEntity
ruleAstEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstEntityAccess().getGroup()); }
(rule__AstEntity__Group__0)
{ after(grammarAccess.getAstEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstAbstractActor
entryRuleAstAbstractActor 
:
{ before(grammarAccess.getAstAbstractActorRule()); }
	 ruleAstAbstractActor
{ after(grammarAccess.getAstAbstractActorRule()); } 
	 EOF 
;

// Rule AstAbstractActor
ruleAstAbstractActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstAbstractActorAccess().getAlternatives()); }
(rule__AstAbstractActor__Alternatives)
{ after(grammarAccess.getAstAbstractActorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstNetwork
entryRuleAstNetwork 
:
{ before(grammarAccess.getAstNetworkRule()); }
	 ruleAstNetwork
{ after(grammarAccess.getAstNetworkRule()); } 
	 EOF 
;

// Rule AstNetwork
ruleAstNetwork
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup()); }
(rule__AstNetwork__Group__0)
{ after(grammarAccess.getAstNetworkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstActorDeclaration
entryRuleAstActorDeclaration 
:
{ before(grammarAccess.getAstActorDeclarationRule()); }
	 ruleAstActorDeclaration
{ after(grammarAccess.getAstActorDeclarationRule()); } 
	 EOF 
;

// Rule AstActorDeclaration
ruleAstActorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getGroup()); }
(rule__AstActorDeclaration__Group__0)
{ after(grammarAccess.getAstActorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstAssignParameter
entryRuleAstAssignParameter 
:
{ before(grammarAccess.getAstAssignParameterRule()); }
	 ruleAstAssignParameter
{ after(grammarAccess.getAstAssignParameterRule()); } 
	 EOF 
;

// Rule AstAssignParameter
ruleAstAssignParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstAssignParameterAccess().getGroup()); }
(rule__AstAssignParameter__Group__0)
{ after(grammarAccess.getAstAssignParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStructure
entryRuleAstStructure 
:
{ before(grammarAccess.getAstStructureRule()); }
	 ruleAstStructure
{ after(grammarAccess.getAstStructureRule()); } 
	 EOF 
;

// Rule AstStructure
ruleAstStructure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStructureAccess().getGroup()); }
(rule__AstStructure__Group__0)
{ after(grammarAccess.getAstStructureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstConnection
entryRuleAstConnection 
:
{ before(grammarAccess.getAstConnectionRule()); }
	 ruleAstConnection
{ after(grammarAccess.getAstConnectionRule()); } 
	 EOF 
;

// Rule AstConnection
ruleAstConnection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstConnectionAccess().getGroup()); }
(rule__AstConnection__Group__0)
{ after(grammarAccess.getAstConnectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstActorVariableReference
entryRuleAstActorVariableReference 
:
{ before(grammarAccess.getAstActorVariableReferenceRule()); }
	 ruleAstActorVariableReference
{ after(grammarAccess.getAstActorVariableReferenceRule()); } 
	 EOF 
;

// Rule AstActorVariableReference
ruleAstActorVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstActorVariableReferenceAccess().getVariableAssignment()); }
(rule__AstActorVariableReference__VariableAssignment)
{ after(grammarAccess.getAstActorVariableReferenceAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstConnectionAttribute
entryRuleAstConnectionAttribute 
:
{ before(grammarAccess.getAstConnectionAttributeRule()); }
	 ruleAstConnectionAttribute
{ after(grammarAccess.getAstConnectionAttributeRule()); } 
	 EOF 
;

// Rule AstConnectionAttribute
ruleAstConnectionAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstConnectionAttributeAccess().getGroup()); }
(rule__AstConnectionAttribute__Group__0)
{ after(grammarAccess.getAstConnectionAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstConstantVariable
entryRuleAstConstantVariable 
:
{ before(grammarAccess.getAstConstantVariableRule()); }
	 ruleAstConstantVariable
{ after(grammarAccess.getAstConstantVariableRule()); } 
	 EOF 
;

// Rule AstConstantVariable
ruleAstConstantVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstConstantVariableAccess().getGroup()); }
(rule__AstConstantVariable__Group__0)
{ after(grammarAccess.getAstConstantVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExternalVariable
entryRuleAstExternalVariable 
:
{ before(grammarAccess.getAstExternalVariableRule()); }
	 ruleAstExternalVariable
{ after(grammarAccess.getAstExternalVariableRule()); } 
	 EOF 
;

// Rule AstExternalVariable
ruleAstExternalVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExternalVariableAccess().getGroup()); }
(rule__AstExternalVariable__Group__0)
{ after(grammarAccess.getAstExternalVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTypeDefinition
entryRuleAstTypeDefinition 
:
{ before(grammarAccess.getAstTypeDefinitionRule()); }
	 ruleAstTypeDefinition
{ after(grammarAccess.getAstTypeDefinitionRule()); } 
	 EOF 
;

// Rule AstTypeDefinition
ruleAstTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getGroup()); }
(rule__AstTypeDefinition__Group__0)
{ after(grammarAccess.getAstTypeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTypeDefinitionParameter
entryRuleAstTypeDefinitionParameter 
:
{ before(grammarAccess.getAstTypeDefinitionParameterRule()); }
	 ruleAstTypeDefinitionParameter
{ after(grammarAccess.getAstTypeDefinitionParameterRule()); } 
	 EOF 
;

// Rule AstTypeDefinitionParameter
ruleAstTypeDefinitionParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTypeDefinitionParameterAccess().getAlternatives()); }
(rule__AstTypeDefinitionParameter__Alternatives)
{ after(grammarAccess.getAstTypeDefinitionParameterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTypeDefinitionTypeParameter
entryRuleAstTypeDefinitionTypeParameter 
:
{ before(grammarAccess.getAstTypeDefinitionTypeParameterRule()); }
	 ruleAstTypeDefinitionTypeParameter
{ after(grammarAccess.getAstTypeDefinitionTypeParameterRule()); } 
	 EOF 
;

// Rule AstTypeDefinitionTypeParameter
ruleAstTypeDefinitionTypeParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTypeDefinitionTypeParameterAccess().getNameAssignment()); }
(rule__AstTypeDefinitionTypeParameter__NameAssignment)
{ after(grammarAccess.getAstTypeDefinitionTypeParameterAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstConstructor
entryRuleAstConstructor 
:
{ before(grammarAccess.getAstConstructorRule()); }
	 ruleAstConstructor
{ after(grammarAccess.getAstConstructorRule()); } 
	 EOF 
;

// Rule AstConstructor
ruleAstConstructor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstConstructorAccess().getGroup()); }
(rule__AstConstructor__Group__0)
{ after(grammarAccess.getAstConstructorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstActor
entryRuleAstActor 
:
{ before(grammarAccess.getAstActorRule()); }
	 ruleAstActor
{ after(grammarAccess.getAstActorRule()); } 
	 EOF 
;

// Rule AstActor
ruleAstActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstActorAccess().getGroup()); }
(rule__AstActor__Group__0)
{ after(grammarAccess.getAstActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstPort
entryRuleAstPort 
:
{ before(grammarAccess.getAstPortRule()); }
	 ruleAstPort
{ after(grammarAccess.getAstPortRule()); } 
	 EOF 
;

// Rule AstPort
ruleAstPort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstPortAccess().getGroup()); }
(rule__AstPort__Group__0)
{ after(grammarAccess.getAstPortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstFunction
entryRuleAstFunction 
:
{ before(grammarAccess.getAstFunctionRule()); }
	 ruleAstFunction
{ after(grammarAccess.getAstFunctionRule()); } 
	 EOF 
;

// Rule AstFunction
ruleAstFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstFunctionAccess().getGroup()); }
(rule__AstFunction__Group__0)
{ after(grammarAccess.getAstFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExternalFunction
entryRuleAstExternalFunction 
:
{ before(grammarAccess.getAstExternalFunctionRule()); }
	 ruleAstExternalFunction
{ after(grammarAccess.getAstExternalFunctionRule()); } 
	 EOF 
;

// Rule AstExternalFunction
ruleAstExternalFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getGroup()); }
(rule__AstExternalFunction__Group__0)
{ after(grammarAccess.getAstExternalFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstProcedure
entryRuleAstProcedure 
:
{ before(grammarAccess.getAstProcedureRule()); }
	 ruleAstProcedure
{ after(grammarAccess.getAstProcedureRule()); } 
	 EOF 
;

// Rule AstProcedure
ruleAstProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstProcedureAccess().getGroup()); }
(rule__AstProcedure__Group__0)
{ after(grammarAccess.getAstProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExternalProcedure
entryRuleAstExternalProcedure 
:
{ before(grammarAccess.getAstExternalProcedureRule()); }
	 ruleAstExternalProcedure
{ after(grammarAccess.getAstExternalProcedureRule()); } 
	 EOF 
;

// Rule AstExternalProcedure
ruleAstExternalProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getGroup()); }
(rule__AstExternalProcedure__Group__0)
{ after(grammarAccess.getAstExternalProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstParameter
entryRuleAstParameter 
:
{ before(grammarAccess.getAstParameterRule()); }
	 ruleAstParameter
{ after(grammarAccess.getAstParameterRule()); } 
	 EOF 
;

// Rule AstParameter
ruleAstParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstParameterAccess().getGroup()); }
(rule__AstParameter__Group__0)
{ after(grammarAccess.getAstParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStateVariable
entryRuleAstStateVariable 
:
{ before(grammarAccess.getAstStateVariableRule()); }
	 ruleAstStateVariable
{ after(grammarAccess.getAstStateVariableRule()); } 
	 EOF 
;

// Rule AstStateVariable
ruleAstStateVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStateVariableAccess().getGroup()); }
(rule__AstStateVariable__Group__0)
{ after(grammarAccess.getAstStateVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTag
entryRuleAstTag 
:
{ before(grammarAccess.getAstTagRule()); }
	 ruleAstTag
{ after(grammarAccess.getAstTagRule()); } 
	 EOF 
;

// Rule AstTag
ruleAstTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTagAccess().getGroup()); }
(rule__AstTag__Group__0)
{ after(grammarAccess.getAstTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExternalActor
entryRuleAstExternalActor 
:
{ before(grammarAccess.getAstExternalActorRule()); }
	 ruleAstExternalActor
{ after(grammarAccess.getAstExternalActorRule()); } 
	 EOF 
;

// Rule AstExternalActor
ruleAstExternalActor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExternalActorAccess().getGroup()); }
(rule__AstExternalActor__Group__0)
{ after(grammarAccess.getAstExternalActorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstInequality
entryRuleAstInequality 
:
{ before(grammarAccess.getAstInequalityRule()); }
	 ruleAstInequality
{ after(grammarAccess.getAstInequalityRule()); } 
	 EOF 
;

// Rule AstInequality
ruleAstInequality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstInequalityAccess().getGroup()); }
(rule__AstInequality__Group__0)
{ after(grammarAccess.getAstInequalityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstPriority
entryRuleAstPriority 
:
{ before(grammarAccess.getAstPriorityRule()); }
	 ruleAstPriority
{ after(grammarAccess.getAstPriorityRule()); } 
	 EOF 
;

// Rule AstPriority
ruleAstPriority
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstPriorityAccess().getGroup()); }
(rule__AstPriority__Group__0)
{ after(grammarAccess.getAstPriorityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstSchedule
entryRuleAstSchedule 
:
{ before(grammarAccess.getAstScheduleRule()); }
	 ruleAstSchedule
{ after(grammarAccess.getAstScheduleRule()); } 
	 EOF 
;

// Rule AstSchedule
ruleAstSchedule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstScheduleAccess().getGroup()); }
(rule__AstSchedule__Group__0)
{ after(grammarAccess.getAstScheduleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTransition
entryRuleAstTransition 
:
{ before(grammarAccess.getAstTransitionRule()); }
	 ruleAstTransition
{ after(grammarAccess.getAstTransitionRule()); } 
	 EOF 
;

// Rule AstTransition
ruleAstTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTransitionAccess().getGroup()); }
(rule__AstTransition__Group__0)
{ after(grammarAccess.getAstTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAstAction
entryRuleAstAction 
:
{ before(grammarAccess.getAstActionRule()); }
	 ruleAstAction
{ after(grammarAccess.getAstActionRule()); } 
	 EOF 
;

// Rule AstAction
ruleAstAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstActionAccess().getGroup()); }
(rule__AstAction__Group__0)
{ after(grammarAccess.getAstActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstInitialize
entryRuleAstInitialize 
:
{ before(grammarAccess.getAstInitializeRule()); }
	 ruleAstInitialize
{ after(grammarAccess.getAstInitializeRule()); } 
	 EOF 
;

// Rule AstInitialize
ruleAstInitialize
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup()); }
(rule__AstInitialize__Group__0)
{ after(grammarAccess.getAstInitializeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstInputPattern
entryRuleAstInputPattern 
:
{ before(grammarAccess.getAstInputPatternRule()); }
	 ruleAstInputPattern
{ after(grammarAccess.getAstInputPatternRule()); } 
	 EOF 
;

// Rule AstInputPattern
ruleAstInputPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstInputPatternAccess().getGroup()); }
(rule__AstInputPattern__Group__0)
{ after(grammarAccess.getAstInputPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstToken
entryRuleAstToken 
:
{ before(grammarAccess.getAstTokenRule()); }
	 ruleAstToken
{ after(grammarAccess.getAstTokenRule()); } 
	 EOF 
;

// Rule AstToken
ruleAstToken
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTokenAccess().getNameAssignment()); }
(rule__AstToken__NameAssignment)
{ after(grammarAccess.getAstTokenAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstOutputPattern
entryRuleAstOutputPattern 
:
{ before(grammarAccess.getAstOutputPatternRule()); }
	 ruleAstOutputPattern
{ after(grammarAccess.getAstOutputPatternRule()); } 
	 EOF 
;

// Rule AstOutputPattern
ruleAstOutputPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstOutputPatternAccess().getGroup()); }
(rule__AstOutputPattern__Group__0)
{ after(grammarAccess.getAstOutputPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStatementAssign
entryRuleAstStatementAssign 
:
{ before(grammarAccess.getAstStatementAssignRule()); }
	 ruleAstStatementAssign
{ after(grammarAccess.getAstStatementAssignRule()); } 
	 EOF 
;

// Rule AstStatementAssign
ruleAstStatementAssign
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStatementAssignAccess().getGroup()); }
(rule__AstStatementAssign__Group__0)
{ after(grammarAccess.getAstStatementAssignAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStatementCall
entryRuleAstStatementCall 
:
{ before(grammarAccess.getAstStatementCallRule()); }
	 ruleAstStatementCall
{ after(grammarAccess.getAstStatementCallRule()); } 
	 EOF 
;

// Rule AstStatementCall
ruleAstStatementCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStatementCallAccess().getGroup()); }
(rule__AstStatementCall__Group__0)
{ after(grammarAccess.getAstStatementCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStatementForeach
entryRuleAstStatementForeach 
:
{ before(grammarAccess.getAstStatementForeachRule()); }
	 ruleAstStatementForeach
{ after(grammarAccess.getAstStatementForeachRule()); } 
	 EOF 
;

// Rule AstStatementForeach
ruleAstStatementForeach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGroup()); }
(rule__AstStatementForeach__Group__0)
{ after(grammarAccess.getAstStatementForeachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstForeachGenerator
entryRuleAstForeachGenerator 
:
{ before(grammarAccess.getAstForeachGeneratorRule()); }
	 ruleAstForeachGenerator
{ after(grammarAccess.getAstForeachGeneratorRule()); } 
	 EOF 
;

// Rule AstForeachGenerator
ruleAstForeachGenerator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstForeachGeneratorAccess().getGroup()); }
(rule__AstForeachGenerator__Group__0)
{ after(grammarAccess.getAstForeachGeneratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStatementBlock
entryRuleAstStatementBlock 
:
{ before(grammarAccess.getAstStatementBlockRule()); }
	 ruleAstStatementBlock
{ after(grammarAccess.getAstStatementBlockRule()); } 
	 EOF 
;

// Rule AstStatementBlock
ruleAstStatementBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStatementBlockAccess().getGroup()); }
(rule__AstStatementBlock__Group__0)
{ after(grammarAccess.getAstStatementBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStatementIf
entryRuleAstStatementIf 
:
{ before(grammarAccess.getAstStatementIfRule()); }
	 ruleAstStatementIf
{ after(grammarAccess.getAstStatementIfRule()); } 
	 EOF 
;

// Rule AstStatementIf
ruleAstStatementIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStatementIfAccess().getGroup()); }
(rule__AstStatementIf__Group__0)
{ after(grammarAccess.getAstStatementIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStatementWhile
entryRuleAstStatementWhile 
:
{ before(grammarAccess.getAstStatementWhileRule()); }
	 ruleAstStatementWhile
{ after(grammarAccess.getAstStatementWhileRule()); } 
	 EOF 
;

// Rule AstStatementWhile
ruleAstStatementWhile
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStatementWhileAccess().getGroup()); }
(rule__AstStatementWhile__Group__0)
{ after(grammarAccess.getAstStatementWhileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstStatement
entryRuleAstStatement 
:
{ before(grammarAccess.getAstStatementRule()); }
	 ruleAstStatement
{ after(grammarAccess.getAstStatementRule()); } 
	 EOF 
;

// Rule AstStatement
ruleAstStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstStatementAccess().getAlternatives()); }
(rule__AstStatement__Alternatives)
{ after(grammarAccess.getAstStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpression
entryRuleAstExpression 
:
{ before(grammarAccess.getAstExpressionRule()); }
	 ruleAstExpression
{ after(grammarAccess.getAstExpressionRule()); } 
	 EOF 
;

// Rule AstExpression
ruleAstExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionAccess().getGroup()); }
(rule__AstExpression__Group__0)
{ after(grammarAccess.getAstExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionAnd
entryRuleAstExpressionAnd 
:
{ before(grammarAccess.getAstExpressionAndRule()); }
	 ruleAstExpressionAnd
{ after(grammarAccess.getAstExpressionAndRule()); } 
	 EOF 
;

// Rule AstExpressionAnd
ruleAstExpressionAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionAndAccess().getGroup()); }
(rule__AstExpressionAnd__Group__0)
{ after(grammarAccess.getAstExpressionAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionBitor
entryRuleAstExpressionBitor 
:
{ before(grammarAccess.getAstExpressionBitorRule()); }
	 ruleAstExpressionBitor
{ after(grammarAccess.getAstExpressionBitorRule()); } 
	 EOF 
;

// Rule AstExpressionBitor
ruleAstExpressionBitor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getGroup()); }
(rule__AstExpressionBitor__Group__0)
{ after(grammarAccess.getAstExpressionBitorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionBitxor
entryRuleAstExpressionBitxor 
:
{ before(grammarAccess.getAstExpressionBitxorRule()); }
	 ruleAstExpressionBitxor
{ after(grammarAccess.getAstExpressionBitxorRule()); } 
	 EOF 
;

// Rule AstExpressionBitxor
ruleAstExpressionBitxor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getGroup()); }
(rule__AstExpressionBitxor__Group__0)
{ after(grammarAccess.getAstExpressionBitxorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionBitand
entryRuleAstExpressionBitand 
:
{ before(grammarAccess.getAstExpressionBitandRule()); }
	 ruleAstExpressionBitand
{ after(grammarAccess.getAstExpressionBitandRule()); } 
	 EOF 
;

// Rule AstExpressionBitand
ruleAstExpressionBitand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getGroup()); }
(rule__AstExpressionBitand__Group__0)
{ after(grammarAccess.getAstExpressionBitandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionEq
entryRuleAstExpressionEq 
:
{ before(grammarAccess.getAstExpressionEqRule()); }
	 ruleAstExpressionEq
{ after(grammarAccess.getAstExpressionEqRule()); } 
	 EOF 
;

// Rule AstExpressionEq
ruleAstExpressionEq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionEqAccess().getGroup()); }
(rule__AstExpressionEq__Group__0)
{ after(grammarAccess.getAstExpressionEqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionRelational
entryRuleAstExpressionRelational 
:
{ before(grammarAccess.getAstExpressionRelationalRule()); }
	 ruleAstExpressionRelational
{ after(grammarAccess.getAstExpressionRelationalRule()); } 
	 EOF 
;

// Rule AstExpressionRelational
ruleAstExpressionRelational
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getGroup()); }
(rule__AstExpressionRelational__Group__0)
{ after(grammarAccess.getAstExpressionRelationalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionShift
entryRuleAstExpressionShift 
:
{ before(grammarAccess.getAstExpressionShiftRule()); }
	 ruleAstExpressionShift
{ after(grammarAccess.getAstExpressionShiftRule()); } 
	 EOF 
;

// Rule AstExpressionShift
ruleAstExpressionShift
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getGroup()); }
(rule__AstExpressionShift__Group__0)
{ after(grammarAccess.getAstExpressionShiftAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionAdditive
entryRuleAstExpressionAdditive 
:
{ before(grammarAccess.getAstExpressionAdditiveRule()); }
	 ruleAstExpressionAdditive
{ after(grammarAccess.getAstExpressionAdditiveRule()); } 
	 EOF 
;

// Rule AstExpressionAdditive
ruleAstExpressionAdditive
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getGroup()); }
(rule__AstExpressionAdditive__Group__0)
{ after(grammarAccess.getAstExpressionAdditiveAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionMultiplicative
entryRuleAstExpressionMultiplicative 
:
{ before(grammarAccess.getAstExpressionMultiplicativeRule()); }
	 ruleAstExpressionMultiplicative
{ after(grammarAccess.getAstExpressionMultiplicativeRule()); } 
	 EOF 
;

// Rule AstExpressionMultiplicative
ruleAstExpressionMultiplicative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getGroup()); }
(rule__AstExpressionMultiplicative__Group__0)
{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionExp
entryRuleAstExpressionExp 
:
{ before(grammarAccess.getAstExpressionExpRule()); }
	 ruleAstExpressionExp
{ after(grammarAccess.getAstExpressionExpRule()); } 
	 EOF 
;

// Rule AstExpressionExp
ruleAstExpressionExp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionExpAccess().getGroup()); }
(rule__AstExpressionExp__Group__0)
{ after(grammarAccess.getAstExpressionExpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionUnary
entryRuleAstExpressionUnary 
:
{ before(grammarAccess.getAstExpressionUnaryRule()); }
	 ruleAstExpressionUnary
{ after(grammarAccess.getAstExpressionUnaryRule()); } 
	 EOF 
;

// Rule AstExpressionUnary
ruleAstExpressionUnary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getAlternatives()); }
(rule__AstExpressionUnary__Alternatives)
{ after(grammarAccess.getAstExpressionUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionPostfix
entryRuleAstExpressionPostfix 
:
{ before(grammarAccess.getAstExpressionPostfixRule()); }
	 ruleAstExpressionPostfix
{ after(grammarAccess.getAstExpressionPostfixRule()); } 
	 EOF 
;

// Rule AstExpressionPostfix
ruleAstExpressionPostfix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionPostfixAccess().getAlternatives()); }
(rule__AstExpressionPostfix__Alternatives)
{ after(grammarAccess.getAstExpressionPostfixAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionCall
entryRuleAstExpressionCall 
:
{ before(grammarAccess.getAstExpressionCallRule()); }
	 ruleAstExpressionCall
{ after(grammarAccess.getAstExpressionCallRule()); } 
	 EOF 
;

// Rule AstExpressionCall
ruleAstExpressionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionCallAccess().getGroup()); }
(rule__AstExpressionCall__Group__0)
{ after(grammarAccess.getAstExpressionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionIf
entryRuleAstExpressionIf 
:
{ before(grammarAccess.getAstExpressionIfRule()); }
	 ruleAstExpressionIf
{ after(grammarAccess.getAstExpressionIfRule()); } 
	 EOF 
;

// Rule AstExpressionIf
ruleAstExpressionIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionIfAccess().getGroup()); }
(rule__AstExpressionIf__Group__0)
{ after(grammarAccess.getAstExpressionIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionList
entryRuleAstExpressionList 
:
{ before(grammarAccess.getAstExpressionListRule()); }
	 ruleAstExpressionList
{ after(grammarAccess.getAstExpressionListRule()); } 
	 EOF 
;

// Rule AstExpressionList
ruleAstExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionListAccess().getGroup()); }
(rule__AstExpressionList__Group__0)
{ after(grammarAccess.getAstExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstGenerator
entryRuleAstGenerator 
:
{ before(grammarAccess.getAstGeneratorRule()); }
	 ruleAstGenerator
{ after(grammarAccess.getAstGeneratorRule()); } 
	 EOF 
;

// Rule AstGenerator
ruleAstGenerator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstGeneratorAccess().getGroup()); }
(rule__AstGenerator__Group__0)
{ after(grammarAccess.getAstGeneratorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionVariable
entryRuleAstExpressionVariable 
:
{ before(grammarAccess.getAstExpressionVariableRule()); }
	 ruleAstExpressionVariable
{ after(grammarAccess.getAstExpressionVariableRule()); } 
	 EOF 
;

// Rule AstExpressionVariable
ruleAstExpressionVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getGroup()); }
(rule__AstExpressionVariable__Group__0)
{ after(grammarAccess.getAstExpressionVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionLiteral
entryRuleAstExpressionLiteral 
:
{ before(grammarAccess.getAstExpressionLiteralRule()); }
	 ruleAstExpressionLiteral
{ after(grammarAccess.getAstExpressionLiteralRule()); } 
	 EOF 
;

// Rule AstExpressionLiteral
ruleAstExpressionLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionLiteralAccess().getAlternatives()); }
(rule__AstExpressionLiteral__Alternatives)
{ after(grammarAccess.getAstExpressionLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionBoolean
entryRuleAstExpressionBoolean 
:
{ before(grammarAccess.getAstExpressionBooleanRule()); }
	 ruleAstExpressionBoolean
{ after(grammarAccess.getAstExpressionBooleanRule()); } 
	 EOF 
;

// Rule AstExpressionBoolean
ruleAstExpressionBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionBooleanAccess().getValueAssignment()); }
(rule__AstExpressionBoolean__ValueAssignment)
{ after(grammarAccess.getAstExpressionBooleanAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionFloat
entryRuleAstExpressionFloat 
:
{ before(grammarAccess.getAstExpressionFloatRule()); }
	 ruleAstExpressionFloat
{ after(grammarAccess.getAstExpressionFloatRule()); } 
	 EOF 
;

// Rule AstExpressionFloat
ruleAstExpressionFloat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionFloatAccess().getValueAssignment()); }
(rule__AstExpressionFloat__ValueAssignment)
{ after(grammarAccess.getAstExpressionFloatAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleREAL
entryRuleREAL 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getREALRule()); }
	 ruleREAL
{ after(grammarAccess.getREALRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule REAL
ruleREAL
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getREALAccess().getAlternatives()); }
(rule__REAL__Alternatives)
{ after(grammarAccess.getREALAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAstExpressionInteger
entryRuleAstExpressionInteger 
:
{ before(grammarAccess.getAstExpressionIntegerRule()); }
	 ruleAstExpressionInteger
{ after(grammarAccess.getAstExpressionIntegerRule()); } 
	 EOF 
;

// Rule AstExpressionInteger
ruleAstExpressionInteger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionIntegerAccess().getValueAssignment()); }
(rule__AstExpressionInteger__ValueAssignment)
{ after(grammarAccess.getAstExpressionIntegerAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstExpressionString
entryRuleAstExpressionString 
:
{ before(grammarAccess.getAstExpressionStringRule()); }
	 ruleAstExpressionString
{ after(grammarAccess.getAstExpressionStringRule()); } 
	 EOF 
;

// Rule AstExpressionString
ruleAstExpressionString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstExpressionStringAccess().getValueAssignment()); }
(rule__AstExpressionString__ValueAssignment)
{ after(grammarAccess.getAstExpressionStringAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAstBuiltInType
entryRuleAstBuiltInType 
:
{ before(grammarAccess.getAstBuiltInTypeRule()); }
	 ruleAstBuiltInType
{ after(grammarAccess.getAstBuiltInTypeRule()); } 
	 EOF 
;

// Rule AstBuiltInType
ruleAstBuiltInType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstBuiltInTypeAccess().getAlternatives()); }
(rule__AstBuiltInType__Alternatives)
{ after(grammarAccess.getAstBuiltInTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstType
entryRuleAstType 
:
{ before(grammarAccess.getAstTypeRule()); }
	 ruleAstType
{ after(grammarAccess.getAstTypeRule()); } 
	 EOF 
;

// Rule AstType
ruleAstType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTypeAccess().getAlternatives()); }
(rule__AstType__Alternatives)
{ after(grammarAccess.getAstTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTypeTuple
entryRuleAstTypeTuple 
:
{ before(grammarAccess.getAstTypeTupleRule()); }
	 ruleAstTypeTuple
{ after(grammarAccess.getAstTypeTupleRule()); } 
	 EOF 
;

// Rule AstTypeTuple
ruleAstTypeTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTypeTupleAccess().getGroup()); }
(rule__AstTypeTuple__Group__0)
{ after(grammarAccess.getAstTypeTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTypeParameterList
entryRuleAstTypeParameterList 
:
{ before(grammarAccess.getAstTypeParameterListRule()); }
	 ruleAstTypeParameterList
{ after(grammarAccess.getAstTypeParameterListRule()); } 
	 EOF 
;

// Rule AstTypeParameterList
ruleAstTypeParameterList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getGroup()); }
(rule__AstTypeParameterList__Group__0)
{ after(grammarAccess.getAstTypeParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstTypeParam
entryRuleAstTypeParam 
:
{ before(grammarAccess.getAstTypeParamRule()); }
	 ruleAstTypeParam
{ after(grammarAccess.getAstTypeParamRule()); } 
	 EOF 
;

// Rule AstTypeParam
ruleAstTypeParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstTypeParamAccess().getAlternatives()); }
(rule__AstTypeParam__Alternatives)
{ after(grammarAccess.getAstTypeParamAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstVariableDeclaration
entryRuleAstVariableDeclaration 
:
{ before(grammarAccess.getAstVariableDeclarationRule()); }
	 ruleAstVariableDeclaration
{ after(grammarAccess.getAstVariableDeclarationRule()); } 
	 EOF 
;

// Rule AstVariableDeclaration
ruleAstVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getGroup()); }
(rule__AstVariableDeclaration__Group__0)
{ after(grammarAccess.getAstVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstValuedVariableDeclaration
entryRuleAstValuedVariableDeclaration 
:
{ before(grammarAccess.getAstValuedVariableDeclarationRule()); }
	 ruleAstValuedVariableDeclaration
{ after(grammarAccess.getAstValuedVariableDeclarationRule()); } 
	 EOF 
;

// Rule AstValuedVariableDeclaration
ruleAstValuedVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getGroup()); }
(rule__AstValuedVariableDeclaration__Group__0)
{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstVariableReference
entryRuleAstVariableReference 
:
{ before(grammarAccess.getAstVariableReferenceRule()); }
	 ruleAstVariableReference
{ after(grammarAccess.getAstVariableReferenceRule()); } 
	 EOF 
;

// Rule AstVariableReference
ruleAstVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstVariableReferenceAccess().getVariableAssignment()); }
(rule__AstVariableReference__VariableAssignment)
{ after(grammarAccess.getAstVariableReferenceAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstMemberAccess
entryRuleAstMemberAccess 
:
{ before(grammarAccess.getAstMemberAccessRule()); }
	 ruleAstMemberAccess
{ after(grammarAccess.getAstMemberAccessRule()); } 
	 EOF 
;

// Rule AstMemberAccess
ruleAstMemberAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstMemberAccessAccess().getGroup()); }
(rule__AstMemberAccess__Group__0)
{ after(grammarAccess.getAstMemberAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstAnnotation
entryRuleAstAnnotation 
:
{ before(grammarAccess.getAstAnnotationRule()); }
	 ruleAstAnnotation
{ after(grammarAccess.getAstAnnotationRule()); } 
	 EOF 
;

// Rule AstAnnotation
ruleAstAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstAnnotationAccess().getGroup()); }
(rule__AstAnnotation__Group__0)
{ after(grammarAccess.getAstAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAstAnnotationArgument
entryRuleAstAnnotationArgument 
:
{ before(grammarAccess.getAstAnnotationArgumentRule()); }
	 ruleAstAnnotationArgument
{ after(grammarAccess.getAstAnnotationArgumentRule()); } 
	 EOF 
;

// Rule AstAnnotationArgument
ruleAstAnnotationArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAstAnnotationArgumentAccess().getGroup()); }
(rule__AstAnnotationArgument__Group__0)
{ after(grammarAccess.getAstAnnotationArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AstTop__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTopAccess().getAstPackageParserRuleCall_0()); }
	ruleAstPackage
{ after(grammarAccess.getAstTopAccess().getAstPackageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAstTopAccess().getAstNamespaceParserRuleCall_1()); }
	ruleAstNamespace
{ after(grammarAccess.getAstTopAccess().getAstNamespaceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getEntitiesAssignment_4_0()); }
(rule__AstPackage__EntitiesAssignment_4_0)
{ after(grammarAccess.getAstPackageAccess().getEntitiesAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getAstPackageAccess().getImportsAssignment_4_1()); }
(rule__AstPackage__ImportsAssignment_4_1)
{ after(grammarAccess.getAstPackageAccess().getImportsAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getAstPackageAccess().getUnitsAssignment_4_2()); }
(rule__AstPackage__UnitsAssignment_4_2)
{ after(grammarAccess.getAstPackageAccess().getUnitsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getFunctionsAssignment_4_0()); }
(rule__AstUnit__FunctionsAssignment_4_0)
{ after(grammarAccess.getAstUnitAccess().getFunctionsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getAstUnitAccess().getVariablesAssignment_4_1()); }
(rule__AstUnit__VariablesAssignment_4_1)
{ after(grammarAccess.getAstUnitAccess().getVariablesAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getAstUnitAccess().getExternalsAssignment_4_2()); }
(rule__AstUnit__ExternalsAssignment_4_2)
{ after(grammarAccess.getAstUnitAccess().getExternalsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__ExternalsAlternatives_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getExternalsAstExternalVariableParserRuleCall_4_2_0_0()); }
	ruleAstExternalVariable
{ after(grammarAccess.getAstUnitAccess().getExternalsAstExternalVariableParserRuleCall_4_2_0_0()); }
)

    |(
{ before(grammarAccess.getAstUnitAccess().getExternalsAstExternalFunctionParserRuleCall_4_2_0_1()); }
	ruleAstExternalFunction
{ after(grammarAccess.getAstUnitAccess().getExternalsAstExternalFunctionParserRuleCall_4_2_0_1()); }
)

    |(
{ before(grammarAccess.getAstUnitAccess().getExternalsAstExternalProcedureParserRuleCall_4_2_0_2()); }
	ruleAstExternalProcedure
{ after(grammarAccess.getAstUnitAccess().getExternalsAstExternalProcedureParserRuleCall_4_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getFunctionsAssignment_4_0()); }
(rule__AstNamespace__FunctionsAssignment_4_0)
{ after(grammarAccess.getAstNamespaceAccess().getFunctionsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getVariablesAssignment_4_1()); }
(rule__AstNamespace__VariablesAssignment_4_1)
{ after(grammarAccess.getAstNamespaceAccess().getVariablesAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getExternalsAssignment_4_2()); }
(rule__AstNamespace__ExternalsAssignment_4_2)
{ after(grammarAccess.getAstNamespaceAccess().getExternalsAssignment_4_2()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getTypedefsAssignment_4_3()); }
(rule__AstNamespace__TypedefsAssignment_4_3)
{ after(grammarAccess.getAstNamespaceAccess().getTypedefsAssignment_4_3()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getImportsAssignment_4_4()); }
(rule__AstNamespace__ImportsAssignment_4_4)
{ after(grammarAccess.getAstNamespaceAccess().getImportsAssignment_4_4()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getEntitiesAssignment_4_5()); }
(rule__AstNamespace__EntitiesAssignment_4_5)
{ after(grammarAccess.getAstNamespaceAccess().getEntitiesAssignment_4_5()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getNamespacesAssignment_4_6()); }
(rule__AstNamespace__NamespacesAssignment_4_6)
{ after(grammarAccess.getAstNamespaceAccess().getNamespacesAssignment_4_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__ExternalsAlternatives_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalVariableParserRuleCall_4_2_0_0()); }
	ruleAstExternalVariable
{ after(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalVariableParserRuleCall_4_2_0_0()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalFunctionParserRuleCall_4_2_0_1()); }
	ruleAstExternalFunction
{ after(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalFunctionParserRuleCall_4_2_0_1()); }
)

    |(
{ before(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalProcedureParserRuleCall_4_2_0_2()); }
	ruleAstExternalProcedure
{ after(grammarAccess.getAstNamespaceAccess().getExternalsAstExternalProcedureParserRuleCall_4_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAbstractActor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAbstractActorAccess().getAstActorParserRuleCall_0()); }
	ruleAstActor
{ after(grammarAccess.getAstAbstractActorAccess().getAstActorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAstAbstractActorAccess().getAstNetworkParserRuleCall_1()); }
	ruleAstNetwork
{ after(grammarAccess.getAstAbstractActorAccess().getAstNetworkParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAstAbstractActorAccess().getAstExternalActorParserRuleCall_2()); }
	ruleAstExternalActor
{ after(grammarAccess.getAstAbstractActorAccess().getAstExternalActorParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getGroup_4_0()); }
(rule__AstTypeDefinition__Group_4_0__0)
{ after(grammarAccess.getAstTypeDefinitionAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getAstTypeDefinitionAccess().getTypeAssignment_4_1()); }
(rule__AstTypeDefinition__TypeAssignment_4_1)
{ after(grammarAccess.getAstTypeDefinitionAccess().getTypeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinitionParameter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionParameterAccess().getValueAssignment_0()); }
(rule__AstTypeDefinitionParameter__ValueAssignment_0)
{ after(grammarAccess.getAstTypeDefinitionParameterAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getAstTypeDefinitionParameterAccess().getTypeAssignment_1()); }
(rule__AstTypeDefinitionParameter__TypeAssignment_1)
{ after(grammarAccess.getAstTypeDefinitionParameterAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Alternatives_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getFunctionsAssignment_10_0()); }
(rule__AstActor__FunctionsAssignment_10_0)
{ after(grammarAccess.getAstActorAccess().getFunctionsAssignment_10_0()); }
)

    |(
{ before(grammarAccess.getAstActorAccess().getProceduresAssignment_10_1()); }
(rule__AstActor__ProceduresAssignment_10_1)
{ after(grammarAccess.getAstActorAccess().getProceduresAssignment_10_1()); }
)

    |(
{ before(grammarAccess.getAstActorAccess().getActionsAssignment_10_2()); }
(rule__AstActor__ActionsAssignment_10_2)
{ after(grammarAccess.getAstActorAccess().getActionsAssignment_10_2()); }
)

    |(
{ before(grammarAccess.getAstActorAccess().getInitializesAssignment_10_3()); }
(rule__AstActor__InitializesAssignment_10_3)
{ after(grammarAccess.getAstActorAccess().getInitializesAssignment_10_3()); }
)

    |(
{ before(grammarAccess.getAstActorAccess().getStateVariablesAssignment_10_4()); }
(rule__AstActor__StateVariablesAssignment_10_4)
{ after(grammarAccess.getAstActorAccess().getStateVariablesAssignment_10_4()); }
)

    |(
{ before(grammarAccess.getAstActorAccess().getSchedulesAssignment_10_5()); }
(rule__AstActor__SchedulesAssignment_10_5)
{ after(grammarAccess.getAstActorAccess().getSchedulesAssignment_10_5()); }
)

    |(
{ before(grammarAccess.getAstActorAccess().getPrioritiesAssignment_10_6()); }
(rule__AstActor__PrioritiesAssignment_10_6)
{ after(grammarAccess.getAstActorAccess().getPrioritiesAssignment_10_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAccess().getAstStatementAssignParserRuleCall_0()); }
	ruleAstStatementAssign
{ after(grammarAccess.getAstStatementAccess().getAstStatementAssignParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAstStatementAccess().getAstStatementCallParserRuleCall_1()); }
	ruleAstStatementCall
{ after(grammarAccess.getAstStatementAccess().getAstStatementCallParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAstStatementAccess().getAstStatementForeachParserRuleCall_2()); }
	ruleAstStatementForeach
{ after(grammarAccess.getAstStatementAccess().getAstStatementForeachParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAstStatementAccess().getAstStatementIfParserRuleCall_3()); }
	ruleAstStatementIf
{ after(grammarAccess.getAstStatementAccess().getAstStatementIfParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAstStatementAccess().getAstStatementWhileParserRuleCall_4()); }
	ruleAstStatementWhile
{ after(grammarAccess.getAstStatementAccess().getAstStatementWhileParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAstStatementAccess().getAstStatementBlockParserRuleCall_5()); }
	ruleAstStatementBlock
{ after(grammarAccess.getAstStatementAccess().getAstStatementBlockParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0_0()); }

	'||' 

{ after(grammarAccess.getAstExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionAccess().getOperatorOrKeyword_1_1_0_1()); }

	'or' 

{ after(grammarAccess.getAstExpressionAccess().getOperatorOrKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0_2()); }

	'..' 

{ after(grammarAccess.getAstExpressionAccess().getOperatorFullStopFullStopKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getOperatorAmpersandAmpersandKeyword_1_1_0_0()); }

	'&&' 

{ after(grammarAccess.getAstExpressionAndAccess().getOperatorAmpersandAmpersandKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionAndAccess().getOperatorAndKeyword_1_1_0_1()); }

	'and' 

{ after(grammarAccess.getAstExpressionAndAccess().getOperatorAndKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }

	'=' 

{ after(grammarAccess.getAstExpressionEqAccess().getOperatorEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionEqAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }

	'!=' 

{ after(grammarAccess.getAstExpressionEqAccess().getOperatorExclamationMarkEqualsSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }

	'<' 

{ after(grammarAccess.getAstExpressionRelationalAccess().getOperatorLessThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionRelationalAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_1()); }

	'<=' 

{ after(grammarAccess.getAstExpressionRelationalAccess().getOperatorLessThanSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionRelationalAccess().getOperatorGreaterThanSignKeyword_1_1_0_2()); }

	'>' 

{ after(grammarAccess.getAstExpressionRelationalAccess().getOperatorGreaterThanSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getAstExpressionRelationalAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }

	'>=' 

{ after(grammarAccess.getAstExpressionRelationalAccess().getOperatorGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getOperatorLessThanSignLessThanSignKeyword_1_1_0_0()); }

	'<<' 

{ after(grammarAccess.getAstExpressionShiftAccess().getOperatorLessThanSignLessThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionShiftAccess().getOperatorGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); }

	'>>' 

{ after(grammarAccess.getAstExpressionShiftAccess().getOperatorGreaterThanSignGreaterThanSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionShiftAccess().getOperatorGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_0_2()); }

	'>>>' 

{ after(grammarAccess.getAstExpressionShiftAccess().getOperatorGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getOperatorPlusSignKeyword_1_1_0_0()); }

	'+' 

{ after(grammarAccess.getAstExpressionAdditiveAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }

	'-' 

{ after(grammarAccess.getAstExpressionAdditiveAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__OperatorAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAsteriskKeyword_1_1_0_0()); }

	'*' 

{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorSolidusKeyword_1_1_0_1()); }

	'/' 

{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorSolidusKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorDivKeyword_1_1_0_2()); }

	'div' 

{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorDivKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorModKeyword_1_1_0_3()); }

	'mod' 

{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorModKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getGroup_0()); }
(rule__AstExpressionUnary__Group_0__0)
{ after(grammarAccess.getAstExpressionUnaryAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionUnaryAccess().getAstExpressionPostfixParserRuleCall_1()); }
	ruleAstExpressionPostfix
{ after(grammarAccess.getAstExpressionUnaryAccess().getAstExpressionPostfixParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionUnary__UnaryOperatorAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorTildeKeyword_0_1_0_0()); }

	'~' 

{ after(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorTildeKeyword_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorHyphenMinusKeyword_0_1_0_1()); }

	'-' 

{ after(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorHyphenMinusKeyword_0_1_0_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorNotKeyword_0_1_0_2()); }

	'not' 

{ after(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorNotKeyword_0_1_0_2()); }
)

    |(
{ before(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorNumberSignKeyword_0_1_0_3()); }

	'#' 

{ after(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorNumberSignKeyword_0_1_0_3()); }
)

    |(
{ before(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorOldKeyword_0_1_0_4()); }

	'old' 

{ after(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorOldKeyword_0_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionPostfix__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionListParserRuleCall_0()); }
	ruleAstExpressionList
{ after(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionListParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionCallParserRuleCall_1()); }
	ruleAstExpressionCall
{ after(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionCallParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionIfParserRuleCall_2()); }
	ruleAstExpressionIf
{ after(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionIfParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionLiteralParserRuleCall_3()); }
	ruleAstExpressionLiteral
{ after(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionVariableParserRuleCall_4()); }
	ruleAstExpressionVariable
{ after(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionVariableParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAstExpressionPostfixAccess().getGroup_5()); }
(rule__AstExpressionPostfix__Group_5__0)
{ after(grammarAccess.getAstExpressionPostfixAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionBooleanParserRuleCall_0()); }
	ruleAstExpressionBoolean
{ after(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionBooleanParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionFloatParserRuleCall_1()); }
	ruleAstExpressionFloat
{ after(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionFloatParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionIntegerParserRuleCall_2()); }
	ruleAstExpressionInteger
{ after(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionIntegerParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionStringParserRuleCall_3()); }
	ruleAstExpressionString
{ after(grammarAccess.getAstExpressionLiteralAccess().getAstExpressionStringParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getGroup_0()); }
(rule__REAL__Group_0__0)
{ after(grammarAccess.getREALAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getREALAccess().getGroup_1()); }
(rule__REAL__Group_1__0)
{ after(grammarAccess.getREALAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getEXP_INTTerminalRuleCall_0_2_0()); }
	RULE_EXP_INT
{ after(grammarAccess.getREALAccess().getEXP_INTTerminalRuleCall_0_2_0()); }
)

    |(
{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0_2_1()); }
	RULE_INT
{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getEXP_INTTerminalRuleCall_1_1_0()); }
	RULE_EXP_INT
{ after(grammarAccess.getREALAccess().getEXP_INTTerminalRuleCall_1_1_0()); }
)

    |(
{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_1_1_1()); }
	RULE_INT
{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionInteger__ValueAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIntegerAccess().getValueINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getAstExpressionIntegerAccess().getValueINTTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getAstExpressionIntegerAccess().getValueEXP_INTTerminalRuleCall_0_1()); }
	RULE_EXP_INT
{ after(grammarAccess.getAstExpressionIntegerAccess().getValueEXP_INTTerminalRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getAstExpressionIntegerAccess().getValueHEXTerminalRuleCall_0_2()); }
	RULE_HEX
{ after(grammarAccess.getAstExpressionIntegerAccess().getValueHEXTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstBuiltInType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstBuiltInTypeAccess().getIntKeyword_0()); }

	'int' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getIntKeyword_0()); }
)

    |(
{ before(grammarAccess.getAstBuiltInTypeAccess().getUintKeyword_1()); }

	'uint' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getUintKeyword_1()); }
)

    |(
{ before(grammarAccess.getAstBuiltInTypeAccess().getFloatKeyword_2()); }

	'float' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getFloatKeyword_2()); }
)

    |(
{ before(grammarAccess.getAstBuiltInTypeAccess().getBoolKeyword_3()); }

	'bool' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getBoolKeyword_3()); }
)

    |(
{ before(grammarAccess.getAstBuiltInTypeAccess().getListKeyword_4()); }

	'List' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getListKeyword_4()); }
)

    |(
{ before(grammarAccess.getAstBuiltInTypeAccess().getStringKeyword_5()); }

	'string' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getStringKeyword_5()); }
)

    |(
{ before(grammarAccess.getAstBuiltInTypeAccess().getByteKeyword_6()); }

	'byte' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getByteKeyword_6()); }
)

    |(
{ before(grammarAccess.getAstBuiltInTypeAccess().getShortKeyword_7()); }

	'short' 

{ after(grammarAccess.getAstBuiltInTypeAccess().getShortKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0()); }
(rule__AstType__Group_0__0)
{ after(grammarAccess.getAstTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAstTypeAccess().getAstTypeTupleParserRuleCall_1()); }
	ruleAstTypeTuple
{ after(grammarAccess.getAstTypeAccess().getAstTypeTupleParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_0()); }
(rule__AstType__Group_0_1_0__0)
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_0()); }
)

    |(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_1()); }
(rule__AstType__Group_0_1_1__0)
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_1()); }
)

    |(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_2()); }
(rule__AstType__Group_0_1_2__0)
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getGroup_0()); }
(rule__AstTypeParam__Group_0__0)
{ after(grammarAccess.getAstTypeParamAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAstTypeParamAccess().getGroup_1()); }
(rule__AstTypeParam__Group_1__0)
{ after(grammarAccess.getAstTypeParamAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__NameAlternatives_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getNameIDTerminalRuleCall_1_0_0_0()); }
	RULE_ID
{ after(grammarAccess.getAstTypeParamAccess().getNameIDTerminalRuleCall_1_0_0_0()); }
)

    |(
{ before(grammarAccess.getAstTypeParamAccess().getNameTypeKeyword_1_0_0_1()); }

	'type' 

{ after(grammarAccess.getAstTypeParamAccess().getNameTypeKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstValuedVariableDeclaration__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getConstantAssignment_1_0_0()); }
(rule__AstValuedVariableDeclaration__ConstantAssignment_1_0_0)
{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getConstantAssignment_1_0_0()); }
)

    |(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getColonEqualsSignKeyword_1_0_1()); }

	':=' 

{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getColonEqualsSignKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AstPackage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPackage__Group__0__Impl
	rule__AstPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getAstNamespaceAction_0()); }
(

)
{ after(grammarAccess.getAstPackageAccess().getAstNamespaceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPackage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPackage__Group__1__Impl
	rule__AstPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getPackageKeyword_1()); }

	'package' 

{ after(grammarAccess.getAstPackageAccess().getPackageKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPackage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPackage__Group__2__Impl
	rule__AstPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getNameAssignment_2()); }
(rule__AstPackage__NameAssignment_2)
{ after(grammarAccess.getAstPackageAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPackage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPackage__Group__3__Impl
	rule__AstPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAstPackageAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPackage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPackage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getAlternatives_4()); }
(rule__AstPackage__Alternatives_4)*
{ after(grammarAccess.getAstPackageAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AstUnit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstUnit__Group__0__Impl
	rule__AstUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getAstNamespaceAction_0()); }
(

)
{ after(grammarAccess.getAstUnitAccess().getAstNamespaceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstUnit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstUnit__Group__1__Impl
	rule__AstUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getUnitKeyword_1()); }

	'unit' 

{ after(grammarAccess.getAstUnitAccess().getUnitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstUnit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstUnit__Group__2__Impl
	rule__AstUnit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getNameAssignment_2()); }
(rule__AstUnit__NameAssignment_2)
{ after(grammarAccess.getAstUnitAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstUnit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstUnit__Group__3__Impl
	rule__AstUnit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getAstUnitAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstUnit__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstUnit__Group__4__Impl
	rule__AstUnit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getAlternatives_4()); }
(rule__AstUnit__Alternatives_4)*
{ after(grammarAccess.getAstUnitAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstUnit__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstUnit__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getAstUnitAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstNamespace__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNamespace__Group__0__Impl
	rule__AstNamespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getAnnotationsAssignment_0()); }
(rule__AstNamespace__AnnotationsAssignment_0)*
{ after(grammarAccess.getAstNamespaceAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNamespace__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNamespace__Group__1__Impl
	rule__AstNamespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getNamespaceKeyword_1()); }

	'namespace' 

{ after(grammarAccess.getAstNamespaceAccess().getNamespaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNamespace__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNamespace__Group__2__Impl
	rule__AstNamespace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getNameAssignment_2()); }
(rule__AstNamespace__NameAssignment_2)
{ after(grammarAccess.getAstNamespaceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNamespace__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNamespace__Group__3__Impl
	rule__AstNamespace__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getAstNamespaceAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNamespace__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNamespace__Group__4__Impl
	rule__AstNamespace__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getAlternatives_4()); }
(rule__AstNamespace__Alternatives_4)*
{ after(grammarAccess.getAstNamespaceAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNamespace__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNamespace__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getAstNamespaceAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstEntity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstEntity__Group__0__Impl
	rule__AstEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstEntity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstEntityAccess().getAnnotationsAssignment_0()); }
(rule__AstEntity__AnnotationsAssignment_0)*
{ after(grammarAccess.getAstEntityAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstEntity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstEntity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstEntity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstEntityAccess().getActorAssignment_1()); }
(rule__AstEntity__ActorAssignment_1)
{ after(grammarAccess.getAstEntityAccess().getActorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstNetwork__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__0__Impl
	rule__AstNetwork__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getAstNetworkAction_0()); }
(

)
{ after(grammarAccess.getAstNetworkAccess().getAstNetworkAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__1__Impl
	rule__AstNetwork__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getNetworkKeyword_1()); }

	'network' 

{ after(grammarAccess.getAstNetworkAccess().getNetworkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__2__Impl
	rule__AstNetwork__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getNameAssignment_2()); }
(rule__AstNetwork__NameAssignment_2)
{ after(grammarAccess.getAstNetworkAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__3__Impl
	rule__AstNetwork__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getAstNetworkAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__4__Impl
	rule__AstNetwork__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_4()); }
(rule__AstNetwork__Group_4__0)?
{ after(grammarAccess.getAstNetworkAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__5__Impl
	rule__AstNetwork__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAstNetworkAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__6__Impl
	rule__AstNetwork__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_6()); }
(rule__AstNetwork__Group_6__0)?
{ after(grammarAccess.getAstNetworkAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__7__Impl
	rule__AstNetwork__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_7()); }

	'==>' 

{ after(grammarAccess.getAstNetworkAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__8__Impl
	rule__AstNetwork__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_8()); }
(rule__AstNetwork__Group_8__0)?
{ after(grammarAccess.getAstNetworkAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__9__Impl
	rule__AstNetwork__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getColonKeyword_9()); }

	':' 

{ after(grammarAccess.getAstNetworkAccess().getColonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__10__Impl
	rule__AstNetwork__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_10()); }
(rule__AstNetwork__Group_10__0)?
{ after(grammarAccess.getAstNetworkAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__11__Impl
	rule__AstNetwork__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getEntitiesKeyword_11()); }

	'entities' 

{ after(grammarAccess.getAstNetworkAccess().getEntitiesKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__12__Impl
	rule__AstNetwork__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAstNetworkAccess().getInstancesAssignment_12()); }
(rule__AstNetwork__InstancesAssignment_12)
{ after(grammarAccess.getAstNetworkAccess().getInstancesAssignment_12()); }
)
(
{ before(grammarAccess.getAstNetworkAccess().getInstancesAssignment_12()); }
(rule__AstNetwork__InstancesAssignment_12)*
{ after(grammarAccess.getAstNetworkAccess().getInstancesAssignment_12()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__13__Impl
	rule__AstNetwork__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getStructureAssignment_13()); }
(rule__AstNetwork__StructureAssignment_13)
{ after(grammarAccess.getAstNetworkAccess().getStructureAssignment_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getEndKeyword_14()); }

	'end' 

{ after(grammarAccess.getAstNetworkAccess().getEndKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}
































rule__AstNetwork__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_4__0__Impl
	rule__AstNetwork__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getParametersAssignment_4_0()); }
(rule__AstNetwork__ParametersAssignment_4_0)
{ after(grammarAccess.getAstNetworkAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_4_1()); }
(rule__AstNetwork__Group_4_1__0)*
{ after(grammarAccess.getAstNetworkAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstNetwork__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_4_1__0__Impl
	rule__AstNetwork__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getAstNetworkAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getParametersAssignment_4_1_1()); }
(rule__AstNetwork__ParametersAssignment_4_1_1)
{ after(grammarAccess.getAstNetworkAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstNetwork__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_6__0__Impl
	rule__AstNetwork__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getInputsAssignment_6_0()); }
(rule__AstNetwork__InputsAssignment_6_0)
{ after(grammarAccess.getAstNetworkAccess().getInputsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_6_1()); }
(rule__AstNetwork__Group_6_1__0)*
{ after(grammarAccess.getAstNetworkAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstNetwork__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_6_1__0__Impl
	rule__AstNetwork__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getAstNetworkAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getInputsAssignment_6_1_1()); }
(rule__AstNetwork__InputsAssignment_6_1_1)
{ after(grammarAccess.getAstNetworkAccess().getInputsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstNetwork__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_8__0__Impl
	rule__AstNetwork__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getOutputsAssignment_8_0()); }
(rule__AstNetwork__OutputsAssignment_8_0)
{ after(grammarAccess.getAstNetworkAccess().getOutputsAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_8_1()); }
(rule__AstNetwork__Group_8_1__0)*
{ after(grammarAccess.getAstNetworkAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstNetwork__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_8_1__0__Impl
	rule__AstNetwork__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getCommaKeyword_8_1_0()); }

	',' 

{ after(grammarAccess.getAstNetworkAccess().getCommaKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getOutputsAssignment_8_1_1()); }
(rule__AstNetwork__OutputsAssignment_8_1_1)
{ after(grammarAccess.getAstNetworkAccess().getOutputsAssignment_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstNetwork__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_10__0__Impl
	rule__AstNetwork__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getVarKeyword_10_0()); }

	'var' 

{ after(grammarAccess.getAstNetworkAccess().getVarKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_10__1__Impl
	rule__AstNetwork__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getVariablesAssignment_10_1()); }
(rule__AstNetwork__VariablesAssignment_10_1)
{ after(grammarAccess.getAstNetworkAccess().getVariablesAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_10__2__Impl
	rule__AstNetwork__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getSemicolonKeyword_10_2()); }

	';' 

{ after(grammarAccess.getAstNetworkAccess().getSemicolonKeyword_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_10__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_10__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_10__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getGroup_10_3()); }
(rule__AstNetwork__Group_10_3__0)*
{ after(grammarAccess.getAstNetworkAccess().getGroup_10_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstNetwork__Group_10_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_10_3__0__Impl
	rule__AstNetwork__Group_10_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_10_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getVariablesAssignment_10_3_0()); }
(rule__AstNetwork__VariablesAssignment_10_3_0)
{ after(grammarAccess.getAstNetworkAccess().getVariablesAssignment_10_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstNetwork__Group_10_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstNetwork__Group_10_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__Group_10_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getSemicolonKeyword_10_3_1()); }

	';' 

{ after(grammarAccess.getAstNetworkAccess().getSemicolonKeyword_10_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group__0__Impl
	rule__AstActorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getNameAssignment_0()); }
(rule__AstActorDeclaration__NameAssignment_0)
{ after(grammarAccess.getAstActorDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group__1__Impl
	rule__AstActorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAstActorDeclarationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group__2__Impl
	rule__AstActorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getTypeAssignment_2()); }
(rule__AstActorDeclaration__TypeAssignment_2)
{ after(grammarAccess.getAstActorDeclarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group__3__Impl
	rule__AstActorDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getAstActorDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group__4__Impl
	rule__AstActorDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getGroup_4()); }
(rule__AstActorDeclaration__Group_4__0)?
{ after(grammarAccess.getAstActorDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group__5__Impl
	rule__AstActorDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAstActorDeclarationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getAstActorDeclarationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AstActorDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group_4__0__Impl
	rule__AstActorDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getParametersAssignment_4_0()); }
(rule__AstActorDeclaration__ParametersAssignment_4_0)
{ after(grammarAccess.getAstActorDeclarationAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getGroup_4_1()); }
(rule__AstActorDeclaration__Group_4_1__0)*
{ after(grammarAccess.getAstActorDeclarationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActorDeclaration__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group_4_1__0__Impl
	rule__AstActorDeclaration__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getAstActorDeclarationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActorDeclaration__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActorDeclaration__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getParametersAssignment_4_1_1()); }
(rule__AstActorDeclaration__ParametersAssignment_4_1_1)
{ after(grammarAccess.getAstActorDeclarationAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAssignParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAssignParameter__Group__0__Impl
	rule__AstAssignParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAssignParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAssignParameterAccess().getNameAssignment_0()); }
(rule__AstAssignParameter__NameAssignment_0)
{ after(grammarAccess.getAstAssignParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAssignParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAssignParameter__Group__1__Impl
	rule__AstAssignParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAssignParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAssignParameterAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAstAssignParameterAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAssignParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAssignParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAssignParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAssignParameterAccess().getValueAssignment_2()); }
(rule__AstAssignParameter__ValueAssignment_2)
{ after(grammarAccess.getAstAssignParameterAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstStructure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStructure__Group__0__Impl
	rule__AstStructure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStructure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStructureAccess().getStructureKeyword_0()); }

	'structure' 

{ after(grammarAccess.getAstStructureAccess().getStructureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStructure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStructure__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStructure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAstStructureAccess().getConnectionsAssignment_1()); }
(rule__AstStructure__ConnectionsAssignment_1)
{ after(grammarAccess.getAstStructureAccess().getConnectionsAssignment_1()); }
)
(
{ before(grammarAccess.getAstStructureAccess().getConnectionsAssignment_1()); }
(rule__AstStructure__ConnectionsAssignment_1)*
{ after(grammarAccess.getAstStructureAccess().getConnectionsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstConnection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group__0__Impl
	rule__AstConnection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getGroup_0()); }
(rule__AstConnection__Group_0__0)?
{ after(grammarAccess.getAstConnectionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group__1__Impl
	rule__AstConnection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getOutPortAssignment_1()); }
(rule__AstConnection__OutPortAssignment_1)
{ after(grammarAccess.getAstConnectionAccess().getOutPortAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group__2__Impl
	rule__AstConnection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2()); }

	'-->' 

{ after(grammarAccess.getAstConnectionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group__3__Impl
	rule__AstConnection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getGroup_3()); }
(rule__AstConnection__Group_3__0)?
{ after(grammarAccess.getAstConnectionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group__4__Impl
	rule__AstConnection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getInPortAssignment_4()); }
(rule__AstConnection__InPortAssignment_4)
{ after(grammarAccess.getAstConnectionAccess().getInPortAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group__5__Impl
	rule__AstConnection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getGroup_5()); }
(rule__AstConnection__Group_5__0)?
{ after(grammarAccess.getAstConnectionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getAstConnectionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AstConnection__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group_0__0__Impl
	rule__AstConnection__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getFromAssignment_0_0()); }
(rule__AstConnection__FromAssignment_0_0)
{ after(grammarAccess.getAstConnectionAccess().getFromAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getAstConnectionAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstConnection__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group_3__0__Impl
	rule__AstConnection__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getToAssignment_3_0()); }
(rule__AstConnection__ToAssignment_3_0)
{ after(grammarAccess.getAstConnectionAccess().getToAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getFullStopKeyword_3_1()); }

	'.' 

{ after(grammarAccess.getAstConnectionAccess().getFullStopKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstConnection__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group_5__0__Impl
	rule__AstConnection__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getAstConnectionAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group_5__1__Impl
	rule__AstConnection__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getAttributeAssignment_5_1()); }
(rule__AstConnection__AttributeAssignment_5_1)*
{ after(grammarAccess.getAstConnectionAccess().getAttributeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnection__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnection__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getRightCurlyBracketKeyword_5_2()); }

	'}' 

{ after(grammarAccess.getAstConnectionAccess().getRightCurlyBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstConnectionAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnectionAttribute__Group__0__Impl
	rule__AstConnectionAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnectionAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAttributeAccess().getNameAssignment_0()); }
(rule__AstConnectionAttribute__NameAssignment_0)
{ after(grammarAccess.getAstConnectionAttributeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnectionAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnectionAttribute__Group__1__Impl
	rule__AstConnectionAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnectionAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAttributeAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAstConnectionAttributeAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnectionAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnectionAttribute__Group__2__Impl
	rule__AstConnectionAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnectionAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAttributeAccess().getValueAssignment_2()); }
(rule__AstConnectionAttribute__ValueAssignment_2)
{ after(grammarAccess.getAstConnectionAttributeAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConnectionAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConnectionAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnectionAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAttributeAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAstConnectionAttributeAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstConstantVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstantVariable__Group__0__Impl
	rule__AstConstantVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstantVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstantVariableAccess().getAstVariableDeclarationParserRuleCall_0()); }
	ruleAstVariableDeclaration
{ after(grammarAccess.getAstConstantVariableAccess().getAstVariableDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstantVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstantVariable__Group__1__Impl
	rule__AstConstantVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstantVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstantVariableAccess().getConstantAssignment_1()); }
(rule__AstConstantVariable__ConstantAssignment_1)
{ after(grammarAccess.getAstConstantVariableAccess().getConstantAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstantVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstantVariable__Group__2__Impl
	rule__AstConstantVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstantVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstantVariableAccess().getValueAssignment_2()); }
(rule__AstConstantVariable__ValueAssignment_2)
{ after(grammarAccess.getAstConstantVariableAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstantVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstantVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstantVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstantVariableAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getAstConstantVariableAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstExternalVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalVariable__Group__0__Impl
	rule__AstExternalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalVariableAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getAstExternalVariableAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalVariable__Group__1__Impl
	rule__AstExternalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalVariableAccess().getAstVariableDeclarationParserRuleCall_1()); }
	ruleAstVariableDeclaration
{ after(grammarAccess.getAstExternalVariableAccess().getAstVariableDeclarationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalVariableAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getAstExternalVariableAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstTypeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group__0__Impl
	rule__AstTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getAstTypeDefinitionAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group__1__Impl
	rule__AstTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getNameAssignment_1()); }
(rule__AstTypeDefinition__NameAssignment_1)
{ after(grammarAccess.getAstTypeDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group__2__Impl
	rule__AstTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getGroup_2()); }
(rule__AstTypeDefinition__Group_2__0)?
{ after(grammarAccess.getAstTypeDefinitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group__3__Impl
	rule__AstTypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getAstTypeDefinitionAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group__4__Impl
	rule__AstTypeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getAlternatives_4()); }
(rule__AstTypeDefinition__Alternatives_4)
{ after(grammarAccess.getAstTypeDefinitionAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getAstTypeDefinitionAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstTypeDefinition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_2__0__Impl
	rule__AstTypeDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAstTypeDefinitionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_2__1__Impl
	rule__AstTypeDefinition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getGroup_2_1()); }
(rule__AstTypeDefinition__Group_2_1__0)?
{ after(grammarAccess.getAstTypeDefinitionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAstTypeDefinitionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstTypeDefinition__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_2_1__0__Impl
	rule__AstTypeDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getParametersAssignment_2_1_0()); }
(rule__AstTypeDefinition__ParametersAssignment_2_1_0)
{ after(grammarAccess.getAstTypeDefinitionAccess().getParametersAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getGroup_2_1_1()); }
(rule__AstTypeDefinition__Group_2_1_1__0)*
{ after(grammarAccess.getAstTypeDefinitionAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTypeDefinition__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_2_1_1__0__Impl
	rule__AstTypeDefinition__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getAstTypeDefinitionAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getParametersAssignment_2_1_1_1()); }
(rule__AstTypeDefinition__ParametersAssignment_2_1_1_1)
{ after(grammarAccess.getAstTypeDefinitionAccess().getParametersAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTypeDefinition__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_4_0__0__Impl
	rule__AstTypeDefinition__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getConstructorAssignment_4_0_0()); }
(rule__AstTypeDefinition__ConstructorAssignment_4_0_0)
{ after(grammarAccess.getAstTypeDefinitionAccess().getConstructorAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getGroup_4_0_1()); }
(rule__AstTypeDefinition__Group_4_0_1__0)?
{ after(grammarAccess.getAstTypeDefinitionAccess().getGroup_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTypeDefinition__Group_4_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_4_0_1__0__Impl
	rule__AstTypeDefinition__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_4_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getVerticalLineKeyword_4_0_1_0()); }

	'|' 

{ after(grammarAccess.getAstTypeDefinitionAccess().getVerticalLineKeyword_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeDefinition__Group_4_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeDefinition__Group_4_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__Group_4_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getConstructorAssignment_4_0_1_1()); }
(rule__AstTypeDefinition__ConstructorAssignment_4_0_1_1)
{ after(grammarAccess.getAstTypeDefinitionAccess().getConstructorAssignment_4_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstConstructor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group__0__Impl
	rule__AstConstructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getNameAssignment_0()); }
(rule__AstConstructor__NameAssignment_0)
{ after(grammarAccess.getAstConstructorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstructor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group__1__Impl
	rule__AstConstructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAstConstructorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstructor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group__2__Impl
	rule__AstConstructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getGroup_2()); }
(rule__AstConstructor__Group_2__0)?
{ after(grammarAccess.getAstConstructorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstructor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAstConstructorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstConstructor__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group_2__0__Impl
	rule__AstConstructor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getMembersAssignment_2_0()); }
(rule__AstConstructor__MembersAssignment_2_0)
{ after(grammarAccess.getAstConstructorAccess().getMembersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstructor__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getGroup_2_1()); }
(rule__AstConstructor__Group_2_1__0)*
{ after(grammarAccess.getAstConstructorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstConstructor__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group_2_1__0__Impl
	rule__AstConstructor__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getAstConstructorAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstConstructor__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstConstructor__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getMembersAssignment_2_1_1()); }
(rule__AstConstructor__MembersAssignment_2_1_1)
{ after(grammarAccess.getAstConstructorAccess().getMembersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__0__Impl
	rule__AstActor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getAstActorAction_0()); }
(

)
{ after(grammarAccess.getAstActorAccess().getAstActorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__1__Impl
	rule__AstActor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getActorKeyword_1()); }

	'actor' 

{ after(grammarAccess.getAstActorAccess().getActorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__2__Impl
	rule__AstActor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getNameAssignment_2()); }
(rule__AstActor__NameAssignment_2)
{ after(grammarAccess.getAstActorAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__3__Impl
	rule__AstActor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getAstActorAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__4__Impl
	rule__AstActor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getGroup_4()); }
(rule__AstActor__Group_4__0)?
{ after(grammarAccess.getAstActorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__5__Impl
	rule__AstActor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAstActorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__6__Impl
	rule__AstActor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getGroup_6()); }
(rule__AstActor__Group_6__0)?
{ after(grammarAccess.getAstActorAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__7__Impl
	rule__AstActor__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_7()); }

	'==>' 

{ after(grammarAccess.getAstActorAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__8__Impl
	rule__AstActor__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getGroup_8()); }
(rule__AstActor__Group_8__0)?
{ after(grammarAccess.getAstActorAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__9__Impl
	rule__AstActor__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getColonKeyword_9()); }

	':' 

{ after(grammarAccess.getAstActorAccess().getColonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__10__Impl
	rule__AstActor__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getAlternatives_10()); }
(rule__AstActor__Alternatives_10)*
{ after(grammarAccess.getAstActorAccess().getAlternatives_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getEndKeyword_11()); }

	'end' 

{ after(grammarAccess.getAstActorAccess().getEndKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__AstActor__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_4__0__Impl
	rule__AstActor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getParametersAssignment_4_0()); }
(rule__AstActor__ParametersAssignment_4_0)
{ after(grammarAccess.getAstActorAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getGroup_4_1()); }
(rule__AstActor__Group_4_1__0)*
{ after(grammarAccess.getAstActorAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActor__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_4_1__0__Impl
	rule__AstActor__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getAstActorAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getParametersAssignment_4_1_1()); }
(rule__AstActor__ParametersAssignment_4_1_1)
{ after(grammarAccess.getAstActorAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActor__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_6__0__Impl
	rule__AstActor__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getInputsAssignment_6_0()); }
(rule__AstActor__InputsAssignment_6_0)
{ after(grammarAccess.getAstActorAccess().getInputsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getGroup_6_1()); }
(rule__AstActor__Group_6_1__0)*
{ after(grammarAccess.getAstActorAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActor__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_6_1__0__Impl
	rule__AstActor__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getAstActorAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getInputsAssignment_6_1_1()); }
(rule__AstActor__InputsAssignment_6_1_1)
{ after(grammarAccess.getAstActorAccess().getInputsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActor__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_8__0__Impl
	rule__AstActor__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getOutputsAssignment_8_0()); }
(rule__AstActor__OutputsAssignment_8_0)
{ after(grammarAccess.getAstActorAccess().getOutputsAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getGroup_8_1()); }
(rule__AstActor__Group_8_1__0)*
{ after(grammarAccess.getAstActorAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstActor__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_8_1__0__Impl
	rule__AstActor__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getCommaKeyword_8_1_0()); }

	',' 

{ after(grammarAccess.getAstActorAccess().getCommaKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstActor__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstActor__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getOutputsAssignment_8_1_1()); }
(rule__AstActor__OutputsAssignment_8_1_1)
{ after(grammarAccess.getAstActorAccess().getOutputsAssignment_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstPort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPort__Group__0__Impl
	rule__AstPort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPortAccess().getAnnotationsAssignment_0()); }
(rule__AstPort__AnnotationsAssignment_0)*
{ after(grammarAccess.getAstPortAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPort__Group__1__Impl
	rule__AstPort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPortAccess().getTypeAssignment_1()); }
(rule__AstPort__TypeAssignment_1)
{ after(grammarAccess.getAstPortAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPort__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPortAccess().getNameAssignment_2()); }
(rule__AstPort__NameAssignment_2)
{ after(grammarAccess.getAstPortAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__0__Impl
	rule__AstFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getAnnotationsAssignment_0()); }
(rule__AstFunction__AnnotationsAssignment_0)*
{ after(grammarAccess.getAstFunctionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__1__Impl
	rule__AstFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getFunctionKeyword_1()); }

	'function' 

{ after(grammarAccess.getAstFunctionAccess().getFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__2__Impl
	rule__AstFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getNameAssignment_2()); }
(rule__AstFunction__NameAssignment_2)
{ after(grammarAccess.getAstFunctionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__3__Impl
	rule__AstFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getAstFunctionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__4__Impl
	rule__AstFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getGroup_4()); }
(rule__AstFunction__Group_4__0)?
{ after(grammarAccess.getAstFunctionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__5__Impl
	rule__AstFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAstFunctionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__6__Impl
	rule__AstFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_6()); }

	'-->' 

{ after(grammarAccess.getAstFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__7__Impl
	rule__AstFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getTypeAssignment_7()); }
(rule__AstFunction__TypeAssignment_7)
{ after(grammarAccess.getAstFunctionAccess().getTypeAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__8__Impl
	rule__AstFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getGroup_8()); }
(rule__AstFunction__Group_8__0)?
{ after(grammarAccess.getAstFunctionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__9__Impl
	rule__AstFunction__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getColonKeyword_9()); }

	':' 

{ after(grammarAccess.getAstFunctionAccess().getColonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__10__Impl
	rule__AstFunction__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getExpressionAssignment_10()); }
(rule__AstFunction__ExpressionAssignment_10)
{ after(grammarAccess.getAstFunctionAccess().getExpressionAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getEndKeyword_11()); }

	'end' 

{ after(grammarAccess.getAstFunctionAccess().getEndKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__AstFunction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_4__0__Impl
	rule__AstFunction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getParametersAssignment_4_0()); }
(rule__AstFunction__ParametersAssignment_4_0)
{ after(grammarAccess.getAstFunctionAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getGroup_4_1()); }
(rule__AstFunction__Group_4_1__0)*
{ after(grammarAccess.getAstFunctionAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstFunction__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_4_1__0__Impl
	rule__AstFunction__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getAstFunctionAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getParametersAssignment_4_1_1()); }
(rule__AstFunction__ParametersAssignment_4_1_1)
{ after(grammarAccess.getAstFunctionAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstFunction__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_8__0__Impl
	rule__AstFunction__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getVarKeyword_8_0()); }

	'var' 

{ after(grammarAccess.getAstFunctionAccess().getVarKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_8__1__Impl
	rule__AstFunction__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getVariablesAssignment_8_1()); }
(rule__AstFunction__VariablesAssignment_8_1)
{ after(grammarAccess.getAstFunctionAccess().getVariablesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getGroup_8_2()); }
(rule__AstFunction__Group_8_2__0)*
{ after(grammarAccess.getAstFunctionAccess().getGroup_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstFunction__Group_8_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_8_2__0__Impl
	rule__AstFunction__Group_8_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_8_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getCommaKeyword_8_2_0()); }

	',' 

{ after(grammarAccess.getAstFunctionAccess().getCommaKeyword_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstFunction__Group_8_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstFunction__Group_8_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__Group_8_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getVariablesAssignment_8_2_1()); }
(rule__AstFunction__VariablesAssignment_8_2_1)
{ after(grammarAccess.getAstFunctionAccess().getVariablesAssignment_8_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__0__Impl
	rule__AstExternalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getAstFunctionAction_0()); }
(

)
{ after(grammarAccess.getAstExternalFunctionAccess().getAstFunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__1__Impl
	rule__AstExternalFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getAnnotationsAssignment_1()); }
(rule__AstExternalFunction__AnnotationsAssignment_1)*
{ after(grammarAccess.getAstExternalFunctionAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__2__Impl
	rule__AstExternalFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getExternalKeyword_2()); }

	'external' 

{ after(grammarAccess.getAstExternalFunctionAccess().getExternalKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__3__Impl
	rule__AstExternalFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getFunctionKeyword_3()); }

	'function' 

{ after(grammarAccess.getAstExternalFunctionAccess().getFunctionKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__4__Impl
	rule__AstExternalFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getNameAssignment_4()); }
(rule__AstExternalFunction__NameAssignment_4)
{ after(grammarAccess.getAstExternalFunctionAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__5__Impl
	rule__AstExternalFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getAstExternalFunctionAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__6__Impl
	rule__AstExternalFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getGroup_6()); }
(rule__AstExternalFunction__Group_6__0)?
{ after(grammarAccess.getAstExternalFunctionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__7__Impl
	rule__AstExternalFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getAstExternalFunctionAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__8__Impl
	rule__AstExternalFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_8()); }

	'-->' 

{ after(grammarAccess.getAstExternalFunctionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__9__Impl
	rule__AstExternalFunction__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getTypeAssignment_9()); }
(rule__AstExternalFunction__TypeAssignment_9)
{ after(grammarAccess.getAstExternalFunctionAccess().getTypeAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getSemicolonKeyword_10()); }

	';' 

{ after(grammarAccess.getAstExternalFunctionAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__AstExternalFunction__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group_6__0__Impl
	rule__AstExternalFunction__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getParametersAssignment_6_0()); }
(rule__AstExternalFunction__ParametersAssignment_6_0)
{ after(grammarAccess.getAstExternalFunctionAccess().getParametersAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getGroup_6_1()); }
(rule__AstExternalFunction__Group_6_1__0)*
{ after(grammarAccess.getAstExternalFunctionAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalFunction__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group_6_1__0__Impl
	rule__AstExternalFunction__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getAstExternalFunctionAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalFunction__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalFunction__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getParametersAssignment_6_1_1()); }
(rule__AstExternalFunction__ParametersAssignment_6_1_1)
{ after(grammarAccess.getAstExternalFunctionAccess().getParametersAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstProcedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__0__Impl
	rule__AstProcedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getAnnotationsAssignment_0()); }
(rule__AstProcedure__AnnotationsAssignment_0)*
{ after(grammarAccess.getAstProcedureAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__1__Impl
	rule__AstProcedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getProcedureKeyword_1()); }

	'procedure' 

{ after(grammarAccess.getAstProcedureAccess().getProcedureKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__2__Impl
	rule__AstProcedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getNameAssignment_2()); }
(rule__AstProcedure__NameAssignment_2)
{ after(grammarAccess.getAstProcedureAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__3__Impl
	rule__AstProcedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getAstProcedureAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__4__Impl
	rule__AstProcedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getGroup_4()); }
(rule__AstProcedure__Group_4__0)?
{ after(grammarAccess.getAstProcedureAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__5__Impl
	rule__AstProcedure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAstProcedureAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__6__Impl
	rule__AstProcedure__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getGroup_6()); }
(rule__AstProcedure__Group_6__0)?
{ after(grammarAccess.getAstProcedureAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__7__Impl
	rule__AstProcedure__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getBeginKeyword_7()); }

	'begin' 

{ after(grammarAccess.getAstProcedureAccess().getBeginKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__8__Impl
	rule__AstProcedure__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getStatementsAssignment_8()); }
(rule__AstProcedure__StatementsAssignment_8)*
{ after(grammarAccess.getAstProcedureAccess().getStatementsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getEndKeyword_9()); }

	'end' 

{ after(grammarAccess.getAstProcedureAccess().getEndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__AstProcedure__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_4__0__Impl
	rule__AstProcedure__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_0()); }
(rule__AstProcedure__ParametersAssignment_4_0)
{ after(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getGroup_4_1()); }
(rule__AstProcedure__Group_4_1__0)*
{ after(grammarAccess.getAstProcedureAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstProcedure__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_4_1__0__Impl
	rule__AstProcedure__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getAstProcedureAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_1_1()); }
(rule__AstProcedure__ParametersAssignment_4_1_1)
{ after(grammarAccess.getAstProcedureAccess().getParametersAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstProcedure__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_6__0__Impl
	rule__AstProcedure__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getVarKeyword_6_0()); }

	'var' 

{ after(grammarAccess.getAstProcedureAccess().getVarKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_6__1__Impl
	rule__AstProcedure__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_1()); }
(rule__AstProcedure__VariablesAssignment_6_1)
{ after(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getGroup_6_2()); }
(rule__AstProcedure__Group_6_2__0)*
{ after(grammarAccess.getAstProcedureAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstProcedure__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_6_2__0__Impl
	rule__AstProcedure__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getCommaKeyword_6_2_0()); }

	',' 

{ after(grammarAccess.getAstProcedureAccess().getCommaKeyword_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstProcedure__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstProcedure__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_2_1()); }
(rule__AstProcedure__VariablesAssignment_6_2_1)
{ after(grammarAccess.getAstProcedureAccess().getVariablesAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalProcedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__0__Impl
	rule__AstExternalProcedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getAstProcedureAction_0()); }
(

)
{ after(grammarAccess.getAstExternalProcedureAccess().getAstProcedureAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__1__Impl
	rule__AstExternalProcedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getAnnotationsAssignment_1()); }
(rule__AstExternalProcedure__AnnotationsAssignment_1)*
{ after(grammarAccess.getAstExternalProcedureAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__2__Impl
	rule__AstExternalProcedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getExternalKeyword_2()); }

	'external' 

{ after(grammarAccess.getAstExternalProcedureAccess().getExternalKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__3__Impl
	rule__AstExternalProcedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getProcedureKeyword_3()); }

	'procedure' 

{ after(grammarAccess.getAstExternalProcedureAccess().getProcedureKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__4__Impl
	rule__AstExternalProcedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getNameAssignment_4()); }
(rule__AstExternalProcedure__NameAssignment_4)
{ after(grammarAccess.getAstExternalProcedureAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__5__Impl
	rule__AstExternalProcedure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getAstExternalProcedureAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__6__Impl
	rule__AstExternalProcedure__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getGroup_6()); }
(rule__AstExternalProcedure__Group_6__0)?
{ after(grammarAccess.getAstExternalProcedureAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__7__Impl
	rule__AstExternalProcedure__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getAstExternalProcedureAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getSemicolonKeyword_8()); }

	';' 

{ after(grammarAccess.getAstExternalProcedureAccess().getSemicolonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__AstExternalProcedure__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group_6__0__Impl
	rule__AstExternalProcedure__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getParametersAssignment_6_0()); }
(rule__AstExternalProcedure__ParametersAssignment_6_0)
{ after(grammarAccess.getAstExternalProcedureAccess().getParametersAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getGroup_6_1()); }
(rule__AstExternalProcedure__Group_6_1__0)*
{ after(grammarAccess.getAstExternalProcedureAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalProcedure__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group_6_1__0__Impl
	rule__AstExternalProcedure__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getAstExternalProcedureAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalProcedure__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalProcedure__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getParametersAssignment_6_1_1()); }
(rule__AstExternalProcedure__ParametersAssignment_6_1_1)
{ after(grammarAccess.getAstExternalProcedureAccess().getParametersAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstParameter__Group__0__Impl
	rule__AstParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstParameterAccess().getAstVariableDeclarationParserRuleCall_0()); }
	ruleAstVariableDeclaration
{ after(grammarAccess.getAstParameterAccess().getAstVariableDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstParameterAccess().getGroup_1()); }
(rule__AstParameter__Group_1__0)?
{ after(grammarAccess.getAstParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstParameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstParameter__Group_1__0__Impl
	rule__AstParameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstParameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstParameterAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getAstParameterAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstParameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstParameter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstParameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstParameterAccess().getValueAssignment_1_1()); }
(rule__AstParameter__ValueAssignment_1_1)
{ after(grammarAccess.getAstParameterAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstStateVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStateVariable__Group__0__Impl
	rule__AstStateVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStateVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStateVariableAccess().getAstValuedVariableDeclarationParserRuleCall_0()); }
	ruleAstValuedVariableDeclaration
{ after(grammarAccess.getAstStateVariableAccess().getAstValuedVariableDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStateVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStateVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStateVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStateVariableAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getAstStateVariableAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTag__Group__0__Impl
	rule__AstTag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTagAccess().getIdentifiersAssignment_0()); }
(rule__AstTag__IdentifiersAssignment_0)
{ after(grammarAccess.getAstTagAccess().getIdentifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTag__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTagAccess().getGroup_1()); }
(rule__AstTag__Group_1__0)*
{ after(grammarAccess.getAstTagAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTag__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTag__Group_1__0__Impl
	rule__AstTag__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTag__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTagAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getAstTagAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTag__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTag__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTag__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTagAccess().getIdentifiersAssignment_1_1()); }
(rule__AstTag__IdentifiersAssignment_1_1)
{ after(grammarAccess.getAstTagAccess().getIdentifiersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalActor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__0__Impl
	rule__AstExternalActor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getAstExternalActorAction_0()); }
(

)
{ after(grammarAccess.getAstExternalActorAccess().getAstExternalActorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__1__Impl
	rule__AstExternalActor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getExternalKeyword_1()); }

	'external' 

{ after(grammarAccess.getAstExternalActorAccess().getExternalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__2__Impl
	rule__AstExternalActor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getActorKeyword_2()); }

	'actor' 

{ after(grammarAccess.getAstExternalActorAccess().getActorKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__3__Impl
	rule__AstExternalActor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getNameAssignment_3()); }
(rule__AstExternalActor__NameAssignment_3)
{ after(grammarAccess.getAstExternalActorAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__4__Impl
	rule__AstExternalActor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getAstExternalActorAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__5__Impl
	rule__AstExternalActor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getGroup_5()); }
(rule__AstExternalActor__Group_5__0)?
{ after(grammarAccess.getAstExternalActorAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__6__Impl
	rule__AstExternalActor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getAstExternalActorAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__7__Impl
	rule__AstExternalActor__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getGroup_7()); }
(rule__AstExternalActor__Group_7__0)?
{ after(grammarAccess.getAstExternalActorAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__8__Impl
	rule__AstExternalActor__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_8()); }

	'==>' 

{ after(grammarAccess.getAstExternalActorAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__9__Impl
	rule__AstExternalActor__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getGroup_9()); }
(rule__AstExternalActor__Group_9__0)?
{ after(grammarAccess.getAstExternalActorAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getSemicolonKeyword_10()); }

	';' 

{ after(grammarAccess.getAstExternalActorAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__AstExternalActor__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_5__0__Impl
	rule__AstExternalActor__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getParametersAssignment_5_0()); }
(rule__AstExternalActor__ParametersAssignment_5_0)
{ after(grammarAccess.getAstExternalActorAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getGroup_5_1()); }
(rule__AstExternalActor__Group_5_1__0)*
{ after(grammarAccess.getAstExternalActorAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalActor__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_5_1__0__Impl
	rule__AstExternalActor__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getAstExternalActorAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getParametersAssignment_5_1_1()); }
(rule__AstExternalActor__ParametersAssignment_5_1_1)
{ after(grammarAccess.getAstExternalActorAccess().getParametersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalActor__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_7__0__Impl
	rule__AstExternalActor__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getInputsAssignment_7_0()); }
(rule__AstExternalActor__InputsAssignment_7_0)
{ after(grammarAccess.getAstExternalActorAccess().getInputsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getGroup_7_1()); }
(rule__AstExternalActor__Group_7_1__0)*
{ after(grammarAccess.getAstExternalActorAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalActor__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_7_1__0__Impl
	rule__AstExternalActor__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getCommaKeyword_7_1_0()); }

	',' 

{ after(grammarAccess.getAstExternalActorAccess().getCommaKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getInputsAssignment_7_1_1()); }
(rule__AstExternalActor__InputsAssignment_7_1_1)
{ after(grammarAccess.getAstExternalActorAccess().getInputsAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalActor__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_9__0__Impl
	rule__AstExternalActor__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getOutputsAssignment_9_0()); }
(rule__AstExternalActor__OutputsAssignment_9_0)
{ after(grammarAccess.getAstExternalActorAccess().getOutputsAssignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getGroup_9_1()); }
(rule__AstExternalActor__Group_9_1__0)*
{ after(grammarAccess.getAstExternalActorAccess().getGroup_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExternalActor__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_9_1__0__Impl
	rule__AstExternalActor__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getCommaKeyword_9_1_0()); }

	',' 

{ after(grammarAccess.getAstExternalActorAccess().getCommaKeyword_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExternalActor__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExternalActor__Group_9_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getOutputsAssignment_9_1_1()); }
(rule__AstExternalActor__OutputsAssignment_9_1_1)
{ after(grammarAccess.getAstExternalActorAccess().getOutputsAssignment_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInequality__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInequality__Group__0__Impl
	rule__AstInequality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInequality__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInequalityAccess().getTagsAssignment_0()); }
(rule__AstInequality__TagsAssignment_0)
{ after(grammarAccess.getAstInequalityAccess().getTagsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInequality__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInequality__Group__1__Impl
	rule__AstInequality__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInequality__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAstInequalityAccess().getGroup_1()); }
(rule__AstInequality__Group_1__0)
{ after(grammarAccess.getAstInequalityAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getAstInequalityAccess().getGroup_1()); }
(rule__AstInequality__Group_1__0)*
{ after(grammarAccess.getAstInequalityAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInequality__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInequality__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInequality__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInequalityAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getAstInequalityAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstInequality__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInequality__Group_1__0__Impl
	rule__AstInequality__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInequality__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInequalityAccess().getGreaterThanSignKeyword_1_0()); }

	'>' 

{ after(grammarAccess.getAstInequalityAccess().getGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInequality__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInequality__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInequality__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInequalityAccess().getTagsAssignment_1_1()); }
(rule__AstInequality__TagsAssignment_1_1)
{ after(grammarAccess.getAstInequalityAccess().getTagsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstPriority__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPriority__Group__0__Impl
	rule__AstPriority__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPriority__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPriorityAccess().getAstPriorityAction_0()); }
(

)
{ after(grammarAccess.getAstPriorityAccess().getAstPriorityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPriority__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPriority__Group__1__Impl
	rule__AstPriority__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPriority__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPriorityAccess().getPriorityKeyword_1()); }

	'priority' 

{ after(grammarAccess.getAstPriorityAccess().getPriorityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPriority__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPriority__Group__2__Impl
	rule__AstPriority__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPriority__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPriorityAccess().getInequalitiesAssignment_2()); }
(rule__AstPriority__InequalitiesAssignment_2)*
{ after(grammarAccess.getAstPriorityAccess().getInequalitiesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstPriority__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstPriority__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstPriority__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPriorityAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getAstPriorityAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstSchedule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstSchedule__Group__0__Impl
	rule__AstSchedule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getScheduleKeyword_0()); }

	'schedule' 

{ after(grammarAccess.getAstScheduleAccess().getScheduleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstSchedule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstSchedule__Group__1__Impl
	rule__AstSchedule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getFsmKeyword_1()); }

	'fsm' 

{ after(grammarAccess.getAstScheduleAccess().getFsmKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstSchedule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstSchedule__Group__2__Impl
	rule__AstSchedule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getInitialStateAssignment_2()); }
(rule__AstSchedule__InitialStateAssignment_2)
{ after(grammarAccess.getAstScheduleAccess().getInitialStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstSchedule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstSchedule__Group__3__Impl
	rule__AstSchedule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getAstScheduleAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstSchedule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstSchedule__Group__4__Impl
	rule__AstSchedule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getTransitionsAssignment_4()); }
(rule__AstSchedule__TransitionsAssignment_4)*
{ after(grammarAccess.getAstScheduleAccess().getTransitionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstSchedule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstSchedule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getAstScheduleAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstTransition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__0__Impl
	rule__AstTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getSourceAssignment_0()); }
(rule__AstTransition__SourceAssignment_0)
{ after(grammarAccess.getAstTransitionAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__1__Impl
	rule__AstTransition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAstTransitionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__2__Impl
	rule__AstTransition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getTagsAssignment_2()); }
(rule__AstTransition__TagsAssignment_2)
{ after(grammarAccess.getAstTransitionAccess().getTagsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__3__Impl
	rule__AstTransition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getGroup_3()); }
(rule__AstTransition__Group_3__0)*
{ after(grammarAccess.getAstTransitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__4__Impl
	rule__AstTransition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAstTransitionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__5__Impl
	rule__AstTransition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_5()); }

	'-->' 

{ after(grammarAccess.getAstTransitionAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__6__Impl
	rule__AstTransition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getTargetAssignment_6()); }
(rule__AstTransition__TargetAssignment_6)
{ after(grammarAccess.getAstTransitionAccess().getTargetAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getAstTransitionAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__AstTransition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group_3__0__Impl
	rule__AstTransition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAstTransitionAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTransition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTransition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getTagsAssignment_3_1()); }
(rule__AstTransition__TagsAssignment_3_1)
{ after(grammarAccess.getAstTransitionAccess().getTagsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__0__Impl
	rule__AstAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getAstActionAction_0()); }
(

)
{ after(grammarAccess.getAstActionAccess().getAstActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__1__Impl
	rule__AstAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getAnnotationsAssignment_1()); }
(rule__AstAction__AnnotationsAssignment_1)*
{ after(grammarAccess.getAstActionAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__2__Impl
	rule__AstAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_2()); }
(rule__AstAction__Group_2__0)?
{ after(grammarAccess.getAstActionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__3__Impl
	rule__AstAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getActionKeyword_3()); }

	'action' 

{ after(grammarAccess.getAstActionAccess().getActionKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__4__Impl
	rule__AstAction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_4()); }
(rule__AstAction__Group_4__0)?
{ after(grammarAccess.getAstActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__5__Impl
	rule__AstAction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_5()); }

	'==>' 

{ after(grammarAccess.getAstActionAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__6__Impl
	rule__AstAction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_6()); }
(rule__AstAction__Group_6__0)?
{ after(grammarAccess.getAstActionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__7__Impl
	rule__AstAction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_7()); }
(rule__AstAction__Group_7__0)?
{ after(grammarAccess.getAstActionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__8__Impl
	rule__AstAction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_8()); }
(rule__AstAction__Group_8__0)?
{ after(grammarAccess.getAstActionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__9__Impl
	rule__AstAction__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_9()); }
(rule__AstAction__Group_9__0)?
{ after(grammarAccess.getAstActionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getEndKeyword_10()); }

	'end' 

{ after(grammarAccess.getAstActionAccess().getEndKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__AstAction__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_2__0__Impl
	rule__AstAction__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getTagAssignment_2_0()); }
(rule__AstAction__TagAssignment_2_0)
{ after(grammarAccess.getAstActionAccess().getTagAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getColonKeyword_2_1()); }

	':' 

{ after(grammarAccess.getAstActionAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_4__0__Impl
	rule__AstAction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getInputsAssignment_4_0()); }
(rule__AstAction__InputsAssignment_4_0)
{ after(grammarAccess.getAstActionAccess().getInputsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_4_1()); }
(rule__AstAction__Group_4_1__0)*
{ after(grammarAccess.getAstActionAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_4_1__0__Impl
	rule__AstAction__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getAstActionAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getInputsAssignment_4_1_1()); }
(rule__AstAction__InputsAssignment_4_1_1)
{ after(grammarAccess.getAstActionAccess().getInputsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_6__0__Impl
	rule__AstAction__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getOutputsAssignment_6_0()); }
(rule__AstAction__OutputsAssignment_6_0)
{ after(grammarAccess.getAstActionAccess().getOutputsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_6_1()); }
(rule__AstAction__Group_6_1__0)*
{ after(grammarAccess.getAstActionAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_6_1__0__Impl
	rule__AstAction__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getAstActionAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getOutputsAssignment_6_1_1()); }
(rule__AstAction__OutputsAssignment_6_1_1)
{ after(grammarAccess.getAstActionAccess().getOutputsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_7__0__Impl
	rule__AstAction__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGuardKeyword_7_0()); }

	'guard' 

{ after(grammarAccess.getAstActionAccess().getGuardKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_7__1__Impl
	rule__AstAction__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGuardsAssignment_7_1()); }
(rule__AstAction__GuardsAssignment_7_1)
{ after(grammarAccess.getAstActionAccess().getGuardsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_7_2()); }
(rule__AstAction__Group_7_2__0)*
{ after(grammarAccess.getAstActionAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstAction__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_7_2__0__Impl
	rule__AstAction__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getCommaKeyword_7_2_0()); }

	',' 

{ after(grammarAccess.getAstActionAccess().getCommaKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGuardsAssignment_7_2_1()); }
(rule__AstAction__GuardsAssignment_7_2_1)
{ after(grammarAccess.getAstActionAccess().getGuardsAssignment_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_8__0__Impl
	rule__AstAction__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getVarKeyword_8_0()); }

	'var' 

{ after(grammarAccess.getAstActionAccess().getVarKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_8__1__Impl
	rule__AstAction__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getVariablesAssignment_8_1()); }
(rule__AstAction__VariablesAssignment_8_1)
{ after(grammarAccess.getAstActionAccess().getVariablesAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGroup_8_2()); }
(rule__AstAction__Group_8_2__0)*
{ after(grammarAccess.getAstActionAccess().getGroup_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstAction__Group_8_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_8_2__0__Impl
	rule__AstAction__Group_8_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_8_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getCommaKeyword_8_2_0()); }

	',' 

{ after(grammarAccess.getAstActionAccess().getCommaKeyword_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_8_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_8_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_8_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getVariablesAssignment_8_2_1()); }
(rule__AstAction__VariablesAssignment_8_2_1)
{ after(grammarAccess.getAstActionAccess().getVariablesAssignment_8_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAction__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_9__0__Impl
	rule__AstAction__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getDoKeyword_9_0()); }

	'do' 

{ after(grammarAccess.getAstActionAccess().getDoKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAction__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getStatementsAssignment_9_1()); }
(rule__AstAction__StatementsAssignment_9_1)*
{ after(grammarAccess.getAstActionAccess().getStatementsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInitialize__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__0__Impl
	rule__AstInitialize__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getAstInitializeAction_0()); }
(

)
{ after(grammarAccess.getAstInitializeAccess().getAstInitializeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__1__Impl
	rule__AstInitialize__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getAnnotationsAssignment_1()); }
(rule__AstInitialize__AnnotationsAssignment_1)*
{ after(grammarAccess.getAstInitializeAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__2__Impl
	rule__AstInitialize__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_2()); }
(rule__AstInitialize__Group_2__0)?
{ after(grammarAccess.getAstInitializeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__3__Impl
	rule__AstInitialize__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getInitializeKeyword_3()); }

	'initialize' 

{ after(grammarAccess.getAstInitializeAccess().getInitializeKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__4__Impl
	rule__AstInitialize__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_4()); }

	'==>' 

{ after(grammarAccess.getAstInitializeAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__5__Impl
	rule__AstInitialize__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_5()); }
(rule__AstInitialize__Group_5__0)?
{ after(grammarAccess.getAstInitializeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__6__Impl
	rule__AstInitialize__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_6()); }
(rule__AstInitialize__Group_6__0)?
{ after(grammarAccess.getAstInitializeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__7__Impl
	rule__AstInitialize__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_7()); }
(rule__AstInitialize__Group_7__0)?
{ after(grammarAccess.getAstInitializeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__8__Impl
	rule__AstInitialize__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_8()); }
(rule__AstInitialize__Group_8__0)?
{ after(grammarAccess.getAstInitializeAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getEndKeyword_9()); }

	'end' 

{ after(grammarAccess.getAstInitializeAccess().getEndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__AstInitialize__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_2__0__Impl
	rule__AstInitialize__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getTagAssignment_2_0()); }
(rule__AstInitialize__TagAssignment_2_0)
{ after(grammarAccess.getAstInitializeAccess().getTagAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getColonKeyword_2_1()); }

	':' 

{ after(grammarAccess.getAstInitializeAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInitialize__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_5__0__Impl
	rule__AstInitialize__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getOutputsAssignment_5_0()); }
(rule__AstInitialize__OutputsAssignment_5_0)
{ after(grammarAccess.getAstInitializeAccess().getOutputsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_5_1()); }
(rule__AstInitialize__Group_5_1__0)*
{ after(grammarAccess.getAstInitializeAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInitialize__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_5_1__0__Impl
	rule__AstInitialize__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getAstInitializeAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getOutputsAssignment_5_1_1()); }
(rule__AstInitialize__OutputsAssignment_5_1_1)
{ after(grammarAccess.getAstInitializeAccess().getOutputsAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInitialize__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_6__0__Impl
	rule__AstInitialize__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGuardKeyword_6_0()); }

	'guard' 

{ after(grammarAccess.getAstInitializeAccess().getGuardKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_6__1__Impl
	rule__AstInitialize__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGuardsAssignment_6_1()); }
(rule__AstInitialize__GuardsAssignment_6_1)
{ after(grammarAccess.getAstInitializeAccess().getGuardsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_6_2()); }
(rule__AstInitialize__Group_6_2__0)*
{ after(grammarAccess.getAstInitializeAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstInitialize__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_6_2__0__Impl
	rule__AstInitialize__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getCommaKeyword_6_2_0()); }

	',' 

{ after(grammarAccess.getAstInitializeAccess().getCommaKeyword_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGuardsAssignment_6_2_1()); }
(rule__AstInitialize__GuardsAssignment_6_2_1)
{ after(grammarAccess.getAstInitializeAccess().getGuardsAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInitialize__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_7__0__Impl
	rule__AstInitialize__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getVarKeyword_7_0()); }

	'var' 

{ after(grammarAccess.getAstInitializeAccess().getVarKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_7__1__Impl
	rule__AstInitialize__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getVariablesAssignment_7_1()); }
(rule__AstInitialize__VariablesAssignment_7_1)
{ after(grammarAccess.getAstInitializeAccess().getVariablesAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGroup_7_2()); }
(rule__AstInitialize__Group_7_2__0)*
{ after(grammarAccess.getAstInitializeAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstInitialize__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_7_2__0__Impl
	rule__AstInitialize__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getCommaKeyword_7_2_0()); }

	',' 

{ after(grammarAccess.getAstInitializeAccess().getCommaKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getVariablesAssignment_7_2_1()); }
(rule__AstInitialize__VariablesAssignment_7_2_1)
{ after(grammarAccess.getAstInitializeAccess().getVariablesAssignment_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInitialize__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_8__0__Impl
	rule__AstInitialize__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getDoKeyword_8_0()); }

	'do' 

{ after(grammarAccess.getAstInitializeAccess().getDoKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInitialize__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInitialize__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getStatementsAssignment_8_1()); }
(rule__AstInitialize__StatementsAssignment_8_1)*
{ after(grammarAccess.getAstInitializeAccess().getStatementsAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInputPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group__0__Impl
	rule__AstInputPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getGroup_0()); }
(rule__AstInputPattern__Group_0__0)?
{ after(grammarAccess.getAstInputPatternAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group__1__Impl
	rule__AstInputPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getAstInputPatternAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group__2__Impl
	rule__AstInputPattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getTokensAssignment_2()); }
(rule__AstInputPattern__TokensAssignment_2)
{ after(grammarAccess.getAstInputPatternAccess().getTokensAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group__3__Impl
	rule__AstInputPattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getGroup_3()); }
(rule__AstInputPattern__Group_3__0)*
{ after(grammarAccess.getAstInputPatternAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group__4__Impl
	rule__AstInputPattern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getAstInputPatternAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getGroup_5()); }
(rule__AstInputPattern__Group_5__0)?
{ after(grammarAccess.getAstInputPatternAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstInputPattern__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group_0__0__Impl
	rule__AstInputPattern__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getPortAssignment_0_0()); }
(rule__AstInputPattern__PortAssignment_0_0)
{ after(grammarAccess.getAstInputPatternAccess().getPortAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getAstInputPatternAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInputPattern__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group_3__0__Impl
	rule__AstInputPattern__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAstInputPatternAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getTokensAssignment_3_1()); }
(rule__AstInputPattern__TokensAssignment_3_1)
{ after(grammarAccess.getAstInputPatternAccess().getTokensAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstInputPattern__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group_5__0__Impl
	rule__AstInputPattern__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getRepeatKeyword_5_0()); }

	'repeat' 

{ after(grammarAccess.getAstInputPatternAccess().getRepeatKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstInputPattern__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstInputPattern__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getRepeatAssignment_5_1()); }
(rule__AstInputPattern__RepeatAssignment_5_1)
{ after(grammarAccess.getAstInputPatternAccess().getRepeatAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstOutputPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group__0__Impl
	rule__AstOutputPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getGroup_0()); }
(rule__AstOutputPattern__Group_0__0)?
{ after(grammarAccess.getAstOutputPatternAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group__1__Impl
	rule__AstOutputPattern__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getAstOutputPatternAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group__2__Impl
	rule__AstOutputPattern__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getValuesAssignment_2()); }
(rule__AstOutputPattern__ValuesAssignment_2)
{ after(grammarAccess.getAstOutputPatternAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group__3__Impl
	rule__AstOutputPattern__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getGroup_3()); }
(rule__AstOutputPattern__Group_3__0)*
{ after(grammarAccess.getAstOutputPatternAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group__4__Impl
	rule__AstOutputPattern__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getAstOutputPatternAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getGroup_5()); }
(rule__AstOutputPattern__Group_5__0)?
{ after(grammarAccess.getAstOutputPatternAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstOutputPattern__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group_0__0__Impl
	rule__AstOutputPattern__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getPortAssignment_0_0()); }
(rule__AstOutputPattern__PortAssignment_0_0)
{ after(grammarAccess.getAstOutputPatternAccess().getPortAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getAstOutputPatternAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstOutputPattern__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group_3__0__Impl
	rule__AstOutputPattern__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getAstOutputPatternAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getValuesAssignment_3_1()); }
(rule__AstOutputPattern__ValuesAssignment_3_1)
{ after(grammarAccess.getAstOutputPatternAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstOutputPattern__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group_5__0__Impl
	rule__AstOutputPattern__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getRepeatKeyword_5_0()); }

	'repeat' 

{ after(grammarAccess.getAstOutputPatternAccess().getRepeatKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstOutputPattern__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstOutputPattern__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getRepeatAssignment_5_1()); }
(rule__AstOutputPattern__RepeatAssignment_5_1)
{ after(grammarAccess.getAstOutputPatternAccess().getRepeatAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstStatementAssign__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group__0__Impl
	rule__AstStatementAssign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getTargetAssignment_0()); }
(rule__AstStatementAssign__TargetAssignment_0)
{ after(grammarAccess.getAstStatementAssignAccess().getTargetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementAssign__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group__1__Impl
	rule__AstStatementAssign__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getGroup_1()); }
(rule__AstStatementAssign__Group_1__0)*
{ after(grammarAccess.getAstStatementAssignAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementAssign__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group__2__Impl
	rule__AstStatementAssign__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getMemberAssignment_2()); }
(rule__AstStatementAssign__MemberAssignment_2)*
{ after(grammarAccess.getAstStatementAssignAccess().getMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementAssign__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group__3__Impl
	rule__AstStatementAssign__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getColonEqualsSignKeyword_3()); }

	':=' 

{ after(grammarAccess.getAstStatementAssignAccess().getColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementAssign__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group__4__Impl
	rule__AstStatementAssign__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getValueAssignment_4()); }
(rule__AstStatementAssign__ValueAssignment_4)
{ after(grammarAccess.getAstStatementAssignAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementAssign__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getAstStatementAssignAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstStatementAssign__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group_1__0__Impl
	rule__AstStatementAssign__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getAstStatementAssignAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementAssign__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group_1__1__Impl
	rule__AstStatementAssign__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getIndexesAssignment_1_1()); }
(rule__AstStatementAssign__IndexesAssignment_1_1)
{ after(grammarAccess.getAstStatementAssignAccess().getIndexesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementAssign__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementAssign__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getAstStatementAssignAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstStatementCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group__0__Impl
	rule__AstStatementCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getProcedureAssignment_0()); }
(rule__AstStatementCall__ProcedureAssignment_0)
{ after(grammarAccess.getAstStatementCallAccess().getProcedureAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group__1__Impl
	rule__AstStatementCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAstStatementCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group__2__Impl
	rule__AstStatementCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getGroup_2()); }
(rule__AstStatementCall__Group_2__0)?
{ after(grammarAccess.getAstStatementCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group__3__Impl
	rule__AstStatementCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAstStatementCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getAstStatementCallAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AstStatementCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group_2__0__Impl
	rule__AstStatementCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getParametersAssignment_2_0()); }
(rule__AstStatementCall__ParametersAssignment_2_0)
{ after(grammarAccess.getAstStatementCallAccess().getParametersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getGroup_2_1()); }
(rule__AstStatementCall__Group_2_1__0)*
{ after(grammarAccess.getAstStatementCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstStatementCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group_2_1__0__Impl
	rule__AstStatementCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getAstStatementCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getParametersAssignment_2_1_1()); }
(rule__AstStatementCall__ParametersAssignment_2_1_1)
{ after(grammarAccess.getAstStatementCallAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstStatementForeach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group__0__Impl
	rule__AstStatementForeach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getForeachKeyword_0()); }

	'foreach' 

{ after(grammarAccess.getAstStatementForeachAccess().getForeachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group__1__Impl
	rule__AstStatementForeach__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGeneratorsAssignment_1()); }
(rule__AstStatementForeach__GeneratorsAssignment_1)
{ after(grammarAccess.getAstStatementForeachAccess().getGeneratorsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group__2__Impl
	rule__AstStatementForeach__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGroup_2()); }
(rule__AstStatementForeach__Group_2__0)*
{ after(grammarAccess.getAstStatementForeachAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group__3__Impl
	rule__AstStatementForeach__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGroup_3()); }
(rule__AstStatementForeach__Group_3__0)?
{ after(grammarAccess.getAstStatementForeachAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group__4__Impl
	rule__AstStatementForeach__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getDoKeyword_4()); }

	'do' 

{ after(grammarAccess.getAstStatementForeachAccess().getDoKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group__5__Impl
	rule__AstStatementForeach__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getStatementsAssignment_5()); }
(rule__AstStatementForeach__StatementsAssignment_5)*
{ after(grammarAccess.getAstStatementForeachAccess().getStatementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getAstStatementForeachAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AstStatementForeach__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group_2__0__Impl
	rule__AstStatementForeach__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAstStatementForeachAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGeneratorsAssignment_2_1()); }
(rule__AstStatementForeach__GeneratorsAssignment_2_1)
{ after(grammarAccess.getAstStatementForeachAccess().getGeneratorsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstStatementForeach__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group_3__0__Impl
	rule__AstStatementForeach__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getVarKeyword_3_0()); }

	'var' 

{ after(grammarAccess.getAstStatementForeachAccess().getVarKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group_3__1__Impl
	rule__AstStatementForeach__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getVariablesAssignment_3_1()); }
(rule__AstStatementForeach__VariablesAssignment_3_1)
{ after(grammarAccess.getAstStatementForeachAccess().getVariablesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGroup_3_2()); }
(rule__AstStatementForeach__Group_3_2__0)*
{ after(grammarAccess.getAstStatementForeachAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstStatementForeach__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group_3_2__0__Impl
	rule__AstStatementForeach__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getAstStatementForeachAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementForeach__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementForeach__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getVariablesAssignment_3_2_1()); }
(rule__AstStatementForeach__VariablesAssignment_3_2_1)
{ after(grammarAccess.getAstStatementForeachAccess().getVariablesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstForeachGenerator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstForeachGenerator__Group__0__Impl
	rule__AstForeachGenerator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstForeachGenerator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstForeachGeneratorAccess().getVariableAssignment_0()); }
(rule__AstForeachGenerator__VariableAssignment_0)
{ after(grammarAccess.getAstForeachGeneratorAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstForeachGenerator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstForeachGenerator__Group__1__Impl
	rule__AstForeachGenerator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstForeachGenerator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstForeachGeneratorAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getAstForeachGeneratorAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstForeachGenerator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstForeachGenerator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstForeachGenerator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstForeachGeneratorAccess().getExpressionAssignment_2()); }
(rule__AstForeachGenerator__ExpressionAssignment_2)
{ after(grammarAccess.getAstForeachGeneratorAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstStatementBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group__0__Impl
	rule__AstStatementBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getAstStatementBlockAction_0()); }
(

)
{ after(grammarAccess.getAstStatementBlockAccess().getAstStatementBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group__1__Impl
	rule__AstStatementBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getBeginKeyword_1()); }

	'begin' 

{ after(grammarAccess.getAstStatementBlockAccess().getBeginKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group__2__Impl
	rule__AstStatementBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getGroup_2()); }
(rule__AstStatementBlock__Group_2__0)?
{ after(grammarAccess.getAstStatementBlockAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group__3__Impl
	rule__AstStatementBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getStatementsAssignment_3()); }
(rule__AstStatementBlock__StatementsAssignment_3)*
{ after(grammarAccess.getAstStatementBlockAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getAstStatementBlockAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AstStatementBlock__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group_2__0__Impl
	rule__AstStatementBlock__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getVarKeyword_2_0()); }

	'var' 

{ after(grammarAccess.getAstStatementBlockAccess().getVarKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group_2__1__Impl
	rule__AstStatementBlock__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getVariablesAssignment_2_1()); }
(rule__AstStatementBlock__VariablesAssignment_2_1)
{ after(grammarAccess.getAstStatementBlockAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group_2__2__Impl
	rule__AstStatementBlock__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getGroup_2_2()); }
(rule__AstStatementBlock__Group_2_2__0)*
{ after(grammarAccess.getAstStatementBlockAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getDoKeyword_2_3()); }

	'do' 

{ after(grammarAccess.getAstStatementBlockAccess().getDoKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstStatementBlock__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group_2_2__0__Impl
	rule__AstStatementBlock__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getAstStatementBlockAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementBlock__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementBlock__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getVariablesAssignment_2_2_1()); }
(rule__AstStatementBlock__VariablesAssignment_2_2_1)
{ after(grammarAccess.getAstStatementBlockAccess().getVariablesAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstStatementIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group__0__Impl
	rule__AstStatementIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getAstStatementIfAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group__1__Impl
	rule__AstStatementIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getConditionAssignment_1()); }
(rule__AstStatementIf__ConditionAssignment_1)
{ after(grammarAccess.getAstStatementIfAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group__2__Impl
	rule__AstStatementIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getAstStatementIfAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group__3__Impl
	rule__AstStatementIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getThenAssignment_3()); }
(rule__AstStatementIf__ThenAssignment_3)*
{ after(grammarAccess.getAstStatementIfAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementIf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group__4__Impl
	rule__AstStatementIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getGroup_4()); }
(rule__AstStatementIf__Group_4__0)?
{ after(grammarAccess.getAstStatementIfAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementIf__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getAstStatementIfAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AstStatementIf__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group_4__0__Impl
	rule__AstStatementIf__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getElseKeyword_4_0()); }

	'else' 

{ after(grammarAccess.getAstStatementIfAccess().getElseKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementIf__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementIf__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getElseAssignment_4_1()); }
(rule__AstStatementIf__ElseAssignment_4_1)*
{ after(grammarAccess.getAstStatementIfAccess().getElseAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstStatementWhile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementWhile__Group__0__Impl
	rule__AstStatementWhile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementWhile__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementWhileAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getAstStatementWhileAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementWhile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementWhile__Group__1__Impl
	rule__AstStatementWhile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementWhile__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementWhileAccess().getConditionAssignment_1()); }
(rule__AstStatementWhile__ConditionAssignment_1)
{ after(grammarAccess.getAstStatementWhileAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementWhile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementWhile__Group__2__Impl
	rule__AstStatementWhile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementWhile__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementWhileAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getAstStatementWhileAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementWhile__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementWhile__Group__3__Impl
	rule__AstStatementWhile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementWhile__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementWhileAccess().getStatementsAssignment_3()); }
(rule__AstStatementWhile__StatementsAssignment_3)*
{ after(grammarAccess.getAstStatementWhileAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstStatementWhile__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstStatementWhile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementWhile__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementWhileAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getAstStatementWhileAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AstExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpression__Group__0__Impl
	rule__AstExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getAstExpressionAndParserRuleCall_0()); }
	ruleAstExpressionAnd
{ after(grammarAccess.getAstExpressionAccess().getAstExpressionAndParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getGroup_1()); }
(rule__AstExpression__Group_1__0)*
{ after(grammarAccess.getAstExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpression__Group_1__0__Impl
	rule__AstExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpression__Group_1__1__Impl
	rule__AstExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AstExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getRightAssignment_1_2()); }
(rule__AstExpression__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionAnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAnd__Group__0__Impl
	rule__AstExpressionAnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getAstExpressionBitorParserRuleCall_0()); }
	ruleAstExpressionBitor
{ after(grammarAccess.getAstExpressionAndAccess().getAstExpressionBitorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionAnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getGroup_1()); }
(rule__AstExpressionAnd__Group_1__0)*
{ after(grammarAccess.getAstExpressionAndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionAnd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAnd__Group_1__0__Impl
	rule__AstExpressionAnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionAndAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionAnd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAnd__Group_1__1__Impl
	rule__AstExpressionAnd__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionAnd__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionAndAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionAnd__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAnd__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getRightAssignment_1_2()); }
(rule__AstExpressionAnd__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionAndAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionBitor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitor__Group__0__Impl
	rule__AstExpressionBitor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getAstExpressionBitxorParserRuleCall_0()); }
	ruleAstExpressionBitxor
{ after(grammarAccess.getAstExpressionBitorAccess().getAstExpressionBitxorParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getGroup_1()); }
(rule__AstExpressionBitor__Group_1__0)*
{ after(grammarAccess.getAstExpressionBitorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionBitor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitor__Group_1__0__Impl
	rule__AstExpressionBitor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionBitorAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitor__Group_1__1__Impl
	rule__AstExpressionBitor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionBitor__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionBitorAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitor__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitor__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getRightAssignment_1_2()); }
(rule__AstExpressionBitor__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionBitorAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionBitxor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitxor__Group__0__Impl
	rule__AstExpressionBitxor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitxor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getAstExpressionBitandParserRuleCall_0()); }
	ruleAstExpressionBitand
{ after(grammarAccess.getAstExpressionBitxorAccess().getAstExpressionBitandParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitxor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitxor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitxor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getGroup_1()); }
(rule__AstExpressionBitxor__Group_1__0)*
{ after(grammarAccess.getAstExpressionBitxorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionBitxor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitxor__Group_1__0__Impl
	rule__AstExpressionBitxor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitxor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionBitxorAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitxor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitxor__Group_1__1__Impl
	rule__AstExpressionBitxor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitxor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionBitxor__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionBitxorAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitxor__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitxor__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitxor__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getRightAssignment_1_2()); }
(rule__AstExpressionBitxor__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionBitxorAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionBitand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitand__Group__0__Impl
	rule__AstExpressionBitand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getAstExpressionEqParserRuleCall_0()); }
	ruleAstExpressionEq
{ after(grammarAccess.getAstExpressionBitandAccess().getAstExpressionEqParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitand__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getGroup_1()); }
(rule__AstExpressionBitand__Group_1__0)*
{ after(grammarAccess.getAstExpressionBitandAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionBitand__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitand__Group_1__0__Impl
	rule__AstExpressionBitand__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitand__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionBitandAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitand__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitand__Group_1__1__Impl
	rule__AstExpressionBitand__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitand__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionBitand__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionBitandAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionBitand__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionBitand__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitand__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getRightAssignment_1_2()); }
(rule__AstExpressionBitand__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionBitandAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionEq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionEq__Group__0__Impl
	rule__AstExpressionEq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getAstExpressionRelationalParserRuleCall_0()); }
	ruleAstExpressionRelational
{ after(grammarAccess.getAstExpressionEqAccess().getAstExpressionRelationalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionEq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionEq__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getGroup_1()); }
(rule__AstExpressionEq__Group_1__0)*
{ after(grammarAccess.getAstExpressionEqAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionEq__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionEq__Group_1__0__Impl
	rule__AstExpressionEq__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionEqAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionEq__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionEq__Group_1__1__Impl
	rule__AstExpressionEq__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionEq__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionEqAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionEq__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionEq__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getRightAssignment_1_2()); }
(rule__AstExpressionEq__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionEqAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionRelational__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionRelational__Group__0__Impl
	rule__AstExpressionRelational__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getAstExpressionShiftParserRuleCall_0()); }
	ruleAstExpressionShift
{ after(grammarAccess.getAstExpressionRelationalAccess().getAstExpressionShiftParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionRelational__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionRelational__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getGroup_1()); }
(rule__AstExpressionRelational__Group_1__0)*
{ after(grammarAccess.getAstExpressionRelationalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionRelational__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionRelational__Group_1__0__Impl
	rule__AstExpressionRelational__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionRelationalAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionRelational__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionRelational__Group_1__1__Impl
	rule__AstExpressionRelational__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionRelational__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionRelationalAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionRelational__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionRelational__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getRightAssignment_1_2()); }
(rule__AstExpressionRelational__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionRelationalAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionShift__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionShift__Group__0__Impl
	rule__AstExpressionShift__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getAstExpressionAdditiveParserRuleCall_0()); }
	ruleAstExpressionAdditive
{ after(grammarAccess.getAstExpressionShiftAccess().getAstExpressionAdditiveParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionShift__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionShift__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getGroup_1()); }
(rule__AstExpressionShift__Group_1__0)*
{ after(grammarAccess.getAstExpressionShiftAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionShift__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionShift__Group_1__0__Impl
	rule__AstExpressionShift__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionShiftAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionShift__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionShift__Group_1__1__Impl
	rule__AstExpressionShift__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionShift__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionShiftAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionShift__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionShift__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getRightAssignment_1_2()); }
(rule__AstExpressionShift__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionShiftAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionAdditive__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAdditive__Group__0__Impl
	rule__AstExpressionAdditive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getAstExpressionMultiplicativeParserRuleCall_0()); }
	ruleAstExpressionMultiplicative
{ after(grammarAccess.getAstExpressionAdditiveAccess().getAstExpressionMultiplicativeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionAdditive__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAdditive__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getGroup_1()); }
(rule__AstExpressionAdditive__Group_1__0)*
{ after(grammarAccess.getAstExpressionAdditiveAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionAdditive__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAdditive__Group_1__0__Impl
	rule__AstExpressionAdditive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionAdditiveAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionAdditive__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAdditive__Group_1__1__Impl
	rule__AstExpressionAdditive__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionAdditive__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionAdditiveAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionAdditive__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionAdditive__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getRightAssignment_1_2()); }
(rule__AstExpressionAdditive__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionAdditiveAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionMultiplicative__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionMultiplicative__Group__0__Impl
	rule__AstExpressionMultiplicative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getAstExpressionExpParserRuleCall_0()); }
	ruleAstExpressionExp
{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getAstExpressionExpParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionMultiplicative__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionMultiplicative__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getGroup_1()); }
(rule__AstExpressionMultiplicative__Group_1__0)*
{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionMultiplicative__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionMultiplicative__Group_1__0__Impl
	rule__AstExpressionMultiplicative__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionMultiplicative__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionMultiplicative__Group_1__1__Impl
	rule__AstExpressionMultiplicative__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionMultiplicative__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionMultiplicative__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionMultiplicative__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getRightAssignment_1_2()); }
(rule__AstExpressionMultiplicative__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionExp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionExp__Group__0__Impl
	rule__AstExpressionExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionExp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionExpAccess().getAstExpressionUnaryParserRuleCall_0()); }
	ruleAstExpressionUnary
{ after(grammarAccess.getAstExpressionExpAccess().getAstExpressionUnaryParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionExp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionExp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionExpAccess().getGroup_1()); }
(rule__AstExpressionExp__Group_1__0)*
{ after(grammarAccess.getAstExpressionExpAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionExp__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionExp__Group_1__0__Impl
	rule__AstExpressionExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionExp__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionExpAccess().getAstExpressionBinaryLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAstExpressionExpAccess().getAstExpressionBinaryLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionExp__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionExp__Group_1__1__Impl
	rule__AstExpressionExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionExp__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionExpAccess().getOperatorAssignment_1_1()); }
(rule__AstExpressionExp__OperatorAssignment_1_1)
{ after(grammarAccess.getAstExpressionExpAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionExp__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionExp__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionExpAccess().getRightAssignment_1_2()); }
(rule__AstExpressionExp__RightAssignment_1_2)
{ after(grammarAccess.getAstExpressionExpAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionUnary__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionUnary__Group_0__0__Impl
	rule__AstExpressionUnary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionUnary__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getAstExpressionUnaryAction_0_0()); }
(

)
{ after(grammarAccess.getAstExpressionUnaryAccess().getAstExpressionUnaryAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionUnary__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionUnary__Group_0__1__Impl
	rule__AstExpressionUnary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionUnary__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorAssignment_0_1()); }
(rule__AstExpressionUnary__UnaryOperatorAssignment_0_1)
{ after(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionUnary__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionUnary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionUnary__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getExpressionAssignment_0_2()); }
(rule__AstExpressionUnary__ExpressionAssignment_0_2)
{ after(grammarAccess.getAstExpressionUnaryAccess().getExpressionAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionPostfix__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionPostfix__Group_5__0__Impl
	rule__AstExpressionPostfix__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionPostfix__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionPostfixAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getAstExpressionPostfixAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionPostfix__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionPostfix__Group_5__1__Impl
	rule__AstExpressionPostfix__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionPostfix__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionParserRuleCall_5_1()); }
	ruleAstExpression
{ after(grammarAccess.getAstExpressionPostfixAccess().getAstExpressionParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionPostfix__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionPostfix__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionPostfix__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionPostfixAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getAstExpressionPostfixAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group__0__Impl
	rule__AstExpressionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getFunctionAssignment_0()); }
(rule__AstExpressionCall__FunctionAssignment_0)
{ after(grammarAccess.getAstExpressionCallAccess().getFunctionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group__1__Impl
	rule__AstExpressionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAstExpressionCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group__2__Impl
	rule__AstExpressionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getGroup_2()); }
(rule__AstExpressionCall__Group_2__0)?
{ after(grammarAccess.getAstExpressionCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAstExpressionCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstExpressionCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group_2__0__Impl
	rule__AstExpressionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getParametersAssignment_2_0()); }
(rule__AstExpressionCall__ParametersAssignment_2_0)
{ after(grammarAccess.getAstExpressionCallAccess().getParametersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getGroup_2_1()); }
(rule__AstExpressionCall__Group_2_1__0)*
{ after(grammarAccess.getAstExpressionCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group_2_1__0__Impl
	rule__AstExpressionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getAstExpressionCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getParametersAssignment_2_1_1()); }
(rule__AstExpressionCall__ParametersAssignment_2_1_1)
{ after(grammarAccess.getAstExpressionCallAccess().getParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionIf__Group__0__Impl
	rule__AstExpressionIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getAstExpressionIfAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionIf__Group__1__Impl
	rule__AstExpressionIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getConditionAssignment_1()); }
(rule__AstExpressionIf__ConditionAssignment_1)
{ after(grammarAccess.getAstExpressionIfAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionIf__Group__2__Impl
	rule__AstExpressionIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getAstExpressionIfAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionIf__Group__3__Impl
	rule__AstExpressionIf__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getThenAssignment_3()); }
(rule__AstExpressionIf__ThenAssignment_3)
{ after(grammarAccess.getAstExpressionIfAccess().getThenAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionIf__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionIf__Group__4__Impl
	rule__AstExpressionIf__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getElseKeyword_4()); }

	'else' 

{ after(grammarAccess.getAstExpressionIfAccess().getElseKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionIf__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionIf__Group__5__Impl
	rule__AstExpressionIf__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getElseAssignment_5()); }
(rule__AstExpressionIf__ElseAssignment_5)
{ after(grammarAccess.getAstExpressionIfAccess().getElseAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionIf__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionIf__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getAstExpressionIfAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AstExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group__0__Impl
	rule__AstExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getAstExpressionListAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group__1__Impl
	rule__AstExpressionList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getExpressionsAssignment_1()); }
(rule__AstExpressionList__ExpressionsAssignment_1)
{ after(grammarAccess.getAstExpressionListAccess().getExpressionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group__2__Impl
	rule__AstExpressionList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getGroup_2()); }
(rule__AstExpressionList__Group_2__0)*
{ after(grammarAccess.getAstExpressionListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group__3__Impl
	rule__AstExpressionList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getGroup_3()); }
(rule__AstExpressionList__Group_3__0)?
{ after(grammarAccess.getAstExpressionListAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getAstExpressionListAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AstExpressionList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group_2__0__Impl
	rule__AstExpressionList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAstExpressionListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getExpressionsAssignment_2_1()); }
(rule__AstExpressionList__ExpressionsAssignment_2_1)
{ after(grammarAccess.getAstExpressionListAccess().getExpressionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstExpressionList__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group_3__0__Impl
	rule__AstExpressionList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getColonKeyword_3_0()); }

	':' 

{ after(grammarAccess.getAstExpressionListAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group_3__1__Impl
	rule__AstExpressionList__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getGeneratorsAssignment_3_1()); }
(rule__AstExpressionList__GeneratorsAssignment_3_1)
{ after(grammarAccess.getAstExpressionListAccess().getGeneratorsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getGroup_3_2()); }
(rule__AstExpressionList__Group_3_2__0)*
{ after(grammarAccess.getAstExpressionListAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionList__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group_3_2__0__Impl
	rule__AstExpressionList__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getAstExpressionListAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionList__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionList__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getGeneratorsAssignment_3_2_1()); }
(rule__AstExpressionList__GeneratorsAssignment_3_2_1)
{ after(grammarAccess.getAstExpressionListAccess().getGeneratorsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstGenerator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstGenerator__Group__0__Impl
	rule__AstGenerator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstGenerator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstGeneratorAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getAstGeneratorAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstGenerator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstGenerator__Group__1__Impl
	rule__AstGenerator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstGenerator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstGeneratorAccess().getVariableAssignment_1()); }
(rule__AstGenerator__VariableAssignment_1)
{ after(grammarAccess.getAstGeneratorAccess().getVariableAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstGenerator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstGenerator__Group__2__Impl
	rule__AstGenerator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstGenerator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstGeneratorAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getAstGeneratorAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstGenerator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstGenerator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstGenerator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstGeneratorAccess().getExpressionAssignment_3()); }
(rule__AstGenerator__ExpressionAssignment_3)
{ after(grammarAccess.getAstGeneratorAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstExpressionVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionVariable__Group__0__Impl
	rule__AstExpressionVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getValueAssignment_0()); }
(rule__AstExpressionVariable__ValueAssignment_0)
{ after(grammarAccess.getAstExpressionVariableAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionVariable__Group__1__Impl
	rule__AstExpressionVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getGroup_1()); }
(rule__AstExpressionVariable__Group_1__0)*
{ after(grammarAccess.getAstExpressionVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getMemberAssignment_2()); }
(rule__AstExpressionVariable__MemberAssignment_2)*
{ after(grammarAccess.getAstExpressionVariableAccess().getMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstExpressionVariable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionVariable__Group_1__0__Impl
	rule__AstExpressionVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getAstExpressionVariableAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionVariable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionVariable__Group_1__1__Impl
	rule__AstExpressionVariable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getIndexesAssignment_1_1()); }
(rule__AstExpressionVariable__IndexesAssignment_1_1)
{ after(grammarAccess.getAstExpressionVariableAccess().getIndexesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstExpressionVariable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstExpressionVariable__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getAstExpressionVariableAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__REAL__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL__Group_0__0__Impl
	rule__REAL__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getINTTerminalRuleCall_0_0()); }
	RULE_INT
{ after(grammarAccess.getREALAccess().getINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL__Group_0__1__Impl
	rule__REAL__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getREALAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getAlternatives_0_2()); }
(rule__REAL__Alternatives_0_2)
{ after(grammarAccess.getREALAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__REAL__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL__Group_1__0__Impl
	rule__REAL__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getREALAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__REAL__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__REAL__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__REAL__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getREALAccess().getAlternatives_1_1()); }
(rule__REAL__Alternatives_1_1)
{ after(grammarAccess.getREALAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0__0__Impl
	rule__AstType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getAstTypeAction_0_0()); }
(

)
{ after(grammarAccess.getAstTypeAccess().getAstTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getAlternatives_0_1()); }
(rule__AstType__Alternatives_0_1)
{ after(grammarAccess.getAstTypeAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstType__Group_0_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_0__0__Impl
	rule__AstType__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getBuiltinAssignment_0_1_0_0()); }
(rule__AstType__BuiltinAssignment_0_1_0_0)
{ after(grammarAccess.getAstTypeAccess().getBuiltinAssignment_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_0__1__Impl
	rule__AstType__Group_0_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getTypeParamsAssignment_0_1_0_1()); }
(rule__AstType__TypeParamsAssignment_0_1_0_1)?
{ after(grammarAccess.getAstTypeAccess().getTypeParamsAssignment_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_0_2()); }
(rule__AstType__Group_0_1_0_2__0)*
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstType__Group_0_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_0_2__0__Impl
	rule__AstType__Group_0_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_0_1_0_2_0()); }

	'[' 

{ after(grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_0_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_0_2__1__Impl
	rule__AstType__Group_0_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDimensionsAssignment_0_1_0_2_1()); }
(rule__AstType__DimensionsAssignment_0_1_0_2_1)
{ after(grammarAccess.getAstTypeAccess().getDimensionsAssignment_0_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_0_1_0_2_2()); }

	']' 

{ after(grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_0_1_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstType__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_1__0__Impl
	rule__AstType__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getNameAssignment_0_1_1_0()); }
(rule__AstType__NameAssignment_0_1_1_0)
{ after(grammarAccess.getAstTypeAccess().getNameAssignment_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_1__1__Impl
	rule__AstType__Group_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getTypeParamsAssignment_0_1_1_1()); }
(rule__AstType__TypeParamsAssignment_0_1_1_1)?
{ after(grammarAccess.getAstTypeAccess().getTypeParamsAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_1_2()); }
(rule__AstType__Group_0_1_1_2__0)*
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstType__Group_0_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_1_2__0__Impl
	rule__AstType__Group_0_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_0_1_1_2_0()); }

	'[' 

{ after(grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_0_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_1_2__1__Impl
	rule__AstType__Group_0_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDimensionsAssignment_0_1_1_2_1()); }
(rule__AstType__DimensionsAssignment_0_1_1_2_1)
{ after(grammarAccess.getAstTypeAccess().getDimensionsAssignment_0_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_0_1_1_2_2()); }

	']' 

{ after(grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_0_1_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstType__Group_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2__0__Impl
	rule__AstType__Group_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_0_1_2_0()); }

	'[' 

{ after(grammarAccess.getAstTypeAccess().getLeftSquareBracketKeyword_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2__1__Impl
	rule__AstType__Group_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_2_1()); }
(rule__AstType__Group_0_1_2_1__0)?
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2__2__Impl
	rule__AstType__Group_0_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_0_1_2_2()); }

	'-->' 

{ after(grammarAccess.getAstTypeAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_0_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2__3__Impl
	rule__AstType__Group_0_1_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_2_3()); }
(rule__AstType__Group_0_1_2_3__0)?
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_0_1_2_4()); }

	']' 

{ after(grammarAccess.getAstTypeAccess().getRightSquareBracketKeyword_0_1_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AstType__Group_0_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_1__0__Impl
	rule__AstType__Group_0_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDomainAssignment_0_1_2_1_0()); }
(rule__AstType__DomainAssignment_0_1_2_1_0)
{ after(grammarAccess.getAstTypeAccess().getDomainAssignment_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_2_1_1()); }
(rule__AstType__Group_0_1_2_1_1__0)*
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstType__Group_0_1_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_1_1__0__Impl
	rule__AstType__Group_0_1_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getCommaKeyword_0_1_2_1_1_0()); }

	',' 

{ after(grammarAccess.getAstTypeAccess().getCommaKeyword_0_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDomainAssignment_0_1_2_1_1_1()); }
(rule__AstType__DomainAssignment_0_1_2_1_1_1)
{ after(grammarAccess.getAstTypeAccess().getDomainAssignment_0_1_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstType__Group_0_1_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_3__0__Impl
	rule__AstType__Group_0_1_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getCodomainAssignment_0_1_2_3_0()); }
(rule__AstType__CodomainAssignment_0_1_2_3_0)
{ after(grammarAccess.getAstTypeAccess().getCodomainAssignment_0_1_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getGroup_0_1_2_3_1()); }
(rule__AstType__Group_0_1_2_3_1__0)*
{ after(grammarAccess.getAstTypeAccess().getGroup_0_1_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstType__Group_0_1_2_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_3_1__0__Impl
	rule__AstType__Group_0_1_2_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getCommaKeyword_0_1_2_3_1_0()); }

	',' 

{ after(grammarAccess.getAstTypeAccess().getCommaKeyword_0_1_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstType__Group_0_1_2_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstType__Group_0_1_2_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__Group_0_1_2_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDomainAssignment_0_1_2_3_1_1()); }
(rule__AstType__DomainAssignment_0_1_2_3_1_1)
{ after(grammarAccess.getAstTypeAccess().getDomainAssignment_0_1_2_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTypeTuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group__0__Impl
	rule__AstTypeTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getAstTypeAction_0()); }
(

)
{ after(grammarAccess.getAstTypeTupleAccess().getAstTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeTuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group__1__Impl
	rule__AstTypeTuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAstTypeTupleAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeTuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group__2__Impl
	rule__AstTypeTuple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getGroup_2()); }
(rule__AstTypeTuple__Group_2__0)?
{ after(grammarAccess.getAstTypeTupleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeTuple__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAstTypeTupleAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstTypeTuple__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group_2__0__Impl
	rule__AstTypeTuple__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getMembersAssignment_2_0()); }
(rule__AstTypeTuple__MembersAssignment_2_0)
{ after(grammarAccess.getAstTypeTupleAccess().getMembersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeTuple__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getGroup_2_1()); }
(rule__AstTypeTuple__Group_2_1__0)*
{ after(grammarAccess.getAstTypeTupleAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTypeTuple__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group_2_1__0__Impl
	rule__AstTypeTuple__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getAstTypeTupleAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeTuple__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeTuple__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getMembersAssignment_2_1_1()); }
(rule__AstTypeTuple__MembersAssignment_2_1_1)
{ after(grammarAccess.getAstTypeTupleAccess().getMembersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTypeParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParameterList__Group__0__Impl
	rule__AstTypeParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getAstTypeParameterListAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParameterList__Group__1__Impl
	rule__AstTypeParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getParamsAssignment_1()); }
(rule__AstTypeParameterList__ParamsAssignment_1)
{ after(grammarAccess.getAstTypeParameterListAccess().getParamsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParameterList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParameterList__Group__2__Impl
	rule__AstTypeParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getGroup_2()); }
(rule__AstTypeParameterList__Group_2__0)*
{ after(grammarAccess.getAstTypeParameterListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParameterList__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParameterList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAstTypeParameterListAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstTypeParameterList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParameterList__Group_2__0__Impl
	rule__AstTypeParameterList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getAstTypeParameterListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParameterList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParameterList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getParamsAssignment_2_1()); }
(rule__AstTypeParameterList__ParamsAssignment_2_1)
{ after(grammarAccess.getAstTypeParameterListAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstTypeParam__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParam__Group_0__0__Impl
	rule__AstTypeParam__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getNameAssignment_0_0()); }
(rule__AstTypeParam__NameAssignment_0_0)
{ after(grammarAccess.getAstTypeParamAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParam__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParam__Group_0__1__Impl
	rule__AstTypeParam__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getEqualsSignKeyword_0_1()); }

	'=' 

{ after(grammarAccess.getAstTypeParamAccess().getEqualsSignKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParam__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParam__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getValueAssignment_0_2()); }
(rule__AstTypeParam__ValueAssignment_0_2)
{ after(grammarAccess.getAstTypeParamAccess().getValueAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstTypeParam__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParam__Group_1__0__Impl
	rule__AstTypeParam__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getNameAssignment_1_0()); }
(rule__AstTypeParam__NameAssignment_1_0)
{ after(grammarAccess.getAstTypeParamAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParam__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParam__Group_1__1__Impl
	rule__AstTypeParam__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getAstTypeParamAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstTypeParam__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstTypeParam__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getTypeAssignment_1_2()); }
(rule__AstTypeParam__TypeAssignment_1_2)
{ after(grammarAccess.getAstTypeParamAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstVariableDeclaration__Group__0__Impl
	rule__AstVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getAnnotationsAssignment_0()); }
(rule__AstVariableDeclaration__AnnotationsAssignment_0)*
{ after(grammarAccess.getAstVariableDeclarationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstVariableDeclaration__Group__1__Impl
	rule__AstVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getTypeAssignment_1()); }
(rule__AstVariableDeclaration__TypeAssignment_1)
{ after(grammarAccess.getAstVariableDeclarationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstVariableDeclaration__Group__2__Impl
	rule__AstVariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getNameAssignment_2()); }
(rule__AstVariableDeclaration__NameAssignment_2)
{ after(grammarAccess.getAstVariableDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstVariableDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstVariableDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getGroup_3()); }
(rule__AstVariableDeclaration__Group_3__0)*
{ after(grammarAccess.getAstVariableDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstVariableDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstVariableDeclaration__Group_3__0__Impl
	rule__AstVariableDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getAstVariableDeclarationAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstVariableDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstVariableDeclaration__Group_3__1__Impl
	rule__AstVariableDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getDimensionsAssignment_3_1()); }
(rule__AstVariableDeclaration__DimensionsAssignment_3_1)
{ after(grammarAccess.getAstVariableDeclarationAccess().getDimensionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstVariableDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstVariableDeclaration__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getRightSquareBracketKeyword_3_2()); }

	']' 

{ after(grammarAccess.getAstVariableDeclarationAccess().getRightSquareBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstValuedVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstValuedVariableDeclaration__Group__0__Impl
	rule__AstValuedVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstValuedVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getAstVariableDeclarationParserRuleCall_0()); }
	ruleAstVariableDeclaration
{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getAstVariableDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstValuedVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstValuedVariableDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstValuedVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getGroup_1()); }
(rule__AstValuedVariableDeclaration__Group_1__0)?
{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstValuedVariableDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstValuedVariableDeclaration__Group_1__0__Impl
	rule__AstValuedVariableDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstValuedVariableDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getAlternatives_1_0()); }
(rule__AstValuedVariableDeclaration__Alternatives_1_0)
{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstValuedVariableDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstValuedVariableDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstValuedVariableDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getValueAssignment_1_1()); }
(rule__AstValuedVariableDeclaration__ValueAssignment_1_1)
{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstMemberAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstMemberAccess__Group__0__Impl
	rule__AstMemberAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getAstMemberAccessAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstMemberAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstMemberAccess__Group__1__Impl
	rule__AstMemberAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getNameAssignment_1()); }
(rule__AstMemberAccess__NameAssignment_1)
{ after(grammarAccess.getAstMemberAccessAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstMemberAccess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstMemberAccess__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getGroup_2()); }
(rule__AstMemberAccess__Group_2__0)*
{ after(grammarAccess.getAstMemberAccessAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstMemberAccess__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstMemberAccess__Group_2__0__Impl
	rule__AstMemberAccess__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getAstMemberAccessAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstMemberAccess__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstMemberAccess__Group_2__1__Impl
	rule__AstMemberAccess__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getMemberIndexAssignment_2_1()); }
(rule__AstMemberAccess__MemberIndexAssignment_2_1)
{ after(grammarAccess.getAstMemberAccessAccess().getMemberIndexAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstMemberAccess__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstMemberAccess__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getAstMemberAccessAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group__0__Impl
	rule__AstAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAstAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group__1__Impl
	rule__AstAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getNameAssignment_1()); }
(rule__AstAnnotation__NameAssignment_1)
{ after(grammarAccess.getAstAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getGroup_2()); }
(rule__AstAnnotation__Group_2__0)?
{ after(grammarAccess.getAstAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AstAnnotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group_2__0__Impl
	rule__AstAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAstAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group_2__1__Impl
	rule__AstAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_1()); }
(rule__AstAnnotation__ArgumentsAssignment_2_1)
{ after(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group_2__2__Impl
	rule__AstAnnotation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getGroup_2_2()); }
(rule__AstAnnotation__Group_2_2__0)*
{ after(grammarAccess.getAstAnnotationAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotation__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getAstAnnotationAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AstAnnotation__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group_2_2__0__Impl
	rule__AstAnnotation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getAstAnnotationAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotation__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotation__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_2_1()); }
(rule__AstAnnotation__ArgumentsAssignment_2_2_1)
{ after(grammarAccess.getAstAnnotationAccess().getArgumentsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AstAnnotationArgument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotationArgument__Group__0__Impl
	rule__AstAnnotationArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotationArgument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationArgumentAccess().getNameAssignment_0()); }
(rule__AstAnnotationArgument__NameAssignment_0)
{ after(grammarAccess.getAstAnnotationArgumentAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotationArgument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotationArgument__Group__1__Impl
	rule__AstAnnotationArgument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotationArgument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationArgumentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAstAnnotationArgumentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAnnotationArgument__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AstAnnotationArgument__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotationArgument__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationArgumentAccess().getValueAssignment_2()); }
(rule__AstAnnotationArgument__ValueAssignment_2)
{ after(grammarAccess.getAstAnnotationArgumentAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__AstPackage__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getAstPackageAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__EntitiesAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getEntitiesAstEntityParserRuleCall_4_0_0()); }
	ruleAstEntity{ after(grammarAccess.getAstPackageAccess().getEntitiesAstEntityParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__ImportsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getImportsImportParserRuleCall_4_1_0()); }
	ruleImport{ after(grammarAccess.getAstPackageAccess().getImportsImportParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPackage__UnitsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPackageAccess().getUnitsAstUnitParserRuleCall_4_2_0()); }
	ruleAstUnit{ after(grammarAccess.getAstPackageAccess().getUnitsAstUnitParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getAstUnitAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__FunctionsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getFunctionsAstFunctionParserRuleCall_4_0_0()); }
	ruleAstFunction{ after(grammarAccess.getAstUnitAccess().getFunctionsAstFunctionParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__VariablesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getVariablesAstConstantVariableParserRuleCall_4_1_0()); }
	ruleAstConstantVariable{ after(grammarAccess.getAstUnitAccess().getVariablesAstConstantVariableParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstUnit__ExternalsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstUnitAccess().getExternalsAlternatives_4_2_0()); }
(rule__AstUnit__ExternalsAlternatives_4_2_0)
{ after(grammarAccess.getAstUnitAccess().getExternalsAlternatives_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstNamespaceAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getAstNamespaceAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__FunctionsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getFunctionsAstFunctionParserRuleCall_4_0_0()); }
	ruleAstFunction{ after(grammarAccess.getAstNamespaceAccess().getFunctionsAstFunctionParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__VariablesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getVariablesAstConstantVariableParserRuleCall_4_1_0()); }
	ruleAstConstantVariable{ after(grammarAccess.getAstNamespaceAccess().getVariablesAstConstantVariableParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__ExternalsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getExternalsAlternatives_4_2_0()); }
(rule__AstNamespace__ExternalsAlternatives_4_2_0)
{ after(grammarAccess.getAstNamespaceAccess().getExternalsAlternatives_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__TypedefsAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getTypedefsAstTypeDefinitionParserRuleCall_4_3_0()); }
	ruleAstTypeDefinition{ after(grammarAccess.getAstNamespaceAccess().getTypedefsAstTypeDefinitionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__ImportsAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getImportsImportParserRuleCall_4_4_0()); }
	ruleImport{ after(grammarAccess.getAstNamespaceAccess().getImportsImportParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__EntitiesAssignment_4_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getEntitiesAstEntityParserRuleCall_4_5_0()); }
	ruleAstEntity{ after(grammarAccess.getAstNamespaceAccess().getEntitiesAstEntityParserRuleCall_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNamespace__NamespacesAssignment_4_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNamespaceAccess().getNamespacesAstNamespaceParserRuleCall_4_6_0()); }
	ruleAstNamespace{ after(grammarAccess.getAstNamespaceAccess().getNamespacesAstNamespaceParserRuleCall_4_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstEntity__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstEntityAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstEntityAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstEntity__ActorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstEntityAccess().getActorAstAbstractActorParserRuleCall_1_0()); }
	ruleAstAbstractActor{ after(grammarAccess.getAstEntityAccess().getActorAstAbstractActorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAstNetworkAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getParametersAstParameterParserRuleCall_4_0_0()); }
	ruleAstParameter{ after(grammarAccess.getAstNetworkAccess().getParametersAstParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getParametersAstParameterParserRuleCall_4_1_1_0()); }
	ruleAstParameter{ after(grammarAccess.getAstNetworkAccess().getParametersAstParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__InputsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getInputsAstPortParserRuleCall_6_0_0()); }
	ruleAstPort{ after(grammarAccess.getAstNetworkAccess().getInputsAstPortParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__InputsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getInputsAstPortParserRuleCall_6_1_1_0()); }
	ruleAstPort{ after(grammarAccess.getAstNetworkAccess().getInputsAstPortParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__OutputsAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getOutputsAstPortParserRuleCall_8_0_0()); }
	ruleAstPort{ after(grammarAccess.getAstNetworkAccess().getOutputsAstPortParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__OutputsAssignment_8_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getOutputsAstPortParserRuleCall_8_1_1_0()); }
	ruleAstPort{ after(grammarAccess.getAstNetworkAccess().getOutputsAstPortParserRuleCall_8_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__VariablesAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_10_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstNetworkAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__VariablesAssignment_10_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_10_3_0_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstNetworkAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_10_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__InstancesAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getInstancesAstActorDeclarationParserRuleCall_12_0()); }
	ruleAstActorDeclaration{ after(grammarAccess.getAstNetworkAccess().getInstancesAstActorDeclarationParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstNetwork__StructureAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstNetworkAccess().getStructureAstStructureParserRuleCall_13_0()); }
	ruleAstStructure{ after(grammarAccess.getAstNetworkAccess().getStructureAstStructureParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAstActorDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getTypeAstEntityCrossReference_2_0()); }
(
{ before(grammarAccess.getAstActorDeclarationAccess().getTypeAstEntityQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getAstActorDeclarationAccess().getTypeAstEntityQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAstActorDeclarationAccess().getTypeAstEntityCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getParametersAstAssignParameterParserRuleCall_4_0_0()); }
	ruleAstAssignParameter{ after(grammarAccess.getAstActorDeclarationAccess().getParametersAstAssignParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorDeclaration__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorDeclarationAccess().getParametersAstAssignParameterParserRuleCall_4_1_1_0()); }
	ruleAstAssignParameter{ after(grammarAccess.getAstActorDeclarationAccess().getParametersAstAssignParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAssignParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAssignParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAstAssignParameterAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAssignParameter__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAssignParameterAccess().getValueAstExpressionParserRuleCall_2_0()); }
	ruleAstExpression{ after(grammarAccess.getAstAssignParameterAccess().getValueAstExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStructure__ConnectionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStructureAccess().getConnectionsAstConnectionParserRuleCall_1_0()); }
	ruleAstConnection{ after(grammarAccess.getAstStructureAccess().getConnectionsAstConnectionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__FromAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getFromAstActorVariableReferenceParserRuleCall_0_0_0()); }
	ruleAstActorVariableReference{ after(grammarAccess.getAstConnectionAccess().getFromAstActorVariableReferenceParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__OutPortAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getOutPortIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAstConnectionAccess().getOutPortIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__ToAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getToAstActorVariableReferenceParserRuleCall_3_0_0()); }
	ruleAstActorVariableReference{ after(grammarAccess.getAstConnectionAccess().getToAstActorVariableReferenceParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__InPortAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getInPortIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getAstConnectionAccess().getInPortIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnection__AttributeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAccess().getAttributeAstConnectionAttributeParserRuleCall_5_1_0()); }
	ruleAstConnectionAttribute{ after(grammarAccess.getAstConnectionAccess().getAttributeAstConnectionAttributeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActorVariableReference__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorVariableReferenceAccess().getVariableAstActorVariableCrossReference_0()); }
(
{ before(grammarAccess.getAstActorVariableReferenceAccess().getVariableAstActorVariableIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getAstActorVariableReferenceAccess().getVariableAstActorVariableIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getAstActorVariableReferenceAccess().getVariableAstActorVariableCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnectionAttribute__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAstConnectionAttributeAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConnectionAttribute__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConnectionAttributeAccess().getValueAstExpressionParserRuleCall_2_0()); }
	ruleAstExpression{ after(grammarAccess.getAstConnectionAttributeAccess().getValueAstExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstantVariable__ConstantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstantVariableAccess().getConstantEqualsSignKeyword_1_0()); }
(
{ before(grammarAccess.getAstConstantVariableAccess().getConstantEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getAstConstantVariableAccess().getConstantEqualsSignKeyword_1_0()); }
)

{ after(grammarAccess.getAstConstantVariableAccess().getConstantEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstantVariable__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstantVariableAccess().getValueAstExpressionParserRuleCall_2_0()); }
	ruleAstExpression{ after(grammarAccess.getAstConstantVariableAccess().getValueAstExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAstTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__ParametersAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getParametersAstTypeDefinitionParameterParserRuleCall_2_1_0_0()); }
	ruleAstTypeDefinitionParameter{ after(grammarAccess.getAstTypeDefinitionAccess().getParametersAstTypeDefinitionParameterParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__ParametersAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getParametersAstTypeDefinitionParameterParserRuleCall_2_1_1_1_0()); }
	ruleAstTypeDefinitionParameter{ after(grammarAccess.getAstTypeDefinitionAccess().getParametersAstTypeDefinitionParameterParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__ConstructorAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getConstructorAstConstructorParserRuleCall_4_0_0_0()); }
	ruleAstConstructor{ after(grammarAccess.getAstTypeDefinitionAccess().getConstructorAstConstructorParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__ConstructorAssignment_4_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getConstructorAstConstructorParserRuleCall_4_0_1_1_0()); }
	ruleAstConstructor{ after(grammarAccess.getAstTypeDefinitionAccess().getConstructorAstConstructorParserRuleCall_4_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinition__TypeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionAccess().getTypeAstTypeParserRuleCall_4_1_0()); }
	ruleAstType{ after(grammarAccess.getAstTypeDefinitionAccess().getTypeAstTypeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinitionParameter__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionParameterAccess().getValueAstVariableDeclarationParserRuleCall_0_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstTypeDefinitionParameterAccess().getValueAstVariableDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinitionParameter__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionParameterAccess().getTypeAstTypeDefinitionTypeParameterParserRuleCall_1_0()); }
	ruleAstTypeDefinitionTypeParameter{ after(grammarAccess.getAstTypeDefinitionParameterAccess().getTypeAstTypeDefinitionTypeParameterParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeDefinitionTypeParameter__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeDefinitionTypeParameterAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getAstTypeDefinitionTypeParameterAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAstConstructorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__MembersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_0_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstConstructorAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstConstructor__MembersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstConstructorAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_1_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstConstructorAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAstActorAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getParametersAstParameterParserRuleCall_4_0_0()); }
	ruleAstParameter{ after(grammarAccess.getAstActorAccess().getParametersAstParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getParametersAstParameterParserRuleCall_4_1_1_0()); }
	ruleAstParameter{ after(grammarAccess.getAstActorAccess().getParametersAstParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__InputsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getInputsAstPortParserRuleCall_6_0_0()); }
	ruleAstPort{ after(grammarAccess.getAstActorAccess().getInputsAstPortParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__InputsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getInputsAstPortParserRuleCall_6_1_1_0()); }
	ruleAstPort{ after(grammarAccess.getAstActorAccess().getInputsAstPortParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__OutputsAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getOutputsAstPortParserRuleCall_8_0_0()); }
	ruleAstPort{ after(grammarAccess.getAstActorAccess().getOutputsAstPortParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__OutputsAssignment_8_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getOutputsAstPortParserRuleCall_8_1_1_0()); }
	ruleAstPort{ after(grammarAccess.getAstActorAccess().getOutputsAstPortParserRuleCall_8_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__FunctionsAssignment_10_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getFunctionsAstFunctionParserRuleCall_10_0_0()); }
	ruleAstFunction{ after(grammarAccess.getAstActorAccess().getFunctionsAstFunctionParserRuleCall_10_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__ProceduresAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getProceduresAstProcedureParserRuleCall_10_1_0()); }
	ruleAstProcedure{ after(grammarAccess.getAstActorAccess().getProceduresAstProcedureParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__ActionsAssignment_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getActionsAstActionParserRuleCall_10_2_0()); }
	ruleAstAction{ after(grammarAccess.getAstActorAccess().getActionsAstActionParserRuleCall_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__InitializesAssignment_10_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getInitializesAstInitializeParserRuleCall_10_3_0()); }
	ruleAstInitialize{ after(grammarAccess.getAstActorAccess().getInitializesAstInitializeParserRuleCall_10_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__StateVariablesAssignment_10_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getStateVariablesAstStateVariableParserRuleCall_10_4_0()); }
	ruleAstStateVariable{ after(grammarAccess.getAstActorAccess().getStateVariablesAstStateVariableParserRuleCall_10_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__SchedulesAssignment_10_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getSchedulesAstScheduleParserRuleCall_10_5_0()); }
	ruleAstSchedule{ after(grammarAccess.getAstActorAccess().getSchedulesAstScheduleParserRuleCall_10_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstActor__PrioritiesAssignment_10_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActorAccess().getPrioritiesAstPriorityParserRuleCall_10_6_0()); }
	ruleAstPriority{ after(grammarAccess.getAstActorAccess().getPrioritiesAstPriorityParserRuleCall_10_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPort__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPortAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstPortAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPort__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPortAccess().getTypeAstTypeParserRuleCall_1_0()); }
	ruleAstType{ after(grammarAccess.getAstPortAccess().getTypeAstTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPort__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPortAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAstPortAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstFunctionAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAstFunctionAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_4_0_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_4_1_1_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__TypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getTypeAstTypeParserRuleCall_7_0()); }
	ruleAstType{ after(grammarAccess.getAstFunctionAccess().getTypeAstTypeParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__VariablesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstFunctionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__VariablesAssignment_8_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_2_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstFunctionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstFunction__ExpressionAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstFunctionAccess().getExpressionAstExpressionParserRuleCall_10_0()); }
	ruleAstExpression{ after(grammarAccess.getAstFunctionAccess().getExpressionAstExpressionParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstExternalFunctionAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getAstExternalFunctionAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__ParametersAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_6_0_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstExternalFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__ParametersAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_6_1_1_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstExternalFunctionAccess().getParametersAstVariableDeclarationParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalFunction__TypeAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalFunctionAccess().getTypeAstTypeParserRuleCall_9_0()); }
	ruleAstType{ after(grammarAccess.getAstExternalFunctionAccess().getTypeAstTypeParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstProcedureAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAstProcedureAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__ParametersAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_4_0_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__ParametersAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_4_1_1_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__VariablesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_6_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstProcedureAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__VariablesAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_6_2_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstProcedureAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstProcedure__StatementsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstProcedureAccess().getStatementsAstStatementParserRuleCall_8_0()); }
	ruleAstStatement{ after(grammarAccess.getAstProcedureAccess().getStatementsAstStatementParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstExternalProcedureAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getAstExternalProcedureAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__ParametersAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_6_0_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstExternalProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalProcedure__ParametersAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_6_1_1_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstExternalProcedureAccess().getParametersAstVariableDeclarationParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstParameter__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstParameterAccess().getValueAstExpressionParserRuleCall_1_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstParameterAccess().getValueAstExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTag__IdentifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTagAccess().getIdentifiersIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAstTagAccess().getIdentifiersIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTag__IdentifiersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTagAccess().getIdentifiersIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getAstTagAccess().getIdentifiersIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getAstExternalActorAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getParametersAstParameterParserRuleCall_5_0_0()); }
	ruleAstParameter{ after(grammarAccess.getAstExternalActorAccess().getParametersAstParameterParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__ParametersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getParametersAstParameterParserRuleCall_5_1_1_0()); }
	ruleAstParameter{ after(grammarAccess.getAstExternalActorAccess().getParametersAstParameterParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__InputsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getInputsAstPortParserRuleCall_7_0_0()); }
	ruleAstPort{ after(grammarAccess.getAstExternalActorAccess().getInputsAstPortParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__InputsAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getInputsAstPortParserRuleCall_7_1_1_0()); }
	ruleAstPort{ after(grammarAccess.getAstExternalActorAccess().getInputsAstPortParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__OutputsAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getOutputsAstPortParserRuleCall_9_0_0()); }
	ruleAstPort{ after(grammarAccess.getAstExternalActorAccess().getOutputsAstPortParserRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExternalActor__OutputsAssignment_9_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExternalActorAccess().getOutputsAstPortParserRuleCall_9_1_1_0()); }
	ruleAstPort{ after(grammarAccess.getAstExternalActorAccess().getOutputsAstPortParserRuleCall_9_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInequality__TagsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInequalityAccess().getTagsAstTagParserRuleCall_0_0()); }
	ruleAstTag{ after(grammarAccess.getAstInequalityAccess().getTagsAstTagParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInequality__TagsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInequalityAccess().getTagsAstTagParserRuleCall_1_1_0()); }
	ruleAstTag{ after(grammarAccess.getAstInequalityAccess().getTagsAstTagParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstPriority__InequalitiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstPriorityAccess().getInequalitiesAstInequalityParserRuleCall_2_0()); }
	ruleAstInequality{ after(grammarAccess.getAstPriorityAccess().getInequalitiesAstInequalityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__InitialStateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getInitialStateAstStateCrossReference_2_0()); }
(
{ before(grammarAccess.getAstScheduleAccess().getInitialStateAstStateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAstScheduleAccess().getInitialStateAstStateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAstScheduleAccess().getInitialStateAstStateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstSchedule__TransitionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstScheduleAccess().getTransitionsAstTransitionParserRuleCall_4_0()); }
	ruleAstTransition{ after(grammarAccess.getAstScheduleAccess().getTransitionsAstTransitionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getSourceAstStateCrossReference_0_0()); }
(
{ before(grammarAccess.getAstTransitionAccess().getSourceAstStateIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAstTransitionAccess().getSourceAstStateIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAstTransitionAccess().getSourceAstStateCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__TagsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getTagsAstTagParserRuleCall_2_0()); }
	ruleAstTag{ after(grammarAccess.getAstTransitionAccess().getTagsAstTagParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__TagsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getTagsAstTagParserRuleCall_3_1_0()); }
	ruleAstTag{ after(grammarAccess.getAstTransitionAccess().getTagsAstTagParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTransition__TargetAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTransitionAccess().getTargetAstStateCrossReference_6_0()); }
(
{ before(grammarAccess.getAstTransitionAccess().getTargetAstStateIDTerminalRuleCall_6_0_1()); }
	RULE_ID{ after(grammarAccess.getAstTransitionAccess().getTargetAstStateIDTerminalRuleCall_6_0_1()); }
)
{ after(grammarAccess.getAstTransitionAccess().getTargetAstStateCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AstAction__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstActionAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__TagAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getTagAstTagParserRuleCall_2_0_0()); }
	ruleAstTag{ after(grammarAccess.getAstActionAccess().getTagAstTagParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__InputsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getInputsAstInputPatternParserRuleCall_4_0_0()); }
	ruleAstInputPattern{ after(grammarAccess.getAstActionAccess().getInputsAstInputPatternParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__InputsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getInputsAstInputPatternParserRuleCall_4_1_1_0()); }
	ruleAstInputPattern{ after(grammarAccess.getAstActionAccess().getInputsAstInputPatternParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__OutputsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getOutputsAstOutputPatternParserRuleCall_6_0_0()); }
	ruleAstOutputPattern{ after(grammarAccess.getAstActionAccess().getOutputsAstOutputPatternParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__OutputsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getOutputsAstOutputPatternParserRuleCall_6_1_1_0()); }
	ruleAstOutputPattern{ after(grammarAccess.getAstActionAccess().getOutputsAstOutputPatternParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__GuardsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGuardsAstExpressionParserRuleCall_7_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstActionAccess().getGuardsAstExpressionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__GuardsAssignment_7_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getGuardsAstExpressionParserRuleCall_7_2_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstActionAccess().getGuardsAstExpressionParserRuleCall_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__VariablesAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstActionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__VariablesAssignment_8_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_2_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstActionAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_8_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAction__StatementsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstActionAccess().getStatementsAstStatementParserRuleCall_9_1_0()); }
	ruleAstStatement{ after(grammarAccess.getAstActionAccess().getStatementsAstStatementParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstInitializeAccess().getAnnotationsAstAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__TagAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getTagAstTagParserRuleCall_2_0_0()); }
	ruleAstTag{ after(grammarAccess.getAstInitializeAccess().getTagAstTagParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__OutputsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getOutputsAstOutputPatternParserRuleCall_5_0_0()); }
	ruleAstOutputPattern{ after(grammarAccess.getAstInitializeAccess().getOutputsAstOutputPatternParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__OutputsAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getOutputsAstOutputPatternParserRuleCall_5_1_1_0()); }
	ruleAstOutputPattern{ after(grammarAccess.getAstInitializeAccess().getOutputsAstOutputPatternParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__GuardsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGuardsAstExpressionParserRuleCall_6_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstInitializeAccess().getGuardsAstExpressionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__GuardsAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getGuardsAstExpressionParserRuleCall_6_2_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstInitializeAccess().getGuardsAstExpressionParserRuleCall_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__VariablesAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstInitializeAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__VariablesAssignment_7_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_2_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstInitializeAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInitialize__StatementsAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInitializeAccess().getStatementsAstStatementParserRuleCall_8_1_0()); }
	ruleAstStatement{ after(grammarAccess.getAstInitializeAccess().getStatementsAstStatementParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__PortAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getPortAstPortCrossReference_0_0_0()); }
(
{ before(grammarAccess.getAstInputPatternAccess().getPortAstPortIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAstInputPatternAccess().getPortAstPortIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getAstInputPatternAccess().getPortAstPortCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__TokensAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getTokensAstTokenParserRuleCall_2_0()); }
	ruleAstToken{ after(grammarAccess.getAstInputPatternAccess().getTokensAstTokenParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__TokensAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getTokensAstTokenParserRuleCall_3_1_0()); }
	ruleAstToken{ after(grammarAccess.getAstInputPatternAccess().getTokensAstTokenParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstInputPattern__RepeatAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstInputPatternAccess().getRepeatAstExpressionParserRuleCall_5_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstInputPatternAccess().getRepeatAstExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstToken__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTokenAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getAstTokenAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__PortAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getPortAstPortCrossReference_0_0_0()); }
(
{ before(grammarAccess.getAstOutputPatternAccess().getPortAstPortIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAstOutputPatternAccess().getPortAstPortIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getAstOutputPatternAccess().getPortAstPortCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getValuesAstExpressionParserRuleCall_2_0()); }
	ruleAstExpression{ after(grammarAccess.getAstOutputPatternAccess().getValuesAstExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getValuesAstExpressionParserRuleCall_3_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstOutputPatternAccess().getValuesAstExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstOutputPattern__RepeatAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstOutputPatternAccess().getRepeatAstExpressionParserRuleCall_5_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstOutputPatternAccess().getRepeatAstExpressionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getTargetAstVariableReferenceParserRuleCall_0_0()); }
	ruleAstVariableReference{ after(grammarAccess.getAstStatementAssignAccess().getTargetAstVariableReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__IndexesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getIndexesAstExpressionParserRuleCall_1_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstStatementAssignAccess().getIndexesAstExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__MemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getMemberAstMemberAccessParserRuleCall_2_0()); }
	ruleAstMemberAccess{ after(grammarAccess.getAstStatementAssignAccess().getMemberAstMemberAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementAssign__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementAssignAccess().getValueAstExpressionParserRuleCall_4_0()); }
	ruleAstExpression{ after(grammarAccess.getAstStatementAssignAccess().getValueAstExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__ProcedureAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getProcedureAstProcedureCrossReference_0_0()); }
(
{ before(grammarAccess.getAstStatementCallAccess().getProcedureAstProcedureIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAstStatementCallAccess().getProcedureAstProcedureIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAstStatementCallAccess().getProcedureAstProcedureCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__ParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getParametersAstExpressionParserRuleCall_2_0_0()); }
	ruleAstExpression{ after(grammarAccess.getAstStatementCallAccess().getParametersAstExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementCall__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementCallAccess().getParametersAstExpressionParserRuleCall_2_1_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstStatementCallAccess().getParametersAstExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__GeneratorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_1_0()); }
	ruleAstForeachGenerator{ after(grammarAccess.getAstStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__GeneratorsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_2_1_0()); }
	ruleAstForeachGenerator{ after(grammarAccess.getAstStatementForeachAccess().getGeneratorsAstForeachGeneratorParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__VariablesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_3_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__VariablesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_3_2_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstStatementForeachAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementForeach__StatementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementForeachAccess().getStatementsAstStatementParserRuleCall_5_0()); }
	ruleAstStatement{ after(grammarAccess.getAstStatementForeachAccess().getStatementsAstStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstForeachGenerator__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstForeachGeneratorAccess().getVariableAstVariableDeclarationParserRuleCall_0_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstForeachGeneratorAccess().getVariableAstVariableDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstForeachGenerator__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstForeachGeneratorAccess().getExpressionAstExpressionParserRuleCall_2_0()); }
	ruleAstExpression{ after(grammarAccess.getAstForeachGeneratorAccess().getExpressionAstExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_2_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstStatementBlockAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__VariablesAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_2_2_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstStatementBlockAccess().getVariablesAstValuedVariableDeclarationParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementBlock__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementBlockAccess().getStatementsAstStatementParserRuleCall_3_0()); }
	ruleAstStatement{ after(grammarAccess.getAstStatementBlockAccess().getStatementsAstStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getConditionAstExpressionParserRuleCall_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstStatementIfAccess().getConditionAstExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getThenAstStatementParserRuleCall_3_0()); }
	ruleAstStatement{ after(grammarAccess.getAstStatementIfAccess().getThenAstStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementIf__ElseAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementIfAccess().getElseAstStatementParserRuleCall_4_1_0()); }
	ruleAstStatement{ after(grammarAccess.getAstStatementIfAccess().getElseAstStatementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementWhile__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementWhileAccess().getConditionAstExpressionParserRuleCall_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstStatementWhileAccess().getConditionAstExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstStatementWhile__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstStatementWhileAccess().getStatementsAstStatementParserRuleCall_3_0()); }
	ruleAstStatement{ after(grammarAccess.getAstStatementWhileAccess().getStatementsAstStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getOperatorAlternatives_1_1_0()); }
(rule__AstExpression__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAstExpressionAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAccess().getRightAstExpressionAndParserRuleCall_1_2_0()); }
	ruleAstExpressionAnd{ after(grammarAccess.getAstExpressionAccess().getRightAstExpressionAndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getOperatorAlternatives_1_1_0()); }
(rule__AstExpressionAnd__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAstExpressionAndAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAnd__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAndAccess().getRightAstExpressionBitorParserRuleCall_1_2_0()); }
	ruleAstExpressionBitor{ after(grammarAccess.getAstExpressionAndAccess().getRightAstExpressionBitorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitor__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getOperatorVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getAstExpressionBitorAccess().getOperatorVerticalLineKeyword_1_1_0()); }

	'|' 

{ after(grammarAccess.getAstExpressionBitorAccess().getOperatorVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getAstExpressionBitorAccess().getOperatorVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitor__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitorAccess().getRightAstExpressionBitxorParserRuleCall_1_2_0()); }
	ruleAstExpressionBitxor{ after(grammarAccess.getAstExpressionBitorAccess().getRightAstExpressionBitxorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitxor__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }

	'^' 

{ after(grammarAccess.getAstExpressionBitxorAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }
)

{ after(grammarAccess.getAstExpressionBitxorAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitxor__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitxorAccess().getRightAstExpressionBitandParserRuleCall_1_2_0()); }
	ruleAstExpressionBitand{ after(grammarAccess.getAstExpressionBitxorAccess().getRightAstExpressionBitandParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitand__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getOperatorAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getAstExpressionBitandAccess().getOperatorAmpersandKeyword_1_1_0()); }

	'&' 

{ after(grammarAccess.getAstExpressionBitandAccess().getOperatorAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getAstExpressionBitandAccess().getOperatorAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBitand__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBitandAccess().getRightAstExpressionEqParserRuleCall_1_2_0()); }
	ruleAstExpressionEq{ after(grammarAccess.getAstExpressionBitandAccess().getRightAstExpressionEqParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getOperatorAlternatives_1_1_0()); }
(rule__AstExpressionEq__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAstExpressionEqAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionEq__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionEqAccess().getRightAstExpressionRelationalParserRuleCall_1_2_0()); }
	ruleAstExpressionRelational{ after(grammarAccess.getAstExpressionEqAccess().getRightAstExpressionRelationalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getOperatorAlternatives_1_1_0()); }
(rule__AstExpressionRelational__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAstExpressionRelationalAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionRelational__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionRelationalAccess().getRightAstExpressionShiftParserRuleCall_1_2_0()); }
	ruleAstExpressionShift{ after(grammarAccess.getAstExpressionRelationalAccess().getRightAstExpressionShiftParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getOperatorAlternatives_1_1_0()); }
(rule__AstExpressionShift__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAstExpressionShiftAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionShift__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionShiftAccess().getRightAstExpressionAdditiveParserRuleCall_1_2_0()); }
	ruleAstExpressionAdditive{ after(grammarAccess.getAstExpressionShiftAccess().getRightAstExpressionAdditiveParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getOperatorAlternatives_1_1_0()); }
(rule__AstExpressionAdditive__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAstExpressionAdditiveAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionAdditive__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionAdditiveAccess().getRightAstExpressionMultiplicativeParserRuleCall_1_2_0()); }
	ruleAstExpressionMultiplicative{ after(grammarAccess.getAstExpressionAdditiveAccess().getRightAstExpressionMultiplicativeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAlternatives_1_1_0()); }
(rule__AstExpressionMultiplicative__OperatorAlternatives_1_1_0)
{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getOperatorAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionMultiplicative__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionMultiplicativeAccess().getRightAstExpressionExpParserRuleCall_1_2_0()); }
	ruleAstExpressionExp{ after(grammarAccess.getAstExpressionMultiplicativeAccess().getRightAstExpressionExpParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionExp__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionExpAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }
(
{ before(grammarAccess.getAstExpressionExpAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }

	'**' 

{ after(grammarAccess.getAstExpressionExpAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }
)

{ after(grammarAccess.getAstExpressionExpAccess().getOperatorAsteriskAsteriskKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionExp__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionExpAccess().getRightAstExpressionUnaryParserRuleCall_1_2_0()); }
	ruleAstExpressionUnary{ after(grammarAccess.getAstExpressionExpAccess().getRightAstExpressionUnaryParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionUnary__UnaryOperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorAlternatives_0_1_0()); }
(rule__AstExpressionUnary__UnaryOperatorAlternatives_0_1_0)
{ after(grammarAccess.getAstExpressionUnaryAccess().getUnaryOperatorAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionUnary__ExpressionAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionUnaryAccess().getExpressionAstExpressionPostfixParserRuleCall_0_2_0()); }
	ruleAstExpressionPostfix{ after(grammarAccess.getAstExpressionUnaryAccess().getExpressionAstExpressionPostfixParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__FunctionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getFunctionAstFunctionCrossReference_0_0()); }
(
{ before(grammarAccess.getAstExpressionCallAccess().getFunctionAstFunctionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAstExpressionCallAccess().getFunctionAstFunctionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAstExpressionCallAccess().getFunctionAstFunctionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__ParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getParametersAstExpressionParserRuleCall_2_0_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionCallAccess().getParametersAstExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionCall__ParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionCallAccess().getParametersAstExpressionParserRuleCall_2_1_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionCallAccess().getParametersAstExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getConditionAstExpressionParserRuleCall_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionIfAccess().getConditionAstExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__ThenAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getThenAstExpressionParserRuleCall_3_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionIfAccess().getThenAstExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionIf__ElseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIfAccess().getElseAstExpressionParserRuleCall_5_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionIfAccess().getElseAstExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__ExpressionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getExpressionsAstExpressionParserRuleCall_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionListAccess().getExpressionsAstExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__ExpressionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getExpressionsAstExpressionParserRuleCall_2_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionListAccess().getExpressionsAstExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__GeneratorsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getGeneratorsAstGeneratorParserRuleCall_3_1_0()); }
	ruleAstGenerator{ after(grammarAccess.getAstExpressionListAccess().getGeneratorsAstGeneratorParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionList__GeneratorsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionListAccess().getGeneratorsAstGeneratorParserRuleCall_3_2_1_0()); }
	ruleAstGenerator{ after(grammarAccess.getAstExpressionListAccess().getGeneratorsAstGeneratorParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstGenerator__VariableAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstGeneratorAccess().getVariableAstVariableDeclarationParserRuleCall_1_0()); }
	ruleAstVariableDeclaration{ after(grammarAccess.getAstGeneratorAccess().getVariableAstVariableDeclarationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstGenerator__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstGeneratorAccess().getExpressionAstExpressionParserRuleCall_3_0()); }
	ruleAstExpression{ after(grammarAccess.getAstGeneratorAccess().getExpressionAstExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getValueAstVariableReferenceParserRuleCall_0_0()); }
	ruleAstVariableReference{ after(grammarAccess.getAstExpressionVariableAccess().getValueAstVariableReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__IndexesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getIndexesAstExpressionParserRuleCall_1_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstExpressionVariableAccess().getIndexesAstExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionVariable__MemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionVariableAccess().getMemberAstMemberAccessParserRuleCall_2_0()); }
	ruleAstMemberAccess{ after(grammarAccess.getAstExpressionVariableAccess().getMemberAstMemberAccessParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionBoolean__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionBooleanAccess().getValueBOOLTerminalRuleCall_0()); }
	RULE_BOOL{ after(grammarAccess.getAstExpressionBooleanAccess().getValueBOOLTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionFloat__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionFloatAccess().getValueREALParserRuleCall_0()); }
	ruleREAL{ after(grammarAccess.getAstExpressionFloatAccess().getValueREALParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionInteger__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionIntegerAccess().getValueAlternatives_0()); }
(rule__AstExpressionInteger__ValueAlternatives_0)
{ after(grammarAccess.getAstExpressionIntegerAccess().getValueAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstExpressionString__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstExpressionStringAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getAstExpressionStringAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__BuiltinAssignment_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getBuiltinAstBuiltInTypeParserRuleCall_0_1_0_0_0()); }
	ruleAstBuiltInType{ after(grammarAccess.getAstTypeAccess().getBuiltinAstBuiltInTypeParserRuleCall_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__TypeParamsAssignment_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getTypeParamsAstTypeParameterListParserRuleCall_0_1_0_1_0()); }
	ruleAstTypeParameterList{ after(grammarAccess.getAstTypeAccess().getTypeParamsAstTypeParameterListParserRuleCall_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__DimensionsAssignment_0_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDimensionsAstExpressionParserRuleCall_0_1_0_2_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstTypeAccess().getDimensionsAstExpressionParserRuleCall_0_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__NameAssignment_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getNameAstTypeNameCrossReference_0_1_1_0_0()); }
(
{ before(grammarAccess.getAstTypeAccess().getNameAstTypeNameIDTerminalRuleCall_0_1_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAstTypeAccess().getNameAstTypeNameIDTerminalRuleCall_0_1_1_0_0_1()); }
)
{ after(grammarAccess.getAstTypeAccess().getNameAstTypeNameCrossReference_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__TypeParamsAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getTypeParamsAstTypeParameterListParserRuleCall_0_1_1_1_0()); }
	ruleAstTypeParameterList{ after(grammarAccess.getAstTypeAccess().getTypeParamsAstTypeParameterListParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__DimensionsAssignment_0_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDimensionsAstExpressionParserRuleCall_0_1_1_2_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstTypeAccess().getDimensionsAstExpressionParserRuleCall_0_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__DomainAssignment_0_1_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_0_1_2_1_0_0()); }
	ruleAstType{ after(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_0_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__DomainAssignment_0_1_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_0_1_2_1_1_1_0()); }
	ruleAstType{ after(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_0_1_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__CodomainAssignment_0_1_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getCodomainAstTypeParserRuleCall_0_1_2_3_0_0()); }
	ruleAstType{ after(grammarAccess.getAstTypeAccess().getCodomainAstTypeParserRuleCall_0_1_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstType__DomainAssignment_0_1_2_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_0_1_2_3_1_1_0()); }
	ruleAstType{ after(grammarAccess.getAstTypeAccess().getDomainAstTypeParserRuleCall_0_1_2_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__MembersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_0_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstTypeTupleAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeTuple__MembersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeTupleAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_1_1_0()); }
	ruleAstValuedVariableDeclaration{ after(grammarAccess.getAstTypeTupleAccess().getMembersAstValuedVariableDeclarationParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__ParamsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getParamsAstTypeParamParserRuleCall_1_0()); }
	ruleAstTypeParam{ after(grammarAccess.getAstTypeParameterListAccess().getParamsAstTypeParamParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParameterList__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParameterListAccess().getParamsAstTypeParamParserRuleCall_2_1_0()); }
	ruleAstTypeParam{ after(grammarAccess.getAstTypeParameterListAccess().getParamsAstTypeParamParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getAstTypeParamAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__ValueAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getValueAstExpressionParserRuleCall_0_2_0()); }
	ruleAstExpression{ after(grammarAccess.getAstTypeParamAccess().getValueAstExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getNameAlternatives_1_0_0()); }
(rule__AstTypeParam__NameAlternatives_1_0_0)
{ after(grammarAccess.getAstTypeParamAccess().getNameAlternatives_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstTypeParam__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstTypeParamAccess().getTypeAstTypeParserRuleCall_1_2_0()); }
	ruleAstType{ after(grammarAccess.getAstTypeParamAccess().getTypeAstTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
	ruleAstAnnotation{ after(grammarAccess.getAstVariableDeclarationAccess().getAnnotationsAstAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getTypeAstTypeParserRuleCall_1_0()); }
	ruleAstType{ after(grammarAccess.getAstVariableDeclarationAccess().getTypeAstTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAstVariableDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableDeclaration__DimensionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableDeclarationAccess().getDimensionsAstExpressionParserRuleCall_3_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstVariableDeclarationAccess().getDimensionsAstExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstValuedVariableDeclaration__ConstantAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getConstantEqualsSignKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getConstantEqualsSignKeyword_1_0_0_0()); }

	'=' 

{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getConstantEqualsSignKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getConstantEqualsSignKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstValuedVariableDeclaration__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstValuedVariableDeclarationAccess().getValueAstExpressionParserRuleCall_1_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstValuedVariableDeclarationAccess().getValueAstExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstVariableReference__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstVariableReferenceAccess().getVariableAstVariableCrossReference_0()); }
(
{ before(grammarAccess.getAstVariableReferenceAccess().getVariableAstVariableIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getAstVariableReferenceAccess().getVariableAstVariableIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getAstVariableReferenceAccess().getVariableAstVariableCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAstMemberAccessAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstMemberAccess__MemberIndexAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstMemberAccessAccess().getMemberIndexAstExpressionParserRuleCall_2_1_0()); }
	ruleAstExpression{ after(grammarAccess.getAstMemberAccessAccess().getMemberIndexAstExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAstAnnotationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__ArgumentsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getArgumentsAstAnnotationArgumentParserRuleCall_2_1_0()); }
	ruleAstAnnotationArgument{ after(grammarAccess.getAstAnnotationAccess().getArgumentsAstAnnotationArgumentParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotation__ArgumentsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationAccess().getArgumentsAstAnnotationArgumentParserRuleCall_2_2_1_0()); }
	ruleAstAnnotationArgument{ after(grammarAccess.getAstAnnotationAccess().getArgumentsAstAnnotationArgumentParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotationArgument__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationArgumentAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAstAnnotationArgumentAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AstAnnotationArgument__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAstAnnotationArgumentAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getAstAnnotationArgumentAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOL : ('true'|'false');

RULE_EXP_INT : RULE_INT ('e'|'E') ('-'|'+')? RULE_INT;

RULE_HEX : '0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'$')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


